<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LixT&#39;s Blog</title>
  
  <subtitle>不务正业的日子</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lixint.github.io/"/>
  <updated>2019-01-22T12:50:38.395Z</updated>
  <id>https://lixint.github.io/</id>
  
  <author>
    <name>LixT</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Next主题自带部分标签使用教程</title>
    <link href="https://lixint.github.io/next-syntax.html"/>
    <id>https://lixint.github.io/next-syntax.html</id>
    <published>2019-01-15T03:49:00.000Z</published>
    <updated>2019-01-22T12:50:38.395Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2019年01月22日20:50</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><blockquote class="blockquote-center"><p>欢迎加入博客搭建交流群（QQ群号60429576）==&gt;<a style="color:#ff0033" href="http://qq.cn.hn/g6Y" title="QQ群号60429576" rel="noopener" target="_blank"><strong>点击加入</strong></a>&lt;==</p></blockquote><p>本文内容全部来自<span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0Lm9yZy8=" title="Next主题官方博客"><a>Next主题官方博客</a><i class="fa fa-external-link"></i></span>。</p><p>前段时间在修改主题的时候发现的这个博客，发现了很多Next主题中带的一些标签的用法。如下：</p><blockquote><p>居中标签</p><p>原始内容标签</p><p>Note标签</p></blockquote><h3 id="居中标签"><a href="#居中标签" class="headerlink" title="居中标签"></a>居中标签</h3><p>使用<code>{% centerquote %}</code>或者<code>{% cq %}</code>标签包裹内容，实现内容居中的效果。注意内容后要用<code>{% endcenterquote %}</code>或<code>{% endcq %}</code>结尾。</p><p>例如：</p><div class="tabs" id="cq"><ul class="nav-tabs"><li class="tab active"><a href="#cq-1"><p>centerquote样例</p></a></li><li class="tab"><a href="#cq-2"><p>cq样例</p></a></li></ul><div class="tab-content"><div class="tab-pane active" id="cq-1"><p><strong>代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% centerquote %&#125;被包裹的内容&#123;% endcenterquote %&#125;</span><br></pre></td></tr></table></figure><p><strong>效果：</strong></p><blockquote class="blockquote-center"><p>被包裹的内容</p><br></blockquote></div><div class="tab-pane" id="cq-2"><p><strong>代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% cq %&#125;Something&#123;% endcq %&#125;</span><br></pre></td></tr></table></figure><p><strong>效果：</strong></p><blockquote class="blockquote-center"><p>Something</p><br></blockquote></div></div></div><h3 id="原始内容标签"><a href="#原始内容标签" class="headerlink" title="原始内容标签"></a>原始内容标签</h3><p>使用<code>{% include_raw '路径' %}</code>标签引入html文件中的内容。</p><p>例子：</p><p>新建<code>1.html</code>文件在<code>根目录/source/_data/</code>，没有<code>_data</code>文件夹的话新建一个。<code>1.html</code>内写入如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;strong&gt;include_raw&lt;/strong&gt;标签使用样例，来自&lt;a href = &quot;https://www.lixint.me&quot;&gt;LixT&apos;s Blog&lt;/a&gt;。</span><br></pre></td></tr></table></figure><p>文章中需要的位置写入如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include_raw &apos;_data/1.html&apos; %&#125;</span><br></pre></td></tr></table></figure><p>效果：</p><strong>include_raw</strong>标签使用样例，来自<a href="https://www.lixint.me" target="_blank" rel="noopener">LixT's Blog</a>。<h3 id="Note标签"><a href="#Note标签" class="headerlink" title="Note标签"></a>Note标签</h3><p>基本配置</p><p>可以在<a style="color:#9900ff"><strong>主题配置文件</strong></a>找到如下配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">note:</span></span><br><span class="line">  <span class="comment"># Note tag style values:</span></span><br><span class="line">  <span class="comment">#  - simple    bs-callout old alert style. Default.</span></span><br><span class="line">  <span class="comment">#  - modern    bs-callout new (v2-v3) alert style.</span></span><br><span class="line">  <span class="comment">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span></span><br><span class="line">  <span class="comment">#  - disabled  disable all CSS styles import of note tag.</span></span><br><span class="line"><span class="attr">  style:</span> <span class="string">simple</span></span><br><span class="line"><span class="attr">  icons:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  border_radius:</span> <span class="number">3</span></span><br><span class="line">  <span class="comment"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line">  <span class="comment"># Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line"><span class="attr">  light_bg_offset:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p>使用方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#语法</span><br><span class="line">&#123;% note class icon %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">#参数解释</span><br><span class="line">class可选项   : default | primary | success | info | warning | danger.</span><br><span class="line">icon可选项 : on-icon | 不填</span><br></pre></td></tr></table></figure><div class="note danger"><p><strong>icon项注意</strong></p><p>默认是不显示图标的，需要显示图标的话需要在<a style="color:#9900ff"><strong>主题配置文件</strong></a>中修改<code>note</code>下的<code>icon</code>项为<code>true</code>。此时全局默认为显示图标，如果此时需要单个标签不显示图标，则可在在标签后添加参数<code>no-icon</code>，具体看下面的例子</p></div><div class="note danger"><p><strong>代码块注意</strong></p><p>如果需要在标签内使用代码块的话，需要使用<code>{% codeblock %}代码{% endcodeblock %}</code>，代码块标签用法参考<a href="https://hexo.io/zh-cn/docs/tag-plugins#%E4%BB%A3%E7%A0%81%E5%9D%97" target="_blank" rel="noopener">代码块标签用法</a></p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock %&#125;</span><br><span class="line">import requests</span><br><span class="line">s = requests.session()</span><br><span class="line">r = s.get(&quot;https://www.lixint.me&quot;)</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure></div><p>使用样例：</p><div class="tabs" id="notes"><ul class="nav-tabs"><li class="tab active"><a href="#notes-1"><p>不定义样式</p></a></li><li class="tab"><a href="#notes-2"><p>default</p></a></li><li class="tab"><a href="#notes-3"><p>primary</p></a></li><li class="tab"><a href="#notes-4"><p>info</p></a></li><li class="tab"><a href="#notes-5"><p>success</p></a></li><li class="tab"><a href="#notes-6"><p>warning</p></a></li><li class="tab"><a href="#notes-7"><p>danger</p></a></li></ul><div class="tab-content"><div class="tab-pane active" id="notes-1"><p><strong>代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note %&#125;</span><br><span class="line">#### 标题</span><br><span class="line">可以用基本的Markdown语法，我的标题样式修改过，所以在note标签内显示不太美观</span><br><span class="line">只用note则不定义样式</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p><strong>效果：</strong></p><div class="note "><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><p>可以用基本的Markdown语法，我的标题样式修改过，所以在note标签内显示不太美观<br>只用note则不定义样式</p></div></div><div class="tab-pane" id="notes-2"><p><strong>代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note default %&#125;</span><br><span class="line">#### 标题</span><br><span class="line">可以用基本的Markdown语法，我的标题样式修改过，所以在note标签内显示不太美观</span><br><span class="line">欢迎来到[LixT&apos;s Blog](https://www.lixint.me)</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note default no-icon %&#125;</span><br><span class="line">不显示图标效果</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p><strong>效果：</strong></p><div class="note default"><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><p>可以用基本的Markdown语法，我的标题样式修改过，所以在note标签内显示不太美观<br>欢迎来到<a href="https://www.lixint.me" target="_blank" rel="noopener">LixT’s Blog</a></p></div><div class="note default no-icon"><p>不显示图标效果</p></div></div><div class="tab-pane" id="notes-3"><p><strong>代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note primary %&#125;</span><br><span class="line">#### 标题</span><br><span class="line">可以用基本的Markdown语法，我的标题样式修改过，所以在note标签内显示不太美观</span><br><span class="line">欢迎来到[LixT&apos;s Blog](https://www.lixint.me)</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note primary no-icon %&#125;</span><br><span class="line">不显示图标效果</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p><strong>效果：</strong></p><div class="note primary"><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><p>可以用基本的Markdown语法，我的标题样式修改过，所以在note标签内显示不太美观<br>欢迎来到<a href="https://www.lixint.me" target="_blank" rel="noopener">LixT’s Blog</a></p></div><div class="note primary no-icon"><p>不显示图标效果</p></div></div><div class="tab-pane" id="notes-4"><p><strong>代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note info %&#125;</span><br><span class="line">#### 标题</span><br><span class="line">可以用基本的Markdown语法，我的标题样式修改过，所以在note标签内显示不太美观</span><br><span class="line">欢迎来到[LixT&apos;s Blog](https://www.lixint.me)</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note info no-icon %&#125;</span><br><span class="line">不显示图标效果</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p><strong>效果：</strong></p><div class="note info"><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><p>可以用基本的Markdown语法，我的标题样式修改过，所以在note标签内显示不太美观<br>欢迎来到<a href="https://www.lixint.me" target="_blank" rel="noopener">LixT’s Blog</a></p></div><div class="note info no-icon"><p>不显示图标效果</p></div></div><div class="tab-pane" id="notes-5"><p><strong>代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note success %&#125;</span><br><span class="line">#### 标题</span><br><span class="line">可以用基本的Markdown语法，我的标题样式修改过，所以在note标签内显示不太美观</span><br><span class="line">欢迎来到[LixT&apos;s Blog](https://www.lixint.me)</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note success no-icon %&#125;</span><br><span class="line">不显示图标效果</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p><strong>效果：</strong></p><div class="note success"><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><p>可以用基本的Markdown语法，我的标题样式修改过，所以在note标签内显示不太美观<br>欢迎来到<a href="https://www.lixint.me" target="_blank" rel="noopener">LixT’s Blog</a></p></div><div class="note success no-icon"><p>不显示图标效果</p></div></div><div class="tab-pane" id="notes-6"><p><strong>代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note warning %&#125;</span><br><span class="line">#### 标题</span><br><span class="line">可以用基本的Markdown语法，我的标题样式修改过，所以在note标签内显示不太美观</span><br><span class="line">欢迎来到[LixT&apos;s Blog](https://www.lixint.me)</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note warning no-icon %&#125;</span><br><span class="line">不显示图标效果</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p><strong>效果：</strong></p><div class="note warning"><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><p>可以用基本的Markdown语法，我的标题样式修改过，所以在note标签内显示不太美观<br>欢迎来到<a href="https://www.lixint.me" target="_blank" rel="noopener">LixT’s Blog</a></p></div><div class="note warning no-icon"><p>不显示图标效果</p></div></div><div class="tab-pane" id="notes-7"><p><strong>代码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note danger %&#125;</span><br><span class="line">#### 标题</span><br><span class="line">可以用基本的Markdown语法，我的标题样式修改过，所以在note标签内显示不太美观</span><br><span class="line">欢迎来到[LixT&apos;s Blog](https://www.lixint.me)</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note danger no-icon %&#125;</span><br><span class="line">不显示图标效果</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p><strong>效果：</strong></p><div class="note danger"><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><p>可以用基本的Markdown语法，我的标题样式修改过，所以在note标签内显示不太美观<br>欢迎来到<a href="https://www.lixint.me" target="_blank" rel="noopener">LixT’s Blog</a></p></div><div class="note danger no-icon"><p>不显示图标效果</p></div></div></div></div><h3 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h3><p><strong>语法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% button url, text, icon [class], [title] %&#125;</span><br><span class="line">&lt;!-- Tag Alias --&gt;</span><br><span class="line">&#123;% btn url, text, icon [class], [title] %&#125;</span><br><span class="line"></span><br><span class="line">url     : 链接或相对路径</span><br><span class="line">text    : 按钮显示文本，如果没设置图标，必须要设置文本</span><br><span class="line">icon    : FontAwesome图标，不需要加前面的fa-,如果没设置文本，必须要设置图标</span><br><span class="line">[class] : FontAwesome class(es)，可选项： fa-fw | fa-lg | fa-2x | fa-3x | fa-4x | fa-5x</span><br><span class="line">          可选参数</span><br><span class="line">[title] : 鼠标悬停时显示的文本</span><br><span class="line">          可选参数</span><br></pre></td></tr></table></figure><p><strong>例子</strong></p><p>我的博客改过按钮样式，所以效果出来不好看，请自行尝试。</p><div class="tabs" id="button"><ul class="nav-tabs"><li class="tab active"><a href="#button-1"><p>基础用法</p></a></li><li class="tab"><a href="#button-2"><p>文本&amp;标题</p></a></li><li class="tab"><a href="#button-3"><p>按钮图标</p></a></li><li class="tab"><a href="#button-4"><p>文本&amp;图标</p></a></li><li class="tab"><a href="#button-5"><p>文中引用</p></a></li><li class="tab"><a href="#button-6"><p>按钮边距</p></a></li></ul><div class="tab-content"><div class="tab-pane active" id="button-1"><p><strong>代码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% button https://lixint.me, LixT&apos;s_Blog %&#125;</span><br></pre></td></tr></table></figure><p><strong>效果</strong></p><p><a class="btn" href="https://lixint.me" target="_blank" rel="noopener">LixT’s_Blog</a></p></div><div class="tab-pane" id="button-2"><p><strong>代码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn #, Text %&#125;&#123;% btn #, Text &amp; Title,, Title %&#125;</span><br></pre></td></tr></table></figure><p><strong>效果</strong></p><p><a class="btn" href="#">Text</a><a class="btn" href="#" title="Title">Text &amp; Title</a></p><p><strong>代码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn #, Text %&#125; &#123;% btn #, Text &amp; Title,, Title %&#125;</span><br></pre></td></tr></table></figure><p><strong>效果</strong></p><p><a class="btn" href="#">Text</a><a class="btn" href="#" title="Title">Text &amp; Title</a></p><p><strong>代码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn #, Text %&#125;</span><br><span class="line">&#123;% btn #, Text &amp; Title,, Title %&#125;</span><br></pre></td></tr></table></figure><p><strong>效果</strong></p><p><a class="btn" href="#">Text</a><br><a class="btn" href="#" title="Title">Text &amp; Title</a></p></div><div class="tab-pane" id="button-3"><p><strong>代码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">`&lt;div&gt;&#123;% btn #,, home fa-5x %&#125;&#123;% btn #,, home fa-5x %&#125;&#123;% btn #,, home fa-5x %&#125;&lt;/div&gt;&lt;div&gt;&#123;% btn #,, home fa-4x %&#125;&#123;% btn #,, home fa-4x %&#125;&#123;% btn #,, home fa-4x %&#125;&lt;/div&gt;&lt;div&gt;&#123;% btn #,, home fa-3x %&#125;&#123;% btn #,, home fa-3x %&#125;&#123;% btn #,, home fa-3x %&#125;&lt;/div&gt;&lt;div&gt;&#123;% btn #,, home fa-2x %&#125;&#123;% btn #,, home fa-2x %&#125;&#123;% btn #,, home fa-2x %&#125;&lt;/div&gt;&lt;div&gt;&#123;% btn #,, home fa-lg %&#125;&#123;% btn #,, home fa-lg %&#125;&#123;% btn #,, home fa-lg %&#125;&lt;/div&gt;&lt;div&gt;&#123;% btn #,, home %&#125;&#123;% btn #,, home %&#125;&#123;% btn #,, home %&#125;&lt;/div&gt;`</span><br><span class="line">#不加div标签效果</span><br><span class="line">&#123;% btn #,, home %&#125;&#123;% btn #,, home %&#125;&#123;% btn #,, home %&#125;</span><br></pre></td></tr></table></figure><p><strong>效果</strong></p><div><a class="btn" href="#"><i class="fa fa-home fa-5x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-5x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-5x"></i></a></div><div><a class="btn" href="#"><i class="fa fa-home fa-4x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-4x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-4x"></i></a></div><div><a class="btn" href="#"><i class="fa fa-home fa-3x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-3x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-3x"></i></a></div><div><a class="btn" href="#"><i class="fa fa-home fa-2x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-2x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-2x"></i></a></div><div><a class="btn" href="#"><i class="fa fa-home fa-lg"></i></a><a class="btn" href="#"><i class="fa fa-home fa-lg"></i></a><a class="btn" href="#"><i class="fa fa-home fa-lg"></i></a></div><div><a class="btn" href="#"><i class="fa fa-home"></i></a><a class="btn" href="#"><i class="fa fa-home"></i></a><a class="btn" href="#"><i class="fa fa-home"></i></a></div><hr><p>#不加div标签效果</p><p><a class="btn" href="#"><i class="fa fa-home"></i></a><a class="btn" href="#"><i class="fa fa-home"></i></a><a class="btn" href="#"><i class="fa fa-home"></i></a></p></div><div class="tab-pane" id="button-4"><p><strong>代码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;&#123;% btn #, Text &amp; Icon (buggy), home %&#125;</span><br><span class="line">&#123;% btn #, Text &amp; Icon (fixed width), home fa-fw %&#125;&lt;/p&gt;</span><br></pre></td></tr></table></figure><p><strong>效果</strong></p><p><a class="btn" href="#"><i class="fa fa-home"></i>Text &amp; Icon (buggy)</a><br><a class="btn" href="#"><i class="fa fa-home fa-fw"></i>Text &amp; Icon (fixed width)</a></p><p><strong>代码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;&#123;% btn #, Text &amp; Large Icon, home fa-fw fa-lg %&#125;</span><br><span class="line">&#123;% btn #, Text &amp; Large Icon &amp; Title, home fa-fw fa-lg, Title %&#125;&lt;/p&gt;</span><br></pre></td></tr></table></figure><p><strong>效果</strong></p><p><a class="btn" href="#"><i class="fa fa-home fa-fw fa-lg"></i>Text &amp; Large Icon</a><br><a class="btn" href="#" title="Title"><i class="fa fa-home fa-fw fa-lg"></i>Text &amp; Large Icon &amp; Title</a></p></div><div class="tab-pane" id="button-5"><p><strong>代码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">文章中引用&#123;% btn #, 按钮, home fa-fw fa-lg %&#125;，直接在文中插入代码即可</span><br></pre></td></tr></table></figure><p><strong>效果</strong></p><p>文章中引用<a class="btn" href="#"><i class="fa fa-home fa-fw fa-lg"></i>按钮</a>，直接在文中插入代码即可</p></div><div class="tab-pane" id="button-6"><p><strong>代码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;text-center&quot;&gt;&lt;div&gt;&#123;% btn #,, header %&#125;&#123;% btn #,, edge %&#125;&#123;% btn #,, times %&#125;&#123;% btn #,, circle-o %&#125;&lt;/div&gt;</span><br><span class="line">&lt;div&gt;&#123;% btn #,, italic %&#125;&#123;% btn #,, scribd %&#125;&lt;/div&gt;</span><br><span class="line">&lt;div&gt;&#123;% btn #,, google %&#125;&#123;% btn #,, chrome %&#125;&#123;% btn #,, opera %&#125;&#123;% btn #,, diamond fa-rotate-270 %&#125;&lt;/div&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><strong>效果</strong></p><div class="text-center"><div><a class="btn" href="#"><i class="fa fa-header"></i></a><a class="btn" href="#"><i class="fa fa-edge"></i></a><a class="btn" href="#"><i class="fa fa-times"></i></a><a class="btn" href="#"><i class="fa fa-circle-o"></i></a></div><br><div><a class="btn" href="#"><i class="fa fa-italic"></i></a><a class="btn" href="#"><i class="fa fa-scribd"></i></a></div><br><div><a class="btn" href="#"><i class="fa fa-google"></i></a><a class="btn" href="#"><i class="fa fa-chrome"></i></a><a class="btn" href="#"><i class="fa fa-opera"></i></a><a class="btn" href="#"><i class="fa fa-diamond fa-rotate-270"></i></a></div></div></div></div></div><h3 id="行内标签"><a href="#行内标签" class="headerlink" title="行内标签"></a>行内标签</h3><p><strong>语法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label [class]@Text %&#125;</span><br><span class="line"></span><br><span class="line">[class] : 可选项default | primary | success | info | warning | danger.</span><br><span class="line">          &apos;@Text&apos; @后添加文本</span><br><span class="line">          如果没设置class的话，默认以default用法</span><br></pre></td></tr></table></figure><p><strong>代码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label @行内标签 %&#125;其实就是用各种&#123;% label primary@不同的颜色 %&#125;来标记文本，例如这是&#123;% label primary@primary标签 %&#125;，这是&#123;% label default@default标签 %&#125;，这是&#123;% label success@success标签 %&#125;，这是&#123;% label info@info标签 %&#125;，这是&#123;% label warning@warning标签 %&#125;,这是&#123;% label danger@danger标签 %&#125;,文本上可以加空格。这是&#123;% label success@不加空格的 %&#125;，这是&#123;% label success@加了    空格的 %&#125;</span><br></pre></td></tr></table></figure><span class="label default">行内标签</span>其实就是用各种<span class="label primary">不同的颜色</span>来标记文本，例如这是<span class="label primary">primary标签</span>，这是<span class="label default">default标签</span>，这是<span class="label success">success标签</span>，这是<span class="label info">info标签</span>，这是<span class="label warning">warning标签</span>,这是<span class="label danger">danger标签</span>,文本上可以加空格。这是<span class="label success">不加空格的</span>，这是<span class="label success">加了 空格的</span><h3 id="未完待续。。"><a href="#未完待续。。" class="headerlink" title="## 未完待续。。"></a>## 未完待续。。</h3>]]></content>
    
    <summary type="html">
    
      在Next主题的官方博客发现的一些主题内置的标签用法。
    
    </summary>
    
      <category term="博客搭建" scheme="https://lixint.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="https://lixint.github.io/tags/Hexo/"/>
    
      <category term="Next主题" scheme="https://lixint.github.io/tags/Next%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>利用OneDrive搭建私人网盘并使用Aria2实现下载后自动上传</title>
    <link href="https://lixint.github.io/onedrive.html"/>
    <id>https://lixint.github.io/onedrive.html</id>
    <published>2019-01-03T08:56:00.000Z</published>
    <updated>2020-03-11T13:27:52.027Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2020年03月11日21:27</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><p>准备工作：</p><blockquote><p>1.vps，需要绑定域名的话，可以用<span class="exturl" data-url="aHR0cHM6Ly9tLmRvLmNvL2MvNmYyODMyZmZhY2Rm" title="DigitalOcean"><a>DigitalOcean</a><i class="fa fa-external-link"></i></span>最低价格在5刀每月，支持支付宝，本文中用的就是这个。或者可以用<span class="exturl" data-url="aHR0cHM6Ly93d3cudnVsdHIuY29tLz9yZWY9NzcwMTgwMQ==" title="Vultr"><a>Vultr</a><i class="fa fa-external-link"></i></span>最低在2.5刀每月，以及<span class="exturl" title="阿里云香港"><a>阿里云香港</a> txamd.html 阿里云香港<i class="fa fa-external-link"></i></span> 24块钱一个月，跟前两个差不多。胜在速度快，购买节目跟控制台都是中文。<br>不需要绑定域名的话，可以看看能不能购买<span class="exturl" title="阿里云学生机"><a>阿里云学生机</a> txamd.html 阿里云学生机<i class="fa fa-external-link"></i></span>，10块钱一个月也挺实惠。没法买的话建议还是买Vultr或者DigitalOcean，即能绑定域名，又可以作他用。<br>2.OneDrive，个人版，教育版，企业版都可以。最近正好有活动可以免费撸一个5T的OneDrive，教程看<span class="exturl" data-url="aHR0cHM6Ly91MTkxNDQzODYuY3RmaWxlLmNvbS9mcy8xOTE0NDM4Ni0zMjkxMDgxNDI=" title="免费获得5T OneDrive空间"><a style="color:#ff0033">免费获得5T OneDrive空间</a><i class="fa fa-external-link"></i></span></p></blockquote><h3 id="安装宝塔面板"><a href="#安装宝塔面板" class="headerlink" title="安装宝塔面板"></a>安装宝塔面板</h3><div class="tabs" id="1"><ul class="nav-tabs"><li class="tab active"><a href="#1-1"><p>Centos安装脚本</p></a></li><li class="tab"><a href="#1-2"><p>Ubuntu/Deepin安装脚本</p></a></li><li class="tab"><a href="#1-3"><p>Debian安装脚本</p></a></li><li class="tab"><a href="#1-4"><p>Fedora安装脚本</p></a></li></ul><div class="tab-content"><div class="tab-pane active" id="1-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="1-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="1-3"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="1-4"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure></div></div></div><p>中间有需要输入Y的地方输入Y进行安装，等待安装完成，</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546505928625.png" alt="1546505928625"></p><p>安装完成后会显示面板管理页和账号密码</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546506138859.png" alt="1546506138859"></p><p>根据现实的信息进行访问</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546506214546.png" alt="1546506214546"></p><p>进入后系统自动提示安装环境，注意这里的PHP版本需要在5.5以上，Nginx跟PHP是必须安装的，其他可以根据需求进行安装。</p><p>选择好需要安装的环境，点击一键安装。关闭跳出来的消息盒子让他后台自己安装就行了。</p><p>默认的用户名跟密码不好记。我们来重置一下面板的用户名跟密码，选择面板设置</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546506441869.png" alt="1546506441869"></p><p>修改下方的用户名跟密码即可，修改完成后记得保存。</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546506465908.png" alt="1546506465908"></p><p>啊，需要等安装任务完成后才能修改，那我们等待安装完成吧。。</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546506574290.png" alt="1546506574290"></p><p>安装完成，设置好账户密码，进入面板首页</p><h4 id="点击添加网站"><a href="#点击添加网站" class="headerlink" title="点击添加网站"></a>点击添加网站</h4><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546509033655.png" alt="1546509033655"></p><p>如果有域名的话填写域名，没有的话就直接添加IP地址</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546509109620.png" alt="1546509109620"></p><p>点击提交后点击添加旁的管理按钮，找到之前添加的站点，点击网站目录</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546509253099.png" alt="1546509253099"></p><h4 id="下载OneIndex源码安装授权"><a href="#下载OneIndex源码安装授权" class="headerlink" title="下载OneIndex源码安装授权"></a>下载OneIndex源码安装授权</h4><p>然后我们来安装oneindex，首先到<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RvbndhL29uZWluZGV4" title="OneIndex项目页面"><a>OneIndex项目页面</a><i class="fa fa-external-link"></i></span>下载程序源码。</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546506739799.png" alt="1546506739799"></p><p>下载zip文件到本地即可。</p><p>网站目录中点击上传，把刚才下载的zip源码包上传到网站目录</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546509329511.png" alt="1546509329511"></p><p>右键单击，解压</p><p>解压完成后多了一个文件夹，进到文件夹中把里面所有文件都剪切到网站根目录。</p><p>此时打开站点绑定的域名或者ip地址进到OneIndex配置页面，点击下一步。</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546509457924.png" alt="1546509457924"></p><p>点击获取应用ID和机密，跳转到Microsoft的登录页。</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546509485061.png" alt="1546509485061"></p><p>登录之前申请好的OneDrive的账户</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546509549916.png" alt="1546509549916"></p><p>登录后显示应用机密，复制填入OneIndex配置页，然后点击下面的<code>知道了，返回到快速启动</code></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546510178760.png" alt="1546510178760"></p><p>复制新页面中的APPid</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546510252624.png" alt="1546510252624"></p><p>填写完毕，进行下一步。</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546510284187.png" alt="1546510284187"></p><p>点击绑定账号，绑定你之前的账号即可。</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546510332230.png" alt="1546510332230"></p><p>绑定完成，安装成功</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546511348098.png" alt="1546511348098"></p><h4 id="修改密码与去掉"><a href="#修改密码与去掉" class="headerlink" title="修改密码与去掉/?/"></a>修改密码与去掉/?/</h4><p>先进入管理后台进行设置。</p><p>设置去掉<code>/?/</code>，点击保存，进到宝塔面板站点设置。</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546511404873.png" alt="1546511404873"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546511479881.png" alt="1546511479881"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546511504968.png" alt="1546511504968"></p><p>设置好保存，回到OneIndex进行其他设置。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">不建议创建和以下同名的文件夹和文件，否则会导致文件无法查看下载</span></span><br><span class="line">README.md、HEAD.md 、.password 、.deny特殊文件使用</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">在文件夹底部添加说明</span></span><br><span class="line">在onedrive的文件夹中添加README.md文件，使用markdown语法。</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">在文件夹头部添加说明</span></span><br><span class="line">在onedrive的文件夹中添加HEAD.md 文件，使用markdown语法。</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">加密文件夹</span></span><br><span class="line">在onedrive的文件夹中添加.password文件，填入密码，密码不能为空。</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">禁止访问文件夹</span></span><br><span class="line">在onedrive的文件夹中添加.deny文件，该文件夹被禁止访问。</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">重置全部数据，删除数据库数据</span></span><br><span class="line">php artisan od:reset</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">重置OneDrive登陆账号</span></span><br><span class="line">php artisan od:logout</span><br><span class="line">    </span><br><span class="line"><span class="meta">#</span><span class="bash">升级程序</span></span><br><span class="line">git pull</span><br><span class="line">composer install -vvv</span><br><span class="line">php artisan od:update</span><br></pre></td></tr></table></figure><h3 id="Aria2安装"><a href="#Aria2安装" class="headerlink" title="Aria2安装"></a>Aria2安装</h3><p>这里使用<span class="exturl" data-url="aHR0cHM6Ly9kb3ViLmlv" title="https://doub.io"><a>逗逼根据地</a><i class="fa fa-external-link"></i></span>的脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/aria2.sh &amp;&amp; chmod +x aria2.sh &amp;&amp; bash aria2.sh</span><br><span class="line"><span class="meta">#</span><span class="bash">备用地址</span></span><br><span class="line">wget -N --no-check-certificate https://www.moerats.com/usr/shell/Aria2/aria2.sh &amp;&amp; chmod +x aria2.sh &amp;&amp; bash aria2.sh</span><br></pre></td></tr></table></figure><p>这个脚本使用很简单，安装提示的步骤操作即可。安装后记下中间设置的<code>下载路径</code>、<code>端口</code>及<code>密码</code>,也可以根据需要输入命令<code>bash aria2.sh</code>修改配置。</p><h3 id="安装AriaNg"><a href="#安装AriaNg" class="headerlink" title="安装AriaNg"></a>安装AriaNg</h3><p>这一步在宝塔面板中也很简单，跟OneIndex操作一样</p><p>到<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RvbndhL29uZWluZGV4L2FyY2hpdmUvbWFzdGVyLnppcA==" title="https://github.com/donwa/oneindex/archive/master.zip"><i class="fa fa-external-link"></i></span>下载Zip压缩包。</p><p>先添加网站，有域名的话绑定一个域名，如果没有域名的话，端口要跟OneIndex的不同。将压缩包上传至站点目录，解压至站点目录即可，跟OneIndex的操作是相同的。不作赘述。</p><p>配置AriaNg</p><p>打开之前设置的的AriaNg域名，点击AriaNG设置</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546507517513.png" alt="1546507517513"></p><p>例如我安装Aria2的云服务器IP是<code>123.123.123.123</code>，设置的端口是<code>6800</code>，第一行别名随意填</p><p>第二行地址也填上IP地址，端口也改成安装时设置的端口，填写好密钥，其他不用动。</p><p>填写完成后自动保存。</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546507929203.png" alt="1546507929203"></p><p>如果设置正确的话，下方的<code>Aria2状态</code>就会变成已连接</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/1546508073201.png" alt="1546508073201"></p><p>到这里，AriaNg的设置就完成了。</p><p>配置Aria2下载后自动上传至OneIndex</p><p>此处的方法与脚本都来自于<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tLzBvVmljZXJvMC9PbmVEcml2ZQ==" title="https://github.com/0oVicero0/OneDrive"><i class="fa fa-external-link"></i></span></p><h3 id="设置Aria2自动上传"><a href="#设置Aria2自动上传" class="headerlink" title="设置Aria2自动上传"></a>设置Aria2自动上传</h3><h4 id="安装脚本"><a href="#安装脚本" class="headerlink" title="安装脚本"></a>安装脚本</h4><div class="tabs" id="2"><ul class="nav-tabs"><li class="tab active"><a href="#2-1"><p>Ubuntu和Debian系统</p></a></li><li class="tab"><a href="#2-2"><p>Centos系统</p></a></li></ul><div class="tab-content"><div class="tab-pane active" id="2-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y curl</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="2-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install curl -y</span><br></pre></td></tr></table></figure></div></div></div><p>运行命令安装脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -qO- "https://raw.githubusercontent.com/0oVicero0/OneDrive/master/OneDrive.sh" |bash</span><br></pre></td></tr></table></figure><p>本脚本需要三个参数<code>Client ID</code>、<code>Secret</code>、<code>Reply URL</code>，均需要在<code>/usr/local/etc/OneDrive/onedrive.cfg</code>文件里修改，参数获取看下面，当然你也可以不用管，跳过参数获取部分进行下一步====&gt;运行账号认证程序</p><h4 id="获取参数"><a href="#获取参数" class="headerlink" title="获取参数"></a>获取参数</h4><p>先访问<a href="https://manage.windowsazure.com/" target="_blank" rel="noopener">Microsoft Azure Management Portal</a>，然后点击左侧菜单栏中的<code>Azure Active Directorg</code>，选择应用注册，再点击页面上方的新应用程序注册。</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/Onedrive_up1.png" alt="Onedrive_up1"></p><p>输入名称如：<code>OneDrive for Linux</code>，应用程序类型选择<code>Web应用/API</code>，填入登陆<code>URL</code>：<a href="https://login.microsoftonline.com/" target="_blank" rel="noopener">https://login.microsoftonline.com/</a>，再点击创建。</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/Onedrive_up2.png" alt="Onedrive_up2"></p><p>然后点击刚刚创建的应用程序，复制应用程序<code>ID</code>，即脚本需要的<code>Client ID</code>参数，再点击左上角的设置。</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/Onedrive_up3.png" alt="Onedrive_up3"></p><p>然后进行如下修改：</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/Onedrive_up4.png" alt="Onedrive_up4"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">点击右边的回复URL，将其修改为：https://onedrive.live.com/about/business/，即脚本所需要的Reply URL参数。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">点击所需权限，点击Windows Azure Active Directory确认是否已选中Sign <span class="keyword">in</span> and user profile，如果没有则选中并点击完成。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">点击上方的添加，点击选择API，选中Office 365 SharePoint Online，并点击选择。在选择权限中选中Read user files 和Read and write user files，并点击选择。点击完成按钮，并关掉此小窗口。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">点击密钥，填入密钥描述，如：OneDrive，选择年限1年，点击保存，再复制密匙，即脚本所需要的Secret参数。</span></span><br></pre></td></tr></table></figure><p>不过这里说下密匙(<code>Secret</code>参数)填写的一个坑，由<a href="https://www.234du.com/" target="_blank" rel="noopener">唯一度博主</a>填平。就是当我们获取到带<code>+</code>号的密匙时候，我们需要使用编码符号，把<code>+</code>改成<code>％2B</code>，然后再填入脚本里，不然最后会出现<code>Something went wrong, here is the API response</code>的错误，导致验证失败。</p><h4 id="运行账号认证程序"><a href="#运行账号认证程序" class="headerlink" title="运行账号认证程序"></a>运行账号认证程序</h4><p>运行命令<code>onedrive -a</code>，将返回的网址复制到浏览器打开，再登陆你的<code>OneDrive for Business</code>账号，登陆成功后复制地址栏中的地址(复制包括<code>localhost</code>的所有链接地址)，粘贴到<code>SSH</code>客户端里，敲回车键即可。</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/onedrive/Onedrive_up5.png" alt="Onedrive_up5"></p><p>如果返回以下字段：<code>It seems like we have a refresh token, so we are ready to go</code>，那就恭喜你，设置成功!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">提示：如果你遇到bash: onedrive: command not found错误，则需要找到/usr/local/etc/OneDrive文件夹，修改onedrive和onedrive-d脚本，在第二行都加上export PATH=/usr/local/bin:$PATH代码，再保存就行了。</span><br></pre></td></tr></table></figure><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><div class="tabs" id="3"><ul class="nav-tabs"><li class="tab active"><a href="#3-1"><p>使用命令</p></a></li><li class="tab"><a href="#3-2"><p>命令示范</p></a></li></ul><div class="tab-content"><div class="tab-pane active" id="3-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">onedrive --help</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">####################################################################</span></span></span><br><span class="line">Usage: onedrive [OPTIONS] file1 [file2...]</span><br><span class="line">       onedrive-d folder</span><br><span class="line"> </span><br><span class="line">Options:</span><br><span class="line">  -d, --debug        Enable debug mode</span><br><span class="line">  -a, --authorize    Run authorization process</span><br><span class="line">  -f, --folder       Upload files into this remote folder</span><br><span class="line">  -c, --creat        Creat remote folder."</span><br><span class="line">                     Directory names are separated with a slash, e.g.</span><br><span class="line">                     rootFolder/subFolder</span><br><span class="line">                     Do NOT use a trailing slash!</span><br><span class="line">  -h, --help         Show this help</span><br><span class="line">  -r, --rename       Rename the files during upload</span><br><span class="line">                     For each file you specify you MUST also specify</span><br><span class="line">                     the remote filename as the subsequent parameter</span><br><span class="line">                     Be especially careful with globbing!</span><br><span class="line">  -s, --silent       Silent mode for use in crontab scripts.</span><br><span class="line">                     Return only exit code.</span><br><span class="line">  -ls,--list         Show the itmes in this directory.</span><br><span class="line">  -l, --link         Show the file share link.</span><br><span class="line">      </span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">####################################################################</span></span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="3-2"><p>如果我们要上传<code>/root</code>文件夹里面的<code>moerats.txt</code>，使用命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">此命令默认上传到OneDrive根目录</span></span><br><span class="line">onedrive '/root/moerats.txt'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">如果上传到指定文件夹，就需要加-f参数</span></span><br><span class="line">onedrive -f RATS '/root/moerats.txt'  #上传到OneDrive根目录的RATS文件夹</span><br><span class="line">onedrive -f RATS/RATS '/root/moerats.txt'  #上传到OneDrive根目录RATS文件夹里的RATS文件夹</span><br></pre></td></tr></table></figure><p>如果我们要将<code>/root</code>文件夹及里面的文件夹和文件一起上传，使用命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">此命令默认上传到OneDrive根目录</span></span><br><span class="line">onedrive-d '/root'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">如果上传到指定文件夹，就需要加-f参数</span></span><br><span class="line">onedrive-d -f RATS '/root'  #上传到OneDrive根目录的RATS文件夹</span><br><span class="line">onedrive-d -f RATS/RATS '/root'  #上传到OneDrive根目录RATS文件夹里的RATS文件夹</span><br></pre></td></tr></table></figure><p>如果我们想直接查看<code>OneDrive</code>网盘目录的文件，使用命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">此命令只查看根目录文件</span></span><br><span class="line">onedrive -l</span><br><span class="line"><span class="meta">#</span><span class="bash">如果我们要查看根目录root文件夹里的文件</span></span><br><span class="line">onedrive -l /root</span><br></pre></td></tr></table></figure></div></div></div><h4 id="Aria2自动上传"><a href="#Aria2自动上传" class="headerlink" title="Aria2自动上传"></a>Aria2自动上传</h4><p>使用宝塔面板或者SSH，进入<code>/root/.aria2</code>文件夹，新建文件<code>upload.sh</code></p><p>编辑文件写入如下代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">GID="$1";</span><br><span class="line">FileNum="$2";</span><br><span class="line">File="$3";</span><br><span class="line">MaxSize="15728640"</span><br><span class="line">RemoteDIR="Download";  #上传到Onedrive的路径，默认为根目录，如果要上传到指定目录，方法看文章最后面。</span><br><span class="line">LocalDIR="/root/Download/";  #Aria2下载目录，记得最后面加上/</span><br><span class="line"></span><br><span class="line">if [[ -z $(echo "$FileNum" |grep -o '[0-9]*' |head -n1) ]]; then FileNum='0'; fi</span><br><span class="line">if [[ "$FileNum" -le '0' ]]; then exit 0; fi</span><br><span class="line">if [[ "$#" != '3' ]]; then exit 0; fi</span><br><span class="line"></span><br><span class="line">function LoadFile()&#123;</span><br><span class="line">  IFS_BAK=$IFS</span><br><span class="line">  IFS=$'\n'</span><br><span class="line">  if [[ ! -d "$LocalDIR" ]]; then return; fi</span><br><span class="line">  if [[ -e "$File" ]]; then</span><br><span class="line">    if [[ $(dirname "$File") == $(readlink -f $LocalDIR) ]]; then</span><br><span class="line">      ONEDRIVE="onedrive";</span><br><span class="line">    else</span><br><span class="line">      ONEDRIVE="onedrive-d";</span><br><span class="line">    fi</span><br><span class="line">    FileLoad="$&#123;File/#$LocalDIR&#125;"</span><br><span class="line">    while true</span><br><span class="line">      do</span><br><span class="line">        if [[ "$FileLoad" == '/' ]]; then return; fi</span><br><span class="line">        echo "$FileLoad" |grep -q '/';</span><br><span class="line">        if [[ "$?" == "0" ]]; then</span><br><span class="line">          FileLoad=$(dirname "$FileLoad");</span><br><span class="line">        else</span><br><span class="line">          break;</span><br><span class="line">        fi;</span><br><span class="line">      done;</span><br><span class="line">    if [[ "$FileLoad" == "$LocalDIR" ]]; then return; fi</span><br><span class="line">    if [[ -n "$RemoteDIR" ]]; then</span><br><span class="line">      Option=" -f $RemoteDIR";</span><br><span class="line">    else</span><br><span class="line">      Option="";</span><br><span class="line">    fi</span><br><span class="line">    EXEC="$(command -v $ONEDRIVE)";</span><br><span class="line">    if [[ -z "$EXEC" ]]; then return; fi</span><br><span class="line">    cd "$LocalDIR";</span><br><span class="line">    if [[ -e "$FileLoad" ]]; then</span><br><span class="line">      ItemSize=$(du -s "$FileLoad" |cut -f1 |grep -o '[0-9]*' |head -n1)</span><br><span class="line">      if [[ -z "$ItemSize" ]]; then return; fi</span><br><span class="line">      if [[ "$ItemSize" -ge "$MaxSize" ]]; then</span><br><span class="line">        echo -ne "\033[33m$File \033[0mtoo large to spik.\n";</span><br><span class="line">        return;</span><br><span class="line">      fi</span><br><span class="line">      eval "$&#123;EXEC&#125;$&#123;Option&#125;" \'"$&#123;FileLoad&#125;"\';</span><br><span class="line">      if [[ $? == '0' ]]; then</span><br><span class="line">        rm -rf "$FileLoad";</span><br><span class="line">      fi</span><br><span class="line">    fi</span><br><span class="line">  fi</span><br><span class="line">  IFS=$IFS_BAK</span><br><span class="line">&#125;</span><br><span class="line">LoadFile;</span><br></pre></td></tr></table></figure><p>修改顶部两项配置，RemoteDIR是OneDrive中的文件夹名，填写<code>&quot;&quot;</code>则为上传至根目录。</p><p>LocalDIR为Aria2下载的文件夹，之前安装时设置过。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#上传到Onedrive里的RATS目录，参数改为：RemoteDIR=&quot;RATS&quot;; </span><br><span class="line">#上传到Onedrive里的RATS目录里的RATS目录，参数改为：RemoteDIR=&quot;RATS/RATS&quot;;</span><br></pre></td></tr></table></figure><p>如果你觉得上传速度较慢，可以编辑<code>/usr/local/etc/OneDrive/onedrive.cfg</code>，修改<code>threads</code>线程数，默认<code>2</code>。</p><p><code>chmod +x upload.sh</code>修改权限，然后再到<code>Aria2</code>配置文件<code>aria.conf</code>中加上一行<code>on-download-complete=/root/.aria2/upload.sh</code>即可，后面为脚本的路径。最后重启<code>Aria2</code>生效。</p><p>至此，我们的设置就全部完成了。</p>]]></content>
    
    <summary type="html">
    
      利用OneDrive搭建私人OneIndex网盘并使用Aria2实现下载后自动上传至OneDrive
    
    </summary>
    
      <category term="Linux" scheme="https://lixint.github.io/categories/Linux/"/>
    
    
      <category term="OneDrive" scheme="https://lixint.github.io/tags/OneDrive/"/>
    
      <category term="OneIndex" scheme="https://lixint.github.io/tags/OneIndex/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu部分折腾记录</title>
    <link href="https://lixint.github.io/ubuntu.html"/>
    <id>https://lixint.github.io/ubuntu.html</id>
    <published>2018-12-31T01:59:39.000Z</published>
    <updated>2019-01-05T10:57:51.748Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2019年01月05日18:57</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><h3 id="安装中文输入法"><a href="#安装中文输入法" class="headerlink" title="安装中文输入法"></a>安装中文输入法</h3><p>首先卸载电脑中存在的ibus输入法，这个时候在系统中还可以看到ibus的设置和输入法，不过没有关系，如果介意的话可以重启电脑即可消除。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt remove &apos;ibus*&apos;</span><br></pre></td></tr></table></figure><p>安装 fcitx 输入法配置框架</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install fcitx-bin fcitx-table</span><br></pre></td></tr></table></figure><p>然后打开设置中心， 选中 “区域和语言” &gt; 管理已安装的语言（会提示是否安装ibus的输入法，这里选择“稍后提醒”） &gt; 键盘输入法系统中选择 “fcitx”  &gt; 应用到整个系统.</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/ubuntu/1302940-20180818104045780-1657756622.png" alt="1302940-20180818104045780-1657756622"></p><p>这个时候重启电脑之后就可以再右上角看到 fcitx 的设置图标；</p><p>然后开始安装搜狗输入法，进入 地址：<a href="https://pinyin.sogou.com/linux/，" target="_blank" rel="noopener">https://pinyin.sogou.com/linux/，</a> 下载对应系统配置的输入法， 双击安装即可安装搜狗输入法；</p><p>如果需要安装谷歌拼音，则执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install fcitx-googlepinyin</span><br></pre></td></tr></table></figure><p>右键点击图标，选择 “配置当前输入法” ， 如果这是提示未安装图形配置界面，则需要执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install &apos;fcitx-config-gtk&apos;</span><br></pre></td></tr></table></figure><p>将自带的两个拼音输入法清除，选中我们安装的搜狗输入法， 第一项是“键盘xx”, 第二项是”搜狗输入法“，之后通过shift便可以在中英文间切换啦。</p><h3 id="安装Anaconda3"><a href="#安装Anaconda3" class="headerlink" title="安装Anaconda3"></a>安装Anaconda3</h3><h4 id="下载Anaconda"><a href="#下载Anaconda" class="headerlink" title="下载Anaconda"></a>下载Anaconda</h4><ol><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuYW5hY29uZGEuY29tL2Rvd25sb2FkLyNsaW51eA==" title="https://www.anaconda.com/download/#linux"><a style="color:#ff0033">官网下载</a><i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL2FuYWNvbmRhL2FyY2hpdmUv" title="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/"><a style="color:#ff0033">清华大学开源镜像站</a><i class="fa fa-external-link"></i></span></li></ol><p>官网下载后文件名是<code>Anaconda3-2018.12-Linux-x86_64.sh</code></p><h4 id="安装-Anaconda"><a href="#安装-Anaconda" class="headerlink" title="安装 Anaconda"></a>安装 Anaconda</h4><p>在存放 Anaconda安装包的文件夹下右键打开命令行，运行<code>.sh</code>文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash Anaconda3-2018.12-Linux-x86_64.sh</span><br></pre></td></tr></table></figure><p>进入注册信息页面，一直回车，输入yes；</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/ubuntu/20180718005150903.png" alt="20180718005150903"></p><p>进入安装过程。</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/ubuntu/20180718010255132.png" alt="20180718010255132"></p><p>安装完成后，收到加入环境变量的提示信息，输入yes</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/ubuntu/20180718010453453.png" alt="20180718010453453"></p><p>安装完成</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/ubuntu/20180718010901206.png" alt="20180718010901206"></p><p>提示信息“Do you wish to proceed with the installation of Microsoft VSCode? [yes|no]”，输入no；</p><p>输入命令<code>source ~/.bashrc</code>使之前的环境变量配置生效。</p><p>输入<code>conda list</code>看一下是否有效。</p><p>如果之前提示加入环境变量那里没有按yes，可以输入以下命令手动加入环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &apos;export PATH=&quot;~/anaconda3/bin:$PATH&quot;&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><h4 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`rm ``-``rf ~``/``anaconda3`</span><br></pre></td></tr></table></figure><h3 id="sudo-pip：找不到命令"><a href="#sudo-pip：找不到命令" class="headerlink" title="sudo: pip：找不到命令"></a>sudo: pip：找不到命令</h3><p>编辑文件 /etc/sudoers，将Defaults env_reset ,改为 Defaults !env_reset</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/sudoers</span><br><span class="line"></span><br><span class="line">Defaults!env_reset</span><br></pre></td></tr></table></figure><p>编辑文件~/.bashrc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi ~/.bashrc</span><br></pre></td></tr></table></figure><p>在最后一行添加<code>alias sudo=&#39;sudo env PATH=$PATH&#39;</code></p><p>按esc输入<code>:wq!</code></p><p>添加完之后，再source一下<code>source ~/.bashrc</code></p><blockquote><p><strong>参考：</strong></p><p>Anaconda主要参考于：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE1MTkyMzczL2FydGljbGUvZGV0YWlscy84MTA5MTA5OA==" title="Ubuntu18.04 安装 Anaconda3"><a style="color:#ff0033">Ubuntu18.04 安装 Anaconda3</a><i class="fa fa-external-link"></i></span></p><p>输入法安装主要参考于：<span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vemh1YW5nbWluZ25hbi9wLzk0OTY0OTkuaHRtbA==" title="Ubuntu 18.04 LTS 安装 搜狗输入法，谷歌拼音"><a style="color:#ff0033">Ubuntu 18.04 LTS 安装 搜狗输入法，谷歌拼音</a><i class="fa fa-external-link"></i></span></p></blockquote>]]></content>
    
    <summary type="html">
    
      把移动硬盘里装上了Ubuntu18.10以后，又开始了新的折腾，再次记录以备忘
    
    </summary>
    
      <category term="Linux" scheme="https://lixint.github.io/categories/Linux/"/>
    
    
      <category term="Ubuntu" scheme="https://lixint.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>移动硬盘安装Ubuntu18.10折腾笔记</title>
    <link href="https://lixint.github.io/hd-ubuntu.html"/>
    <id>https://lixint.github.io/hd-ubuntu.html</id>
    <published>2018-12-30T04:45:37.000Z</published>
    <updated>2019-01-02T09:20:55.906Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2019年01月02日17:20</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>在往移动硬盘装之前，网上查了N多教程，的确是绕过了几个坑。莫名其妙就装好了，至今也是一头雾水</p><p>中间涉及到引导的设置什么的，也没怎么搞懂。</p><p>目前比较常见的坑：</p><ol><li>安装完成后不插移动硬盘无法启动原来的系统。</li><li>安装完成后的通过USB启动无法进入ubuntu</li><li>移动硬盘插到别的电脑上无法使用。</li></ol><h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><p>安装步骤主要参考的<span class="exturl" data-url="aHR0cHM6Ly9tenoucHViLzIwMTcvMTIvMjIvanVzdHBsYXkvbW9iaWxldWJ1bnR1Lw==" title="把Ubuntu16.04装进移动硬盘的惨痛实战"><a style="color:#ff0033">把Ubuntu16.04装进移动硬盘的惨痛实战</a><i class="fa fa-external-link"></i></span></p><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><ol><li>Ubuntu镜像，这个可以到<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuLw==" title="清华大学开源镜像软件站"><a style="color:#ff0033">清华大学开源镜像软件站</a><i class="fa fa-external-link"></i></span>去下载，下载速度很快。</li><li>启动盘制作软件：<span class="exturl" data-url="aHR0cHM6Ly91MTkxNDQzODYuY3RmaWxlLmNvbS9mcy8xOTE0NDM4Ni0zMjg1NzQ1MjA=" title="Universal-USB-Installer"><a style="color:#ff0033">Universal-USB-Installer</a><i class="fa fa-external-link"></i></span></li><li>磁盘管理软件：<span class="exturl" data-url="aHR0cHM6Ly91MTkxNDQzODYuY3RmaWxlLmNvbS9mcy8xOTE0NDM4Ni0zMjg1NzU1ODM=" title="DiskGenius"><a style="color:#ff0033">DiskGenius</a><i class="fa fa-external-link"></i></span></li><li>引导程序：<span class="exturl" data-url="aHR0cHM6Ly91MTkxNDQzODYuY3RmaWxlLmNvbS9mcy8xOTE0NDM4Ni0zMjg1NzQ0ODg=" title="GRUB4DOS"><a style="color:#ff0033">GRUB4DOS</a><i class="fa fa-external-link"></i></span></li><li>硬件准备：<ol><li>移动硬盘（或10G以上U盘）</li><li>U盘（作安装启动盘和LiveCD）</li></ol></li></ol><h4 id="制作启动盘"><a href="#制作启动盘" class="headerlink" title="制作启动盘"></a>制作启动盘</h4><p>这个比较容易，把镜像下载好后，打开软件。按步骤选择镜像。</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hd-ubuntu/35626309.jpg" alt="35626309"></p><p>图片来自<span class="exturl" data-url="aHR0cHM6Ly9tenoucHViLzIwMTcvMTIvMjIvanVzdHBsYXkvbW9iaWxldWJ1bnR1Lw==" title="把Ubuntu16.04装进移动硬盘的惨痛实战"><a style="color:#ff0033">把Ubuntu16.04装进移动硬盘的惨痛实战</a><i class="fa fa-external-link"></i></span></p><p>安装ubuntu</p><p>U盘启动盘制作好后，插着U盘重启，Boot设置USB启动。等待加载出菜单后选择第一项<code>Try ubuntu without installing</code></p><p>等待进入系统后，双击打开桌面上的<code>install Ubuntu</code>进入安装程序。</p><p>由于中间没有截图。以文字描述。并不复杂</p><p>首先是选择语言，菜单拉倒最后，选择中文。后面就都变成中文了。一步步操作即可。</p><p>我这次安装的是Ubuntu18，中间可以选择<code>最小安装</code>，<code>下载安装更新以节约安装后的时间</code>这两项</p><p>再后面有个安装类型。选择最下面的<code>其他</code>，进到盘符选择页面</p><p>这个时候要保证移动硬盘也是连接的，如果选择盘符页面没有加载出移动硬盘来，可以点击后退再重新进到页面。</p><p>在随后的这个界面中，假设/dev/sda是你的移动硬盘，选中其下的所有盘符，点击下面的“－”删去（相当于格式化），然后点击free space，点击下面的“＋”，按下图挂载三个partition：</p><p>根目录（建议50GB以内）</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hd-ubuntu/33964752.jpg" alt="33964752"></p><p>交换空间（建议与内存大小相同）</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hd-ubuntu/11084726.jpg" alt="11084726"></p><p>home（用户文件等均在此part下，建议分配较多的空间）</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hd-ubuntu/59832715.jpg" alt="59832715"></p><p>我的操作界面是中文的，但跟这个操作步骤是一样的。</p><ul><li><p>无需挂载boot类型的partition</p></li><li><p>记得在Device for boot loader installation中选择你的移动硬盘，否则开机引导会被grub2无情整合导致不插硬盘启动不了。这个地方我试过两次，一次是选了移动硬盘，一次是选了移动硬盘下挂载<code>/</code>的分区，最后都出了问题，所以没看出区别。</p></li></ul><p>注意：这里设置完成点击安装时可能会有如下提示：</p><p><strong>“分配到/的分区/dev/sdc1开始于3584字节,使用磁盘的最小对齐,这可能造成非常差的性能…”</strong></p><p>出现这个问题的原因不是很明确，我用了网上的方法，重新用DiskGenius对硬盘进行了分区。</p><p>新建一个Linux Native格式的分区，作为挂载<code>/</code>的分区</p><p>新建一个Linux Swap格式的分区作为交换空间</p><p>剩余的格式随意，作为挂载<code>/home</code>的分区</p><p>这样在安装时就不需要再建立分区，直接选择相应的分区然后进行挂载就行了。</p><p>点击安装之前留意一下移动硬盘的盘符，例如我的电脑是固态+机械双硬盘，插上移动硬盘的话就是三个硬盘，分别就是 固态<code>/dev/sda</code>，电脑的机械硬盘<code>/dev/sdb/</code>，机械硬盘四个分区，就分别是<code>/dev/sdb 1</code> ~ <code>/dev/sdb 4</code> ,同理移动硬盘是<code>/dev/sdc 1</code> 开始的。记一下挂载<code>/</code>的盘符号。后面可能会用到。</p><p>选择地区的时候，我根据网上的建议选择了台北。实际上台北的速度也不快，可能是跟地理位置有关。重新安装时选择上海，10分钟左右安装完毕，USB3.0的话应该会更快。</p><hr><p>以下部分属于我对着教程的个人理解，可能是(八九成)是错的</p><p>安装完毕后提示是否重启，不要点击重启，一定先点一下继续，这样移动硬盘会加载回来。然后用ubuntu自带的文件管理器打开移动硬盘安装盘的根目录（”/“挂载盘），用gedit打开”/etc/fstab”，把挂载点为”/“的盘符（如/dev/sdc5）和UUID记下来。</p><p>这里不知道是不是我安装的时候有什么问题，打开后没有发现挂载<code>/</code>的盘符。所以后面要用到盘符的时候我填的就是之前安装时记下来的盘符号，可能出问题也是因为这个。</p><p>这个UUID的获取，用文件管理器打开移动硬盘挂载<code>/</code>的目录，右键<code>open in Terminal</code></p><p><code>ubuntu/</code>后面的这一串应该就是UUID</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hd-ubuntu/Screenshot%20from%202018-12-30%2005-36-47.png" alt="Screenshot from 2018-12-30 05-36-47"></p><p>然后使用命令<code>cat /proc/version</code> 获取内核版本号（如4.10.0-28），也记录下来。</p><h4 id="安装GRUB4DOS引导"><a href="#安装GRUB4DOS引导" class="headerlink" title="安装GRUB4DOS引导"></a>安装GRUB4DOS引导</h4><p>趁热打铁，下载<span class="exturl" data-url="aHR0cHM6Ly91MTkxNDQzODYuY3RmaWxlLmNvbS9mcy8xOTE0NDM4Ni0zMjg1NzQ0ODg=" title="GRUB4DOS"><a style="color:#ff0033">GRUB4DOS</a><i class="fa fa-external-link"></i></span>， 解压后有一个menu.lst，将其中的<code>4.10.0-28</code> 全部替换为你的内核版本号，将<code>8578bdcd-8385-4121-80c4-d48cc0b2e282</code> 全部替换为你的UUID，将<code>(hd0,0)</code> 的0全部替换为你的盘符号减1的值（如/dev/sdc5则把(hd0,0)替换为(hd0,4)），保存修改。</p><p>在menu.lst文件所在目录下右键open in terminal，使用命令<code>sudo cp menu.lst grldr /media/ubuntu/UUID</code> （将UUID替换为刚记下的UUID）。</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hd-ubuntu/68242781.jpg" alt="68242781"></p><p>关闭计算机，用同样的方法进入boot menu，选择打开WINDOWS。在WINDOWS下使用<span class="exturl" data-url="aHR0cHM6Ly91MTkxNDQzODYuY3RmaWxlLmNvbS9mcy8xOTE0NDM4Ni0zMjg1NzQ0ODg=" title="GRUB4DOS"><a style="color:#ff0033">GRUB4DOS</a><i class="fa fa-external-link"></i></span>中的grubinst_gui.exe，一定要以右键以管理员身份打开，否则刷新不出磁盘来。在磁盘中选择你的移动硬盘，下面勾选Grub第二版，点击安装。</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hd-ubuntu/25127566.jpg" alt="25127566"></p><p>现在你的移动硬盘已经可以到处使了！想进入ubuntu的时候，在开机的时候进入boot menu切换ubuntu即可。</p><p><strong>注意：升级内核后须手动修改menu.lst中的kernel、initrd项，新内核方可生效！</strong></p><p>至此，我的折腾就完毕了。</p><h4 id="处理try-hd0-0-ext2问题"><a href="#处理try-hd0-0-ext2问题" class="headerlink" title="处理try (hd0,0) ext2问题"></a>处理try (hd0,0) ext2问题</h4><p>安装完成后，我的就一直出现这个问题，</p><h5 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h5><p>由于目的是使用grub整合windows和ubuntu，于是我使用了有UEFI引导的LiveCD（必须用UEFI进入，如果不支持UEFI，在使用Universal-USB-Installer时选中格式化U盘的选项再装一次，直到支持UEFI）。</p><p>使用LiveCD进入try without install的ubuntu系统后，我们选择使用boot-repair来修复引导，它会用grub整合windows和ubuntu，这也是我们想要的（注意，制作移动硬盘ubuntu时，这往往不是我们想要的。但它会在windows盘EFI分区创建好ubuntu的引导，这可以帮助我们在无法使用移动硬盘的机器上手动创建efi引导从而曲线救国）。</p><span class="exturl" data-url="aHR0cHM6Ly9qaW5neWFuLmJhaWR1LmNvbS9hcnRpY2xlLzU1NTNmYTgyY2Q0OGE3NjVhMjM5MzRhZS5odG1s" title="如何使用boot-repair修复引导？"><a style="color:#ff0033">如何使用boot-repair修复引导？</a><i class="fa fa-external-link"></i></span><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpbmh1aW5jdS9hcnRpY2xlL2RldGFpbHMvNzg5MjA0NjM=" title="Win 10 +Ubuntu 16.04双硬盘双系统，启动报错 Try (hd0,4): EXT2:，亲测成功修复办法"><a style="color:#ff0033">Win 10 +Ubuntu 16.04双硬盘双系统，启动报错 Try (hd0,4): EXT2:，亲测成功修复办法</a><i class="fa fa-external-link"></i></span><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:yannubuntu/boot-repair &amp;&amp; sudo apt-get update  </span><br><span class="line">sudo apt-get install -y boot-repair &amp;&amp; boot-repair</span><br></pre></td></tr></table></figure><p>启动Boot Repair：</p><p>进行重新安装Grub2引导，内置会自动确定你的/boot分区，/根目录分区：（不确定的可以先选修复，但是修复一般都没用）</p>]]></content>
    
    <summary type="html">
    
      手边闲着一个移动硬盘，于是折腾着装了个ubuntu，记录一下
    
    </summary>
    
    
      <category term="Ubuntu" scheme="https://lixint.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令--基础篇</title>
    <link href="https://lixint.github.io/linuxcmd.html"/>
    <id>https://lixint.github.io/linuxcmd.html</id>
    <published>2018-12-27T05:10:15.000Z</published>
    <updated>2018-12-27T11:03:02.533Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2018年12月27日19:03</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><h2 id="包管理器"><a href="#包管理器" class="headerlink" title="包管理器"></a>包管理器</h2><h3 id="apt-get-Debian-Ubuntu系统包管理器"><a href="#apt-get-Debian-Ubuntu系统包管理器" class="headerlink" title="apt-get Debian/Ubuntu系统包管理器"></a>apt-get Debian/Ubuntu系统包管理器</h3><p>apt-get 是Debian/Ubuntu系统中 一个用于快速下载/安装的简单命令行管理工具</p><div class="tabs" id="apt-get"><ul class="nav-tabs"><li class="tab active"><a href="#apt-get-1"><p>参数介绍</p></a></li><li class="tab"><a href="#apt-get-2"><p>使用示例</p></a></li></ul><div class="tab-content"><div class="tab-pane active" id="apt-get-1"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 命令:</span><br><span class="line">update - 检索 新的包列表</span><br><span class="line">upgrade - 升级 可更新的所有软件包</span><br><span class="line">install - 安装 新软件包（pkg是libc6不是libc6.deb）</span><br><span class="line">remove - 删除 软件包</span><br><span class="line">autoremove - 自动删除 所有未使用的软件包</span><br><span class="line">purge - 删除 软件包和配置文件</span><br><span class="line">clean - 清除 已下载的归档文件</span><br><span class="line">autoclean - 清除 旧的下载的档案文件</span><br><span class="line">check - 验证 是否有损坏的依赖</span><br><span class="line">download - 下载 二进制包到当前目录</span><br><span class="line"></span><br><span class="line"># 选项：</span><br><span class="line">-q ：不输出任何信息</span><br><span class="line">-qq ：除了错误之外，没有输出</span><br><span class="line">-d ：仅下载，不要安装或解压缩存档</span><br><span class="line">-y ：对所有确定询问都选择 Yes，并且不提示</span><br><span class="line">-f ：尝试纠正 被破坏依赖关系的系统</span><br><span class="line">-m ：如果存档是可定位的，则尝试继续</span><br><span class="line">-u ：显示升级包的列表</span><br><span class="line">-b ：在获取源代码包后构建源包</span><br><span class="line"></span><br><span class="line"># 更多的命令可以用 apt-get --help 查看</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="apt-get-2"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># 检索 新的包列表</span><br><span class="line">apt-get update</span><br><span class="line"></span><br><span class="line"># 升级 可更新的所有软件包（注意这个命令会升级所有的软件包，所以会升级很长时间）</span><br><span class="line">apt-get upgrade</span><br><span class="line"></span><br><span class="line"># 安装 Nginx 软件包</span><br><span class="line">apt-get install nginx</span><br><span class="line"></span><br><span class="line"># 卸载 Nginx 软件包</span><br><span class="line">apt-get remove nginx</span><br><span class="line"></span><br><span class="line"># 卸载 Nginx 软件包 并删除所有相关配置文件</span><br><span class="line">apt-get remove --purge nginx</span><br><span class="line"></span><br><span class="line"># 在安装软件和卸载的时候，为了避免误操作，都会询问是否继续，每次都要输入 y 来确定会很麻烦，可以加上 -y 参数</span><br><span class="line"># 安装 Nginx 软件包 并不显示确定提示</span><br><span class="line">apt-get install nginx -y</span><br><span class="line"></span><br><span class="line"># 卸载 Nginx 软件包，删除所有相关配置文件 并不显示提示</span><br><span class="line">apt-get remove --purge nginx -y</span><br><span class="line"></span><br><span class="line"># 清除 旧的/无用 的软件包</span><br><span class="line">apt-get clean &amp;&amp; apt-get autoclean</span><br><span class="line"></span><br><span class="line"># 下载 Nginx 二进制软件包到当前目录，但不解压和安装</span><br><span class="line">apt-get download nginx -d</span><br><span class="line"></span><br><span class="line"># 更多的命令可以用 apt-get --help 查看。</span><br></pre></td></tr></table></figure></div></div></div><h3 id="yum-CentOS系统包管理器"><a href="#yum-CentOS系统包管理器" class="headerlink" title="yum CentOS系统包管理器"></a>yum CentOS系统包管理器</h3><p>yum 是CentOS系统中 一个用于快速下载/安装的简单命令行管理工具！<br><div class="tabs" id="cnetos-yum"><ul class="nav-tabs"><li class="tab active"><a href="#cnetos-yum-1"><p>参数介绍</p></a></li><li class="tab"><a href="#cnetos-yum-2"><p>使用示例：</p></a></li></ul><div class="tab-content"><div class="tab-pane active" id="cnetos-yum-1"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># 命令：</span><br><span class="line"> </span><br><span class="line">update - 检索 新的包列表</span><br><span class="line">upgrade - 升级 软件包</span><br><span class="line">search - 搜索 软件包</span><br><span class="line">install - 安装 软件包</span><br><span class="line">list - 列出 软件包或者软件包组</span><br><span class="line">info - 显示软件包或者软件包组的详细信息</span><br><span class="line">erase - 删除 软件包（这两个命令一样）</span><br><span class="line">remove - 删除 软件包（这两个命令一样）</span><br><span class="line">groupinfo - 显示 有关包组的详细信息</span><br><span class="line">groupinstall - 安装 软件包组（就像一种软件合集）</span><br><span class="line">grouplist - 列出 可用的软件包组</span><br><span class="line">groupremove - 删除 软件包组</span><br><span class="line">check - 检查 软件包</span><br><span class="line">check-update - 检查 可更新的软件包</span><br><span class="line">clean - 清除 缓存目录内的软件包</span><br><span class="line">deplist - 列出 一个包的依赖关系</span><br><span class="line">distribution-synchronization - 同步 已安装的软件包到最新的版本</span><br><span class="line">downgrad - 降级 一个软件包</span><br><span class="line">reinstall - 重新安装 软件包（自动删除重装）</span><br><span class="line">repolist - 显示 配置的软件包仓库</span><br><span class="line">resolvedep - 确定 软件包需要的依赖关系</span><br><span class="line"> </span><br><span class="line"># 选项：</span><br><span class="line">-t ：容忍错误</span><br><span class="line">-C ：完全从系统缓存运行，不要更新缓存</span><br><span class="line">-R 分钟 ：最大命令等待时间</span><br><span class="line">-q ：安静的操作</span><br><span class="line">-y ：对于所有问题回答是</span><br><span class="line">--nogpgcheck ：禁用gpg签名检查</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 yum --help 查看。</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="cnetos-yum-2"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"># 检索 新的包列表</span><br><span class="line">yum update</span><br><span class="line"> </span><br><span class="line"># 安装 Nginx 软件包</span><br><span class="line">yum install nginx</span><br><span class="line"> </span><br><span class="line"># 安装 Development Tools 软件包组（这个软件包组中包含了编译所需的软件）</span><br><span class="line"># 注意：当软件包或者软件包组的名字中包含空格的时候，请把 软件包或软件包组 加上双引号！</span><br><span class="line">yum groupinstall &quot;Development Tools&quot;</span><br><span class="line"> </span><br><span class="line"># 卸载 Nginx 软件包</span><br><span class="line">yum erase nginx / yum remove nginx</span><br><span class="line"> </span><br><span class="line"># 卸载 Development Tools 软件包组</span><br><span class="line">yum groupremove &quot;Development Tools&quot;</span><br><span class="line"> </span><br><span class="line"># 升级 所有可更新的软件包</span><br><span class="line">yum upgrade</span><br><span class="line"> </span><br><span class="line"># 升级 Nginx 可更新的软件包</span><br><span class="line">yum upgrade nginx</span><br><span class="line"> </span><br><span class="line"># 在安装软件和卸载的时候，为了避免误操作，都会询问是否继续，每次都要输入 y 来确定会很麻烦，可以加上 -y 参数</span><br><span class="line"># 安装 Nginx 软件包 并不显示确定提示</span><br><span class="line">yum install nginx -y</span><br><span class="line"> </span><br><span class="line"># 卸载 Nginx 软件包 并不显示确定提示</span><br><span class="line">yum erase nginx -y / yum remove nginx -y</span><br><span class="line"> </span><br><span class="line"># 搜索 Nginx 软件包是否存着</span><br><span class="line">yum search nginx</span><br><span class="line"> </span><br><span class="line"># 列出 可用的软件包</span><br><span class="line">yum list</span><br><span class="line"> </span><br><span class="line"># 列出 可用的软件包组</span><br><span class="line">yum grouplist</span><br><span class="line"> </span><br><span class="line"># 清除 缓存目录中的所有软件包</span><br><span class="line">yum clean</span><br><span class="line"> </span><br><span class="line"># 清除 缓存目录中的 Nginx 软件包</span><br><span class="line">yum clean nginx</span><br><span class="line"> </span><br><span class="line"># 重装 Nginx 软件包</span><br><span class="line">yum reinstall nginx</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 yum --help 查看。</span><br></pre></td></tr></table></figure></div></div></div></p><h2 id="文件-文件夹-操作"><a href="#文件-文件夹-操作" class="headerlink" title="文件/文件夹 操作"></a>文件/文件夹 操作</h2><p>以下除特殊说明，都以当前目录为<code>/root</code>示例。</p><h3 id="mkdir-新建-文件夹"><a href="#mkdir-新建-文件夹" class="headerlink" title="mkdir 新建 文件夹"></a>mkdir 新建 文件夹</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 在当前文件夹新建一个 bash 文件夹，完整的绝对路径就是 /root/bash</span><br><span class="line">mkdir bash</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 mkdir --help 查看。</span><br></pre></td></tr></table></figure><h3 id="cd-进入-文件夹"><a href="#cd-进入-文件夹" class="headerlink" title="cd 进入 文件夹"></a>cd 进入 文件夹</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 你当前在 /root目录中，使用这个命令会进入 /root/bash目录，这是相对路径</span><br><span class="line">cd bash</span><br><span class="line"># 如果你不在 /root目录中的话，就不能用上面的相对路径了，就需要绝对路径</span><br><span class="line">cd /root/bash</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 假设你当前在 /root/bash目录中，使用相对路径，你可以用这个命令进入上一级 /root目录， .. 代表相对路径 上级目录</span><br><span class="line">cd ..</span><br><span class="line"># 当然你也可以用绝对路径来进入上一级 /root目录</span><br><span class="line">cd /root</span><br></pre></td></tr></table></figure><h3 id="cp-复制或重命名-文件-文件夹"><a href="#cp-复制或重命名-文件-文件夹" class="headerlink" title="cp 复制或重命名 文件/文件夹"></a>cp 复制或重命名 文件/文件夹</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"># 复制当前目录内的 log.txt文件到 /var目录</span><br><span class="line">cp log.txt /var/log.txt</span><br><span class="line"> </span><br><span class="line"># 复制当前目录内的 bash文件夹到 /home目录</span><br><span class="line">cp -R bash /home/bash</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 复制当前目录内的所有.txt后缀的文件到 /var/log目录</span><br><span class="line">cp *.txt /var/log</span><br><span class="line"> </span><br><span class="line"># 复制当前目录内的所有以 example开头的文件到 /var/log目录</span><br><span class="line">cp example* /var/log</span><br><span class="line"> </span><br><span class="line"># 复制当前目录内的所有以 example开头 以.txt后缀结尾的文件到 /var/log目录</span><br><span class="line">cp example*.txt /var/log</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 假设当前目录是 /root/example/log，要把这个目录中的所有.txt后缀的文件复制到上一级目录 /root/example，那么这样做</span><br><span class="line">cp *.txt ..</span><br><span class="line"> </span><br><span class="line"># .. 就是相对路径，代表上一级目录，当然你也可以用绝对路径，这样更不容易出错</span><br><span class="line">cp *.txt /root/example</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 重命名当前目录内的 log.txt文件为 log2.txt</span><br><span class="line">cp log.txt log2.txt</span><br><span class="line"> </span><br><span class="line"># 复制当前目录内的 log.txt文件到 /var目录并重命名为 log1.txt</span><br><span class="line">cp log.txt /var/log1.txt</span><br><span class="line"> </span><br><span class="line"># 复制当前目录内的 bash文件夹到 /home目录并重命名为 bash2</span><br><span class="line">cp -R bash /home/bash2</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 复制当前目录内的 log.txt文件到 /var目录，但是 /var 目录中已经存着 log.txt，那么会提示 cp: overwrite `/var/log.txt&apos;? 可以用 -f 强制覆盖</span><br><span class="line">cp -f log /var/log.txt</span><br><span class="line"> </span><br><span class="line"># 大家可能会发现，当你使用 cp -f 强制覆盖的时候，依然会询问你是否覆盖，这是因为 CP 为了避免你手误，默认加上了 -i 参数（该参数代表每次覆盖必须询问）。</span><br><span class="line"># 所以想要避免 CP 默认的 -i 参数，只需要在 CP 命令前面加上斜杠即可 “/”</span><br><span class="line">/cp -f log /var/log.txt</span><br><span class="line"> </span><br><span class="line"># 复制当前目录内的 log.txt log1.txt log2.txt文件和 log233目录到 /home/log目录中</span><br><span class="line">cp -R log.txt log1.txt log2.txt log233 /home/log</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 cp --help 查看。</span><br></pre></td></tr></table></figure><h3 id="mv-移动或重命名-文件-文件夹"><a href="#mv-移动或重命名-文件-文件夹" class="headerlink" title="mv 移动或重命名 文件/文件夹"></a>mv 移动或重命名 文件/文件夹</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 关于 mv 命令，可以参考上面 cp 的使用方法，没什么区别，只是一个是复制，一个是移动，把上面 cp 命令改成 mv 就能套用了。</span><br><span class="line"> </span><br><span class="line"># 移动当前目录内的 log.txt文件到 /var目录</span><br><span class="line">mv log.txt /var/log.txt</span><br><span class="line"> </span><br><span class="line"># 移动当前目录内的 bash文件夹到 /home目录</span><br><span class="line">mv bash /home/bash</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 重命名当前目录内的 log.txt文件为 log2.txt</span><br><span class="line">mv log.txt log2.txt</span><br><span class="line"> </span><br><span class="line"># 复制当前目录内的 log.txt文件到 /var目录并重命名为 log1.txt</span><br><span class="line">mv log.txt /var/log1.txt</span><br><span class="line"> </span><br><span class="line"># 复制当前目录内的 bash文件夹到 /home目录并重命名为 bash2</span><br><span class="line">mv bash /home/bash2</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 mv --help 查看。</span><br></pre></td></tr></table></figure><h3 id="rm-删除-文件-文件夹"><a href="#rm-删除-文件-文件夹" class="headerlink" title="rm 删除 文件/文件夹"></a>rm 删除 文件/文件夹</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"># 删除当前目录下的 log.txt文件</span><br><span class="line">rm log.txt</span><br><span class="line"> </span><br><span class="line"># 删除当前目录下所有.txt后缀的文件</span><br><span class="line">rm *.txt</span><br><span class="line"> </span><br><span class="line"># 使用 rm 命令删除时，会提示你是否确定删除，输入 y 即删除，输入 n 则取消</span><br><span class="line"># rm: remove regular file `log.txt&apos;? y</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 删除当前目录下所有.txt后缀的文件</span><br><span class="line">rm *.txt</span><br><span class="line"> </span><br><span class="line"># 删除当前目录下所有以 example开头的文件</span><br><span class="line">rm example*</span><br><span class="line"> </span><br><span class="line"># 删除当前目录下所有以 example开头 以.txt后缀结尾的文件</span><br><span class="line">rm example*.txt</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 当你用 rm 删除目录的时候会发现提示这不是一个文件</span><br><span class="line"># rm bash</span><br><span class="line"># rm: cannot remove `bash&apos;: Is a directory</span><br><span class="line"># 可以加上 -r 来归递删除目录及其目录下的内容</span><br><span class="line">rm -r bash</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 因为为了避免手误删除错误，所以 rm默认是加上了 -i 的参数，也就是每一次删除文件/目录都会提示，如果觉得烦可以用 -rf 参数</span><br><span class="line">rm -rf bash</span><br><span class="line"> </span><br><span class="line"># rm -rf 这个命令请慎重使用，而且千万不要使用 rm -rf / 或者 rm -rf /* 之类的命令(系统自杀)，可能会让你系统爆炸，所以使用请慎重！</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 rm --help 查看。</span><br></pre></td></tr></table></figure><h2 id="查看-编辑文件-操作"><a href="#查看-编辑文件-操作" class="headerlink" title="查看/编辑文件 操作"></a>查看/编辑文件 操作</h2><h3 id="ls-显示目录中文件"><a href="#ls-显示目录中文件" class="headerlink" title="ls 显示目录中文件"></a>ls 显示目录中文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 显示当前目录下的所有文件</span><br><span class="line">ls -a</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 命令后面加上 绝对路径/相对路径 就会显示指定文件夹内的所有文件</span><br><span class="line">ls -a bash/log</span><br><span class="line"> </span><br><span class="line"># 相对路径，当前目录是 /root ，欲查看的目录是 /root/bash/log</span><br><span class="line">ls -a /root/bash/log</span><br><span class="line"> </span><br><span class="line"># 绝对路径， 当前目录是 /root ，欲查看的目录是 /root/bash/log</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 ls --help 来查看。</span><br></pre></td></tr></table></figure><h3 id="du-查看-文件-文件夹-占用磁盘空间的大小"><a href="#du-查看-文件-文件夹-占用磁盘空间的大小" class="headerlink" title="du 查看 文件/文件夹 占用磁盘空间的大小"></a>du 查看 文件/文件夹 占用磁盘空间的大小</h3><div class="tabs" id="du"><ul class="nav-tabs"><li class="tab active"><a href="#du-1"><p>参数介绍</p></a></li><li class="tab"><a href="#du-2"><p>使用示例</p></a></li></ul><div class="tab-content"><div class="tab-pane active" id="du-1"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-h ：以人类易读的方式显示</span><br><span class="line">-a ：显示 目录占用的磁盘空间大小，并显示其下目录和文件占用磁盘空间的大小</span><br><span class="line">-s ：显示 目录占用的磁盘空间大小，但不显示其下子目录和文件占用的磁盘空间大小</span><br><span class="line">-c ：显示几个目录或文件占用的磁盘空间大小，还要统计它们的总和</span><br><span class="line">--apparent-size：显示目录或文件自身的大小</span><br><span class="line">-l ：统计硬链接占用磁盘空间的大小</span><br><span class="line">-L ：统计符号链接所指向的文件占用的磁盘空间大小</span><br><span class="line"># 待写...</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 du --help 来查看。</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="du-2"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 假设当前位于 /root 目录下，则显示 /root 文件夹的大小，但不显示其子目录和文件的大小</span><br><span class="line">du -sh</span><br><span class="line"> </span><br><span class="line"># 假设当前位于 /root 目录下，则显示 /root 文件夹的大小，并显示其子目录和文件的大小</span><br><span class="line">du -ah</span><br><span class="line"> </span><br><span class="line"># 假设当前位于 /root 目录下，则显示 /root 文件夹下的所有文件夹的大小及其总和</span><br><span class="line">du -lh --max-depth=1</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 du --help 来查看。</span><br></pre></td></tr></table></figure></div></div></div><h3 id="cat-查看文件内容"><a href="#cat-查看文件内容" class="headerlink" title="cat 查看文件内容"></a>cat 查看文件内容</h3><div class="tabs" id="cat"><ul class="nav-tabs"><li class="tab active"><a href="#cat-1"><p>样例文件log.txt</p></a></li><li class="tab"><a href="#cat-2"><p>查看文件</p></a></li><li class="tab"><a href="#cat-3"><p>清空文件</p></a></li><li class="tab"><a href="#cat-4"><p>写入文件</p></a></li></ul><div class="tab-content"><div class="tab-pane active" id="cat-1"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">example233</span><br><span class="line">example</span><br><span class="line"> </span><br><span class="line">example666</span><br><span class="line"> </span><br><span class="line">example2366</span><br><span class="line">example8888</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="cat-2"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"># 查看 log.txt文件的所有内容</span><br><span class="line">cat log.txt</span><br><span class="line"># 输出示例如下</span><br><span class="line">example233</span><br><span class="line">example</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">example666</span><br><span class="line"> </span><br><span class="line">example2366</span><br><span class="line">example8888</span><br><span class="line"> </span><br><span class="line"># 查看 log.txt文件的所有内容，并对所有行编号</span><br><span class="line">cat -n log.txt</span><br><span class="line"># 输出示例如下：</span><br><span class="line">     1example233</span><br><span class="line">     2example</span><br><span class="line">     3</span><br><span class="line">     4</span><br><span class="line">     5example666</span><br><span class="line">     6</span><br><span class="line">     7example2366</span><br><span class="line">     8example8888</span><br><span class="line"> </span><br><span class="line"># 查看 log.txt文件的所有内容，并对非空行编号</span><br><span class="line">cat -b log.txt</span><br><span class="line"># 输出示例如下：</span><br><span class="line">     1example233</span><br><span class="line">     2example</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">     3example666</span><br><span class="line"> </span><br><span class="line">     4example2366</span><br><span class="line">     5example8888</span><br><span class="line"> </span><br><span class="line"># 查看 log.txt文件的所有内容，并对非空行编号，且不输出多行空行</span><br><span class="line">cat -bs log.txt</span><br><span class="line"># 输出示例如下：</span><br><span class="line">     1example233</span><br><span class="line">     2example</span><br><span class="line"> </span><br><span class="line">     3example666</span><br><span class="line"> </span><br><span class="line">     4example2366</span><br><span class="line">     5example8888</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="cat-3"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 清空当前目录中的 log.txt 文件</span><br><span class="line">cat /dev/null &gt; log.txt</span><br><span class="line"> </span><br><span class="line"># 清空 /var目录中的 log.txt 文件</span><br><span class="line">cat /dev/null &gt; /var/log.txt</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="cat-4"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 写入文本到当前目录中的 log.txt文件中(加入文本到文件内容最后)</span><br><span class="line">cat &gt;&gt; log.txt &lt;&lt;-EOF</span><br><span class="line">example</span><br><span class="line">example233</span><br><span class="line">example666</span><br><span class="line">EOF</span><br><span class="line"> </span><br><span class="line"># 清空文件并写入文本到 /var目录中的 log.txt文件中(先清空后写入)</span><br><span class="line">cat &gt; /var/log.txt &lt;&lt;-EOF</span><br><span class="line">example</span><br><span class="line">example233</span><br><span class="line">example666</span><br><span class="line">EOF</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 cat --help 来查看。</span><br></pre></td></tr></table></figure></div></div></div><h3 id="head-查看文件内容（主要用于正查）"><a href="#head-查看文件内容（主要用于正查）" class="headerlink" title="head 查看文件内容（主要用于正查）"></a>head 查看文件内容（主要用于正查）</h3><div class="tabs" id="head"><ul class="nav-tabs"><li class="tab active"><a href="#head-1"><p>参数介绍</p></a></li><li class="tab"><a href="#head-2"><p>使用示例</p></a></li></ul><div class="tab-content"><div class="tab-pane active" id="head-1"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-c 数字：显示指定文件的前 xx 字节的内容（bytes）</span><br><span class="line">-n 数字：显示指定文件的前 xx 行的内容</span><br><span class="line">-q ：不显示包含指定文件名的文件头（当使用 head打开多个文件的时候，会去在每个文件输出结果的顶部添加一个包含文件名的文件头用于区分）</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 head --help 来查看。</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="head-2"><p>假设 log.txt 文件内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">example1</span><br><span class="line">example2</span><br><span class="line">example3</span><br><span class="line">example4</span><br><span class="line">example5</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"># 查看 log.txt文件的全部内容</span><br><span class="line">head log.txt</span><br><span class="line"> </span><br><span class="line"># 查看 log.txt文件的前 3字节的内容</span><br><span class="line">head -c 3 log.txt</span><br><span class="line"> </span><br><span class="line"># 输出示例</span><br><span class="line">dou</span><br><span class="line"> </span><br><span class="line"># 查看 log.txt文件的前 2行的内容</span><br><span class="line">head -n 2 log.txt</span><br><span class="line"> </span><br><span class="line"># 输出示例</span><br><span class="line">example1</span><br><span class="line">example2</span><br><span class="line"> </span><br><span class="line"># 查看 log.txt文件的从倒数第2行到行首的内容</span><br><span class="line">head -n -2 log.txt</span><br><span class="line"> </span><br><span class="line"># 输出示例</span><br><span class="line">example1</span><br><span class="line">example2</span><br><span class="line">example3</span><br><span class="line"> </span><br><span class="line"># 查看 log.txt log1.txt log2.txt文件的前 3行内容</span><br><span class="line">head -n 3 log.txt log1.txt log2.txt</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 head --help 来查看。</span><br></pre></td></tr></table></figure></div></div></div><h3 id="tail-查看文件内容（主要用于倒查）"><a href="#tail-查看文件内容（主要用于倒查）" class="headerlink" title="tail 查看文件内容（主要用于倒查）"></a>tail 查看文件内容（主要用于倒查）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-c 数字：如果数字为正数(例如 -c +5)，显示指定文件从行首第 xx 字节到最后的内容；如果数字为负数(例如 -c -5)，显示指定文件从行尾第 xx 字节到最后内容。</span><br><span class="line">-n 数字：如果数字为正数(例如 -c +3)，显示指定文件从行首第 xx 行到最后的内容；如果数字为负数(例如 -c -3)，显示指定文件从行尾第 xx 行到最后的内容。</span><br><span class="line">-f ：即时输出文件变化后增加的内容，也就是监视一个文件的内容变化（常用于监视日志输出），使用 Ctrl＋C 终止</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 tail --help 来查看。</span><br></pre></td></tr></table></figure><p><strong>使用示例：</strong></p><p>假设 log.txt 文件内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">example1</span><br><span class="line">example2</span><br><span class="line">example3</span><br><span class="line">example4</span><br><span class="line">example5</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"># 查看 log.txt文件的全部内容</span><br><span class="line">tail log.txt</span><br><span class="line"> </span><br><span class="line"># 查看 log.txt文件从行首 第25字节到最后的内容</span><br><span class="line">tail -c +25 log.txt</span><br><span class="line"> </span><br><span class="line"># 输出示例</span><br><span class="line">bi4</span><br><span class="line">example5</span><br><span class="line"> </span><br><span class="line"># 查看 log.txt文件从行尾 第4字节到最前面的内容</span><br><span class="line">tail -c -4 log.txt</span><br><span class="line"> </span><br><span class="line"># 输出示例</span><br><span class="line">bi5</span><br><span class="line"> </span><br><span class="line"># 查看 log.txt文件的从第2行到最后一行的内容</span><br><span class="line">tail -n +2 log.txt</span><br><span class="line"> </span><br><span class="line"># 输出示例</span><br><span class="line">example2</span><br><span class="line">example3</span><br><span class="line">example4</span><br><span class="line">example5</span><br><span class="line"> </span><br><span class="line"># 查看 log.txt文件的后 2行的内容</span><br><span class="line">tail -n -2 log.txt</span><br><span class="line"> </span><br><span class="line"># 输出示例</span><br><span class="line">example4</span><br><span class="line">example5</span><br><span class="line"> </span><br><span class="line"># 持续查看（监视） log.txt文件的变化内容（新增加的内容），使用 Ctrl＋C 终止</span><br><span class="line">tail -f log.txt</span><br><span class="line"> </span><br><span class="line"># 查看 log.txt log1.txt log2.txt文件的前 3行内容</span><br><span class="line">tail -n 3 log.txt log1.txt log2.txt</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 tail --help 来查看。</span><br></pre></td></tr></table></figure><h3 id="sed-查看-编辑文件内容"><a href="#sed-查看-编辑文件内容" class="headerlink" title="sed 查看/编辑文件内容"></a>sed 查看/编辑文件内容</h3><p>参数介绍：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-i ：操作后应用保存到原文件（如果不加这个参数，那么任何修改都不会影响原文件里的内容，只会把结果输出）</span><br><span class="line">-e ：仅显示处理后的结果</span><br><span class="line"># 待写...</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 sed --help 来查看。</span><br></pre></td></tr></table></figure><p>使用示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"># 查看 log.txt 第3行的内容</span><br><span class="line">sed -n &apos;3p&apos; log.txt</span><br><span class="line"> </span><br><span class="line"># 查看 log.txt 第2-8行的内容</span><br><span class="line">sed -n &apos;2,8p&apos; log.txt</span><br><span class="line"> </span><br><span class="line"># 删除 log.txt 第1行（首行）</span><br><span class="line">sed -i &apos;1d&apos; log.txt</span><br><span class="line"> </span><br><span class="line"># 删除 log.txt 第3-7行</span><br><span class="line">sed -i &apos;3,7d&apos; log.txt</span><br><span class="line"> </span><br><span class="line"># 删除 log.txt 最后1行（尾行）</span><br><span class="line">sed -i &apos;$d&apos; log.txt</span><br><span class="line"> </span><br><span class="line"># 删除 log.txt 中所有空白行</span><br><span class="line">sed -i &apos;/^$/d&apos; log.txt</span><br><span class="line"> </span><br><span class="line"># 删除 log.txt 开头是 example 的行</span><br><span class="line">sed -i &apos;/^example/&apos;d log.txt</span><br><span class="line"> </span><br><span class="line"># 删除 log.txt 结尾是 example 的行</span><br><span class="line">sed -i &apos;/example$/&apos;d log.txt</span><br><span class="line"> </span><br><span class="line"># 删除 log.txt 文件中所有包含 233内容的行</span><br><span class="line">sed -i &apos;/233/d&apos; log.txt</span><br><span class="line"> </span><br><span class="line"># 删除 log.txt 文件中第一个 233文本</span><br><span class="line">sed -i &apos;s/233//&apos; log.txt</span><br><span class="line"> </span><br><span class="line"># 删除 log.txt 文件中所有 233文本(g 代表操作所有匹配规则的文本)</span><br><span class="line">sed -i &apos;s/233//g&apos; log.txt</span><br><span class="line"> </span><br><span class="line"># 删除 log.txt 文件中所有 第5个233文本(5g 代表第五个匹配规则的文本)</span><br><span class="line">sed -i &apos;s/233//5g&apos; log.txt</span><br><span class="line"> </span><br><span class="line"># 替换 log.txt 文件中第一个 233为666</span><br><span class="line">sed -i &apos;s/233/666/&apos; log.txt</span><br><span class="line"> </span><br><span class="line"># 替换 log.txt 文件中所有 233为666(g 代表操作所有匹配规则的文本)</span><br><span class="line">sed -i &apos;s/233/666/g&apos; log.txt</span><br><span class="line"> </span><br><span class="line"># 替换 log.txt 文件中所有 /ver 为 example/，因为有斜杠，所以需要使用 \ 转义，但是单引号会导致无法转义，所以要改成双引号。</span><br><span class="line">sed -i &quot;s/\/ver/example\//&quot; log.txt</span><br><span class="line"> </span><br><span class="line"># 显示 log.txt 文件中的奇数行或偶数行</span><br><span class="line">sed -n &apos;p;n&apos; log.txt #奇数行</span><br><span class="line">sed -n &apos;n;p&apos; log.txt #偶数行</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 sed --help 来查看。</span><br></pre></td></tr></table></figure><h3 id="VI、VIM、Nano-编辑文件内容"><a href="#VI、VIM、Nano-编辑文件内容" class="headerlink" title="VI、VIM、Nano 编辑文件内容"></a>VI、VIM、Nano 编辑文件内容</h3><p><strong>vim</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># 打开当前目录下的 log.txt文件，如果没有那么会新建 log.txt文件（安装vim后，使用 vi和 vim打开文件没区别）</span><br><span class="line">vi log.txt</span><br><span class="line">vim log.txt</span><br><span class="line"> </span><br><span class="line"># 在命令行模式下，直接输入以下 符号和字母(区分大小写)</span><br><span class="line">## 进入编辑模式（插入模式，按 Esc键 即可返回命令行模式）</span><br><span class="line">i</span><br><span class="line">## 删除光标当前所在的一行</span><br><span class="line">dd</span><br><span class="line">## 删除文件内所有内容</span><br><span class="line">dddG</span><br><span class="line">## 复制光标当前所在的一行</span><br><span class="line">yy</span><br><span class="line">## 粘贴刚才复制的一行内容</span><br><span class="line">p</span><br><span class="line">## 撤销上个操作（误操作可以用这个恢复）</span><br><span class="line">u</span><br><span class="line">## 保存当前文件（ : 是英文的冒号）</span><br><span class="line">:w</span><br><span class="line">## 另存当前文件内容为 log2.txt</span><br><span class="line">:w log2.txt</span><br><span class="line">## 退出当前文件</span><br><span class="line">:q</span><br><span class="line">## 不保存 并强制退出当前文件</span><br><span class="line">:q!</span><br><span class="line">## 保存并退出当前文件</span><br><span class="line">:wq</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 vi --help / vim --help 来查看。</span><br></pre></td></tr></table></figure><p><strong>Nano</strong>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 打开当前目录下的 log.txt文件，如果没有那么会新建 log.txt文件</span><br><span class="line">nano log.txt</span><br><span class="line"> </span><br><span class="line"># 进入后直接就可以输入修改文本内容了，修改后我们可以使用这个 按键保存内容</span><br><span class="line">Ctrl+O</span><br><span class="line"> </span><br><span class="line"># 如果不需要编辑了，那么可以用这个 按键退出当前文件</span><br><span class="line">Ctrl+X</span><br><span class="line"> </span><br><span class="line"># 如果你在退出前已经修改但没有保存，那么会提醒你是否保存，如果保存就输入 y ，不保存输入 n</span><br><span class="line"># 然后就会让你输入要保存的文件名（默认原文件名，所以直接按 Enter回车即可，除非你要另存为其他文件名）</span><br><span class="line">Enter</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以在 nano 编辑界面中按 F1键 查看。</span><br></pre></td></tr></table></figure><h2 id="解压缩-操作"><a href="#解压缩-操作" class="headerlink" title="解压缩 操作"></a>解压缩 操作</h2><p>在Linux中经常会下载到压缩文件，而压缩文件的格式有很多，比如 zip、rar、gz、xz、tar.gz、tar.xz等。</p><p>比较常见的就是各种 .tar、.tar.xz、.tar.gz、.tar.bz、.tar.bz2、.tar.Z 后缀压缩包，这几个的解压缩命令基本一样，说明一下参数的意义。</p><p>tar 本身只是一个打包的作用，而 .tar 后面的 .zx / .gz / .bz 等等才是压缩格式，也就是比如 log.tar.gz 压缩包，就是先用 .tar 把指定文件/文件夹打包到一起，然后再用 gz 来压缩打包后的 .tar 为 .tar.gz 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-x 是从压缩文件提取(解压)文件出来，所以在解压命令中都有这个参数。</span><br><span class="line">-c ：创建一个新的压缩包文件，所以在压缩命令中都有这个参数。</span><br><span class="line">-f ：指定要解压的压缩包文件或要压缩的文件/文件夹，所以这个参数必须放在 解压缩命令参数的最后，然后后面跟着 要解压到压缩包文件或要压缩的文件/文件夹。</span><br><span class="line">-j ：解压缩 bz / bz2 格式的参数</span><br><span class="line">-J ：解压缩 xz / lzip 格式的参数</span><br><span class="line">-z ：解压缩 gz / tgz 格式的参数</span><br><span class="line">-Z ：解压缩 Z 格式的参数</span><br><span class="line">-v ：详细列出解压缩过程中处理的文件</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 tar --help 来查看。</span><br></pre></td></tr></table></figure><h3 id="tar-gz-zip等-解压-压缩包-示例"><a href="#tar-gz-zip等-解压-压缩包-示例" class="headerlink" title="tar gz zip等 解压 压缩包 示例"></a>tar gz zip等 解压 压缩包 示例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"># 解压后缀为 .tar 的压缩包</span><br><span class="line">tar -xf log.tar</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 解压后缀为 .tar.xz 的压缩包</span><br><span class="line">tar -xJf log.tar.xz</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 解压后缀为 .tar.gz 的压缩包，有两个方法</span><br><span class="line">tar -xzf log.tar.gz</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 解压后缀为 .gz 的压缩包，有两个方法，如提示命令不存在，请安装 yum install gzip -y / apt-get install gzip -y</span><br><span class="line">gzip -d log.gz</span><br><span class="line">gunzip log.gz</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 解压后缀为 .bz / .bz2 / tar.bz2 的压缩包，有两个方法</span><br><span class="line">bzip2 -d log.bz</span><br><span class="line">bunzip2 log.bz</span><br><span class="line">tar -jxf log.tar.bz</span><br><span class="line"> </span><br><span class="line">bzip2 -d log.bz2</span><br><span class="line">bunzip2 log.bz2</span><br><span class="line">tar -jxf log.tar.bz2</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 解压后缀为 .Z / tar.Z 的压缩包，有两个方法</span><br><span class="line">uncompress log.Z log.txt</span><br><span class="line">uncompress log.Z log</span><br><span class="line">—————————————————————————————————————</span><br><span class="line">tar xZf log.tar.Z log.txt</span><br><span class="line">tar xZf log.tar.Z log</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 解压后缀为 .rar 的压缩包，如提示命令不存在，请安装 yum install unrar -y / apt-get install unrar -y ，注意 rar 和 unrar 是分开的</span><br><span class="line">unrar x log.rar</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 解压后缀为 .zip 的压缩包，如提示命令不存在，请安装 yum install unzip -y / apt-get install unzip -y，注意 zip 和 unzip 是分开的</span><br><span class="line">unzip log.zip</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 tar --help / gzip --help / unrar --help / unzip --help 来查看。</span><br></pre></td></tr></table></figure><h3 id="压缩-文件-文件夹-示例"><a href="#压缩-文件-文件夹-示例" class="headerlink" title="压缩 文件/文件夹 示例"></a>压缩 文件/文件夹 示例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"># 分别压缩当前目录下的 log.txt文件 / log文件夹为 log.tar 压缩包</span><br><span class="line">tar -cf log.tar log.txt</span><br><span class="line">tar -cf log.tar log</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 如果要压缩多个文件和文件夹，那么只需要在后面一直加下去即可</span><br><span class="line">tar -cf log.tar log.txt test.txt log bash</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 分别压缩当前目录下的 log.txt文件 / log文件夹为 log.tar.xz 压缩包，以下的其他后缀压缩命令都是一样</span><br><span class="line">tar -cJf log.tar.xz log.txt</span><br><span class="line">tar -cJf log.tar.xz log</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 分别压缩当前目录下的 log.txt文件 / log文件夹为 log.tar.gz 压缩包</span><br><span class="line">tar -czf log.tar.gz log.txt</span><br><span class="line">tar -czf log.tar.gz log</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 分别压缩当前目录下的 log.txt文件 / log文件夹为 log.gz 压缩包</span><br><span class="line">gzip log.gz log.txt</span><br><span class="line">gzip log.gz log</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 分别压缩当前目录下的 log.txt文件 / log文件夹为 log.tar.bz 压缩包</span><br><span class="line">暂时没查到</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 分别压缩当前目录下的 log.txt文件 / log文件夹为 log.bz / log.tar.bz / log.bz2 / log.tar.bz2压缩包</span><br><span class="line">bzip2 -z log.txt</span><br><span class="line">bzip2 -z log</span><br><span class="line"> </span><br><span class="line">tar cjf log.tar.bz2 log.txt</span><br><span class="line">tar cjf log.tar.bz2 log</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 分别压缩当前目录下的 log.txt文件 / log文件夹为 log.Z / log.tar.Z 压缩包</span><br><span class="line">compress log.txt</span><br><span class="line">compress log</span><br><span class="line"> </span><br><span class="line">tar cZf log.tar.Z log.txt</span><br><span class="line">tar cZf log.tar.Z log</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 分别压缩当前目录下的 log.txt文件 / log文件夹为 log.rar 压缩包，如提示命令不存在，请安装 yum install rar -y / apt-get install rar -y ，注意 rar 和 unrar 是分开的</span><br><span class="line">unrar a log.rar log.txt</span><br><span class="line">unrar a log.rar log</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 分别压缩当前目录下的 log.txt文件 / log文件夹为 log.zip 压缩包，如提示命令不存在，请安装 yum install zip -y / apt-get install zip -y ，注意 zip 和 unzip 是分开的</span><br><span class="line">zip log.zip log.txt</span><br><span class="line">zip log.zip log</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 tar --help / gzip --help / rar --help / zip --help 来查看。</span><br></pre></td></tr></table></figure><h2 id="网络工具"><a href="#网络工具" class="headerlink" title="网络工具"></a>网络工具</h2><h3 id="wget-下载工具"><a href="#wget-下载工具" class="headerlink" title="wget 下载工具"></a>wget 下载工具</h3><p>wget 是Linux系统最常用的工具之一，命令行方式的多功能下载工具，支持HTTP，HTTPS和FTP协议。</p><p><strong>参数介绍：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 只介绍最常用的参数</span><br><span class="line"># 如果提示命令不存在，那么使用 yum install wget -y / apt-get install wget -y 来安装（有一些非常精简的系统可能会没装）</span><br><span class="line"> </span><br><span class="line">-b ：启动后，后台下载</span><br><span class="line">-q ：安静模式（不输出任何信息）</span><br><span class="line">-c ：断点续传下载文件</span><br><span class="line">-O ：指定下载后的文件名（可使用绝对路径目录+文件名）</span><br><span class="line">-P ：指定下载后的文件目录（-P只能指定下载目录，并不能指定文件名）</span><br><span class="line">-t ：设置重试次数（0代表无限）</span><br><span class="line">-T ：设置超时时间（单位：秒）</span><br><span class="line">-N ：只获取比本地新的文件（新的覆盖旧的）</span><br><span class="line">-4 ：仅连接至 IPv4地址</span><br><span class="line">-6 ：仅连接至 IPv6地址</span><br><span class="line">--limit-rate=xxxk :限制下载速度（k代表KB/S）</span><br><span class="line">--post-data ：通过POST方式发送数据</span><br><span class="line">--no-check-certificate ：不验证服务器的SSL证书</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 wget --help 来查看。</span><br></pre></td></tr></table></figure><p><strong>使用示例：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"># 下载一个文件到当前目录</span><br><span class="line">wget https://softsmirror.cf/100MB.bin</span><br><span class="line"> </span><br><span class="line"># 下载文件到当前目录并重命名为 200MB.bin</span><br><span class="line">wget -O &quot;200MB.bin&quot; https://softsmirror.cf/100MB.bin</span><br><span class="line"> </span><br><span class="line"># 下载文件到 /root目录（-P只能指定下载目录，并不能指定文件名）</span><br><span class="line">wget -P &quot;/root&quot; https://softsmirror.cf/100MB.bin</span><br><span class="line"> </span><br><span class="line"># 下载文件到 /root/example目录并重命名为 200MB.bin</span><br><span class="line">wget -O &quot;/root/example/200MB.bin&quot; https://softsmirror.cf/100MB.bin</span><br><span class="line"> </span><br><span class="line"># 下载文件完成之前 wget进程结束了，那么可以使用断点续传重新下载中断的文件（前提是下载服务器支持断点续传）</span><br><span class="line">wget -c https://softsmirror.cf/100MB.bin</span><br><span class="line"> </span><br><span class="line"># 通过后台下载文件到 /root/example目录并重命名为 200MB.bin</span><br><span class="line">wget -b -O &quot;/root/example/200MB.bin&quot; https://softsmirror.cf/100MB.bin</span><br><span class="line"># Continuing in background, pid 2333.</span><br><span class="line"># Output will be written to `wget-log&apos;.</span><br><span class="line"># 后台下后，你可以使用以下命令来查看下载进度：</span><br><span class="line">tail -f wget-log</span><br><span class="line"> </span><br><span class="line"># 有时候一些Linux系统中的SSL证书不完整，会导致下载一些 HTTPS网站文件的时候会验证SSL证书失败，可以这样做</span><br><span class="line"># 不验证服务器SSL证书，下载文件到当前目录并重命名为 200MB.bin</span><br><span class="line">wget --no-check-certificate -O &quot;200MB.bin&quot; https://softsmirror.cf/100MB.bin</span><br><span class="line"> </span><br><span class="line"># 使用wget发送POST请求数据</span><br><span class="line">wget --post-data &quot;user=example&amp;passwd=23333&quot; https://xxx.xx/</span><br><span class="line"> </span><br><span class="line"># 下载文件到当前目录 并仅通过IPv4连接 只获取比本地新的文件，限速 200KB/S</span><br><span class="line">wget --limit-rate=200k -N -4 https://softsmirror.cf/100MB.bin</span><br><span class="line"> </span><br><span class="line"># 下载文件到当前目录 并重试次数为 1，超时时间为 2秒</span><br><span class="line">wget -t1 -T2 https://softsmirror.cf/100MB.bin</span><br><span class="line"> </span><br><span class="line"># 通过 wget来获取服务器的外网IP（-qO- 代表运行完会输出下载的信息，并不会保存到本地文件）</span><br><span class="line">wget -qO- ipinfo.io/ip</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 wget --help 来查看。</span><br></pre></td></tr></table></figure><h3 id="curl-下载工具"><a href="#curl-下载工具" class="headerlink" title="curl 下载工具"></a>curl 下载工具</h3><p>curl是Linux系统一个利用URL规则在命令行下工作的文件传输工具，是一款很强大的HTTP命令行工具。它支持文件的上传和下载，是综合传输工具，但习惯称curl为下载工具。</p><p><strong>参数介绍：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 只介绍最常用的参数</span><br><span class="line"># 如果提示命令不存在，那么使用 yum install curl -y / apt-get install curl -y 来安装（有一些非常精简的系统可能会没装）</span><br><span class="line"> </span><br><span class="line">-s ：安静模式（不会输出任何信息）</span><br><span class="line">-C ：断点续传下载文件</span><br><span class="line">-o ：输出写入到文件中</span><br><span class="line">-O ：输出写入到文件，文件名为 远程文件的名称</span><br><span class="line">-k ：不验证服务器SSL证书</span><br><span class="line">-T ：上传文件</span><br><span class="line">-4 ：仅连接至 IPv4地址</span><br><span class="line">-6 ：仅连接至 IPv6地址</span><br><span class="line">-m ：设置传输总时间（单位：秒）</span><br><span class="line">--retry ：设置重试次数</span><br><span class="line">--data ：通过POST方式发送数据</span><br><span class="line">--limit-rate xxxK ：限制下载速度（K代表KB/S）</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 curl --help 来查看。</span><br></pre></td></tr></table></figure><p><strong>使用示例：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># 获取当前服务器的外网IP</span><br><span class="line">curl ipinfo.io/ip</span><br><span class="line"> </span><br><span class="line"># 获取一个文件保存到当前目录中</span><br><span class="line">wget -O https://softsmirror.cf/Bash/ssr.sh</span><br><span class="line"> </span><br><span class="line"># 获取一个文件保存到 /root/example目录中 并修改文件名为 233.sh</span><br><span class="line">curl -o &quot;/root/example/233.sh&quot; https://softsmirror.cf/Bash/ssr.sh</span><br><span class="line"> </span><br><span class="line"># 下载文件完成之前 curl进程结束了，那么可以使用断点续传重新下载中断的文件（前提是下载服务器支持断点续传）</span><br><span class="line">curl -C -O https://softsmirror.cf/100MB.bin</span><br><span class="line"> </span><br><span class="line"># 有时候一些Linux系统中的SSL证书不完整，会导致访问/下载一些 HTTPS网站/文件的时候会验证SSL证书失败，可以这样做</span><br><span class="line"># 不验证服务器SSL证书，下载文件到当前目录并重命名为 233.sh</span><br><span class="line">curl -k -o &quot;233.sh&quot; https://softsmirror.cf/Bash/ssr.sh</span><br><span class="line"> </span><br><span class="line"># 使用curl发送GET请求数据</span><br><span class="line">curl https://xxx.xx/?user=example</span><br><span class="line"> </span><br><span class="line"># 使用curl发送POST请求数据</span><br><span class="line">curl --data &quot;user=example&amp;passwd=23333&quot; https://xxx.xx/</span><br><span class="line"> </span><br><span class="line"># 下载文件到当前目录 并仅通过IPv4连接，限速 200KB/S</span><br><span class="line">curl --limit-rate 200K -4 https://softsmirror.cf/100MB.bin</span><br><span class="line"> </span><br><span class="line"># 下载文件到当前目录 并重试次数为 1，超时时间为 2秒</span><br><span class="line">curl --retry 1 -m 10 https://softsmirror.cf/100MB.bin</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 curl --help 来查看。</span><br></pre></td></tr></table></figure><h3 id="netstat-查看链接和端口监听等信息"><a href="#netstat-查看链接和端口监听等信息" class="headerlink" title="netstat 查看链接和端口监听等信息"></a>netstat 查看链接和端口监听等信息</h3><p><strong>参数介绍：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-n ：不显示别名（主机名/域名以 数字或IP显示）</span><br><span class="line">-e ：显示其他/更多信息</span><br><span class="line">-p ：显示进程PID/进程名</span><br><span class="line">-c ：持续输出（设置后会每隔 1秒输出一次，Ctrl+C 终止）</span><br><span class="line">-l ：显示正在监听的套接字</span><br><span class="line">-a ：显示全部信息</span><br><span class="line"> </span><br><span class="line"># 下面这些就不很常用了。</span><br><span class="line">-r ：显示路由表</span><br><span class="line">-i ：显示网络接口（网卡）</span><br><span class="line">-g ：显示多播组信息</span><br><span class="line">-s ：显示网络统计</span><br><span class="line">-M ：显示伪装连接</span><br><span class="line">-v ：显示正在进行的工作</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 netstat --help 来查看。</span><br></pre></td></tr></table></figure><p><strong>使用示例：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 显示当前服务器的所有连接信息</span><br><span class="line">netstat -a</span><br><span class="line"> </span><br><span class="line"># 显示当前服务器的所有 TCP连接信息</span><br><span class="line">netstat -at</span><br><span class="line"> </span><br><span class="line"># 显示当前服务器的所有 UDP连接信息</span><br><span class="line">netstat -au</span><br><span class="line"> </span><br><span class="line"># 显示当前服务器的所有 端口监听信息</span><br><span class="line">netstat -lnp</span><br><span class="line"> </span><br><span class="line"># 显示当前服务器的所有 TDP端口监听信息</span><br></pre></td></tr></table></figure><p>一般来说经常使用这个命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 显示当前服务器的所有正在监听 TCP端口的信息，并且 显示进程PID和进程名，但不显示别名（域名以IP显示），这个命令算是最常用的了。</span><br><span class="line">netstat -lntp</span><br><span class="line"> </span><br><span class="line"># 输出示例</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name</span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      14233/nginx.conf</span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1555/sshd       </span><br><span class="line">tcp        0      0 0.0.0.0:443             0.0.0.0:*               LISTEN      14233/nginx.conf</span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN      1555/sshd</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 显示监听 80端口的进程PID和进程名，grep是匹配并显示 符合关键词的行。</span><br><span class="line">netstat -lntp|grep &quot;:80&quot;</span><br><span class="line"> </span><br><span class="line"># 输出示例</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name</span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      14233/nginx.conf</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 显示 ssh的监听情况，grep是匹配并显示 符合关键词的行。</span><br><span class="line">netstat -lntp|grep &quot;ssh&quot;</span><br><span class="line"> </span><br><span class="line"># 输出示例</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name</span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1555/sshd</span><br></pre></td></tr></table></figure><p>表头解释：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Proto ：连接协议（tcp/udp是IPv4，tcp6/udp6是IPv6）</span><br><span class="line">Recv-Q ： 接收队列（基本都是0，如果不是代表堆积）</span><br><span class="line">Send-Q ：发送队列（基本都是0，如果不是代表堆积）</span><br><span class="line">Local Address ：本地地址和端口</span><br><span class="line">Foreign Address ：对外地址和端口</span><br><span class="line">State ：连接状态</span><br><span class="line">PID/Program name ：进程PID/进程名</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 每隔 1秒显示一次当前服务器的所有连接信息</span><br><span class="line">netstat -c</span><br><span class="line"> </span><br><span class="line"># 每隔 1秒显示一次当前服务器的所有 TCP连接信息</span><br><span class="line">netstat -ct</span><br><span class="line"> </span><br><span class="line"># 每隔 1秒显示一次当前服务器的所有 UDP连接信息</span><br><span class="line">netstat -cu</span><br><span class="line"> </span><br><span class="line"># 显示当前服务器的路由表</span><br><span class="line">netstat -r</span><br><span class="line"> </span><br><span class="line"># 显示当前服务器的网络接口信息（网卡）</span><br><span class="line">netstat -i</span><br><span class="line"> </span><br><span class="line"># 显示当前服务器的网络统计信息</span><br><span class="line">netstat -s</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 netstat --help 来查看。</span><br></pre></td></tr></table></figure><p>在使用 netstat命令中，会显示一些连接状态，下面是各状态的意思：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">LISTEN</span><br><span class="line"># 监听来自远程连接的 TCP端口连接请求</span><br><span class="line"> </span><br><span class="line">SYN-SENT</span><br><span class="line"># 在发送连接请求后，等待匹配的连接请求</span><br><span class="line"> </span><br><span class="line">SYN-RECEIVED</span><br><span class="line"># 在收到和发送一个连接请求后，等待对方对连接请求的确认</span><br><span class="line"> </span><br><span class="line">ESTABLISHED</span><br><span class="line"># 代表一个打开的连接</span><br><span class="line"> </span><br><span class="line">FIN-WAIT-1</span><br><span class="line"># 等待远程 TCP连接中断请求，或先前的连接中断请求的确认</span><br><span class="line"> </span><br><span class="line">FIN-WAIT-2</span><br><span class="line"># 从远程 TCP等待连接中断请求 </span><br><span class="line"> </span><br><span class="line">CLOSE-WAIT</span><br><span class="line"># 等待从本地用户发来的连接中断请求 </span><br><span class="line"> </span><br><span class="line">CLOSING</span><br><span class="line"># 等待远程TCP对连接中断的确认 </span><br><span class="line"> </span><br><span class="line">LAST-ACK</span><br><span class="line"># 等待原来的发向远程TCP的连接中断请求的确认 </span><br><span class="line"> </span><br><span class="line">TIME-WAIT</span><br><span class="line"># 等待足够的时间，以确保远程TCP接收到连接中断请求的确认 </span><br><span class="line"> </span><br><span class="line">CLOSED</span><br><span class="line"># 没有任何连接状态（或者关闭了连接）</span><br></pre></td></tr></table></figure><h2 id="系统命令"><a href="#系统命令" class="headerlink" title="系统命令"></a>系统命令</h2><h3 id="ps-查看进程信息"><a href="#ps-查看进程信息" class="headerlink" title="ps 查看进程信息"></a>ps 查看进程信息</h3><p><strong>使用示例：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 显示当前进程信息</span><br><span class="line">ps -ef</span><br><span class="line"> </span><br><span class="line"># 显示 ssh 进程（ grep -v grep 表示排除关键词grep，因为使用 grep匹配ssh，也会把grep自己的进程匹配进去的）</span><br><span class="line">ps -ef|grep -v grep|grep &apos;ssh&apos;</span><br><span class="line"># 输出示例</span><br><span class="line">UID        PID  PPID  C STIME TTY          TIME CMD #注意使用上面命令的话是不会显示表头这一行的，我只是为了更好理解加上的</span><br><span class="line">root      1738     1  0 01/27   ?       00:08:56 /usr/sbin/sshd</span><br><span class="line"> </span><br><span class="line"># 待写...</span><br></pre></td></tr></table></figure><p>表头解释：</p><figure class="highlight plain"><figcaption><span>：启动进程的用户</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">UID ：启动进程的用户</span><br><span class="line">PID ：进程标识符（进程 1代表init 是整个系统的父进程）</span><br><span class="line">PPID ：父进程标识符（进程 1代表init 是整个系统的父进程）</span><br><span class="line">C ：CPU占用率 %</span><br><span class="line">STIME ：启动进程的日期</span><br><span class="line">TTY ：终端号</span><br><span class="line">TIME ：进程运行时间（非休眠状态）</span><br><span class="line">CMD ：启动进程的命令（或进程名/进程程序所在目录）</span><br></pre></td></tr></table></figure><h3 id="kill-结束进程"><a href="#kill-结束进程" class="headerlink" title="kill 结束进程"></a>kill 结束进程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 当我们想要结束一个进程的时候，我们可以用 kill 命令</span><br><span class="line"># PID是每个进程的一个唯一标识符，可以使用上面的 ps 命令来查看你要结束进程的PID。</span><br><span class="line"> </span><br><span class="line"># 假设我们要结束 Nginx的进程，那么这样做（ grep -v grep 表示排除关键词grep，因为使用 grep匹配ssh，也会把grep自己的进程匹配进去的）：</span><br><span class="line">ps -ef|grep -v grep|grep &quot;nginx&quot;</span><br><span class="line"> </span><br><span class="line"># 输出示例</span><br><span class="line">UID PID PPID C STIME TTY TIME CMD #注意使用上面命令的话是不会显示表头这一行的，我只是为了更好理解加上的</span><br><span class="line">root 2356 1 0 04/03 ? 00:03:12 nginx</span><br><span class="line"> </span><br><span class="line"># 然后我们可以看到第二列的 PID 进程标识符，然后我们 kill 即可。</span><br><span class="line">kill -9 2356</span><br><span class="line"> </span><br><span class="line"># 中断进程 -2 相当于 程序运行在前台，然后输入 Ctrl+C 的效果，但是进程有权利忽略，所以不一定能结束进程</span><br><span class="line">kill -2 PID</span><br><span class="line"># 强制结束进程 -9 ，注意：强制结束某个进程后，可能会造成进程数据丢失等问题！</span><br><span class="line">kill -9 PID</span><br></pre></td></tr></table></figure><h3 id="free-查看内存使用信息"><a href="#free-查看内存使用信息" class="headerlink" title="free 查看内存使用信息"></a>free 查看内存使用信息</h3><p><strong>参数介绍：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-b ：以 字节(bytes/B) 为单位显示</span><br><span class="line">-k ：以 KB 为单位显示</span><br><span class="line">-m ：以 MB 为单位显示</span><br><span class="line">-g ：以 GB 为单位显示</span><br><span class="line">--tera ：以 TB 为单位显示</span><br><span class="line">-h ：以 人类易读的方式输出</span><br><span class="line">--si ：以 1000为单位转换，而不是 1024（1MB=1*1024KB改成 1MB=1*1000KB）</span><br><span class="line">-t ：显示 内存总数 行</span><br><span class="line">-s 时间 ：每隔 X秒输出一次（重复输出监视内存，使用 Ctrl+C 终止）</span><br><span class="line">-c 次数 ：每隔 1秒输出 X次</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 free --help 来查看。</span><br></pre></td></tr></table></figure><p><strong>使用示例：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"># 显示当前系统内存（默认 free = free -k，单位为 KB）</span><br><span class="line">free</span><br><span class="line"> </span><br><span class="line"># 输出示例</span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:        250872     237752      13120          0      34620      70520</span><br><span class="line">-/+ buffers/cache:     132612     118260</span><br><span class="line">Swap:       643064       1744     641320</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 以单位 B/KB/MB/GB/TG 显示当前系统内存</span><br><span class="line">free -b / free -k / free -m / free -g / free --tera</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 以人类易读的方式 显示当前系统内存</span><br><span class="line">free -h</span><br><span class="line"> </span><br><span class="line"># 输出示例</span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:          244M       232M        12M         0B        33M        68M</span><br><span class="line">-/+ buffers/cache:       129M       115M</span><br><span class="line">Swap:         627M       1.7M       626M</span><br><span class="line">—————————————————————————————————————</span><br><span class="line"># 以 1000为单位转换并使用 MB为单位 显示当前系统内存（1MB=1*1024KB改成 1MB=1*1000KB）</span><br><span class="line">free -m --si</span><br><span class="line"> </span><br><span class="line"># 每隔 3秒并使用 MB为单位 显示一次当前系统内存</span><br><span class="line">free -ms 3</span><br><span class="line"> </span><br><span class="line"># 每隔 1秒并使用 MB为单位 显示 5次当前系统内存</span><br><span class="line">free -mc 5</span><br><span class="line"> </span><br><span class="line"># 每隔 2秒并使用 MB为单位 总共显示 6次当前系统内存</span><br><span class="line">free -m -c 6 -s 2</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 free --help 来查看。</span><br></pre></td></tr></table></figure><p><strong>表头解释：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 说明示例</span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:          244M       232M        12M         0B        33M        69M</span><br><span class="line">-/+ buffers/cache:       129M       115M</span><br><span class="line">Swap:         627M       1.7M       626M</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># Mem 行，表示物理内存统计</span><br><span class="line">total :系统 总物理内存</span><br><span class="line">used :系统 已分配物理内存（但非全部都在使用，包含buffers好cached）</span><br><span class="line">free :系统 未分配物理内存</span><br><span class="line">shared :系统 共享内存，一般都是 0</span><br><span class="line">buffers :系统 分配但未使用的 buffers数量</span><br><span class="line">cached :系统 分配但未使用的 cached数量</span><br><span class="line"> </span><br><span class="line"># -/+ buffers/cache 行，表示物理内存的缓存统计</span><br><span class="line">used :系统 实际使用的内存</span><br><span class="line"># user= Mem行 used-buffers-cached（232-33-69=130，因单位转换问题 所以会有一点差距）</span><br><span class="line">free :系统 实际可用的内存</span><br><span class="line"># free= Mem行 free+buffers+cached（12+33+69=114，因单位转换问题 所以会有一点差距）</span><br><span class="line"> </span><br><span class="line"># 所以我们看系统的真实 使用/剩余内存 只需要看这一行即可！</span><br><span class="line"> </span><br><span class="line"># Swap 行，表示硬盘的交换分区（虚拟内存）统计</span><br><span class="line">total :系统 总虚拟内存</span><br><span class="line">used :系统 已分配虚拟内存</span><br><span class="line">free :系统 未分配虚拟内存</span><br></pre></td></tr></table></figure><h3 id="date-查看-设置-系统时间"><a href="#date-查看-设置-系统时间" class="headerlink" title="date 查看/设置 系统时间"></a>date 查看/设置 系统时间</h3><p><strong>参数介绍：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"> -d ：以指定的时间格式 显示时间</span><br><span class="line"> -f ：显示 DATE FILE文件中的每行时间（我也不懂）</span><br><span class="line"> -r ：显示 文件/文件夹 最后修改时间</span><br><span class="line"> -s ：设置 系统时间</span><br><span class="line"> -u ：显示 UTC时间</span><br><span class="line"> </span><br><span class="line"># 时间格式</span><br><span class="line"> </span><br><span class="line">%% - 显示字符%</span><br><span class="line">%a - 星期几的缩写(Sun..Sat)</span><br><span class="line">%A - 星期几的完整名称（Sunday...Saturday）</span><br><span class="line">%b - 月份的缩写(Jan..Dec)</span><br><span class="line">%B - 月份的完整名称(January..December)</span><br><span class="line">%c - 日期与时间。只输入date指令也会显示同样的结果</span><br><span class="line">%C - 世纪(年份除100后去整) [00-99]</span><br><span class="line">%d - 日期(以01-31来表示)。</span><br><span class="line">%D - 日期(含年月日)。</span><br><span class="line">%e - 一个月的第几天 ( 1..31)</span><br><span class="line">%F - 日期，同%Y-%m-%d</span><br><span class="line">%g - 年份(yy)</span><br><span class="line">%G - 年份(yyyy)</span><br><span class="line">%h - 同%b</span><br><span class="line">%H - 小时(00..23)</span><br><span class="line">%I - 小时(01..12)</span><br><span class="line">%j - 一年的第几天(001..366)</span><br><span class="line">%k - 小时( 0..23)</span><br><span class="line">%l - 小时( 1..12)</span><br><span class="line">%m - 月份(01..12)</span><br><span class="line">%M - 分钟(00..59)</span><br><span class="line">%n - 换行</span><br><span class="line">%N - 纳秒(000000000..999999999)</span><br><span class="line">%p - AM or PM</span><br><span class="line">%P - am or pm</span><br><span class="line">%r - 12小时制时间(hh:mm:ss [AP]M)</span><br><span class="line">%R - 24小时制时间(hh:mm)</span><br><span class="line">%s - 从00:00:00 1970-01-01 UTC开始的秒数</span><br><span class="line">%S - 秒(00..60)</span><br><span class="line">%t - 制表符</span><br><span class="line">%T - 24小时制时间(hh:mm:ss)</span><br><span class="line">%u - 一周的第几天(1..7); 1 表示星期一</span><br><span class="line">%U - 一年的第几周，周日为每周的第一天(00..53)</span><br><span class="line">%V - 一年的第几周，周一为每周的第一天 (01..53)</span><br><span class="line">%w - 一周的第几天 (0..6); 0 代表周日</span><br><span class="line">%W - 一年的第几周，周一为每周的第一天(00..53)</span><br><span class="line">%x - 日期(mm/dd/yy)</span><br><span class="line">%X - 时间(%H:%M:%S)</span><br><span class="line">%y - 年份(00..99)</span><br><span class="line">%Y - 年份 (1970…)</span><br><span class="line">%z - RFC-2822 风格数字格式时区(-0500)</span><br><span class="line">%Z - 时区(e.g., EDT), 无法确定时区则为空</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 date --help 来查看。</span><br></pre></td></tr></table></figure><p><strong>使用示例：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"># 显示 当前系统时间</span><br><span class="line">date</span><br><span class="line"># 输出：Wed Apr 5 12:38:44 CST 2017</span><br><span class="line"> </span><br><span class="line"># 显示当前系统的 UTC时间</span><br><span class="line">date -u</span><br><span class="line"># 输出：Wed Apr 5 04:30:06 UTC 2017</span><br><span class="line"> </span><br><span class="line"># 显示 log.txt 文件的最后修改时间</span><br><span class="line">date -r log.txt</span><br><span class="line"> </span><br><span class="line"># 显示 当前日期的年份</span><br><span class="line">date +%Y</span><br><span class="line"># 输出：2017</span><br><span class="line"> </span><br><span class="line"># 显示 当前日期的月份</span><br><span class="line">date +%m</span><br><span class="line"># 输出：4</span><br><span class="line"> </span><br><span class="line"># 显示 各种格式类型的日期</span><br><span class="line">date +%D</span><br><span class="line"># 输出：04/05/17</span><br><span class="line"> </span><br><span class="line">date +%Y-%m-%d</span><br><span class="line"># 输出：2017-04-05</span><br><span class="line"> </span><br><span class="line">date +%m/%d/%y</span><br><span class="line"># 输出：04/05/17</span><br><span class="line"> </span><br><span class="line">date +%m/%d/%Y</span><br><span class="line"># 输出：04/05/2017</span><br><span class="line"> </span><br><span class="line"># 显示 Unix时间戳</span><br><span class="line">date +%s</span><br><span class="line"># 输出：1491367399</span><br><span class="line"> </span><br><span class="line"># 显示一个完整的时间（年、月、日、小时、分钟、秒钟、周几 时区）</span><br><span class="line">date &quot;+%Y-%m-%d %H:%M:%S %u %Z&quot;</span><br><span class="line"># 输出：2017-04-05 12:12:15 3 CST</span><br><span class="line"> </span><br><span class="line"># 设置 系统时间（年、月、日）</span><br><span class="line">date -s &quot;2017-04-05&quot;</span><br><span class="line"> </span><br><span class="line"># 设置 系统时间（小时、分钟、秒钟）</span><br><span class="line">date -s &quot;10:29:05&quot;</span><br><span class="line"> </span><br><span class="line"># 设置 系统时间（年、月、日、小时、分钟、秒钟）</span><br><span class="line">date -s &quot;2017-04-05 10:29:05&quot;</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 date --help 来查看。</span><br></pre></td></tr></table></figure><p><strong>修改时区为上海（北京）时区的方法：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/cp -f /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure><p>然后再用<code>date</code>查看时间，就会发现时区变为 CST 了。</p><h3 id="chmod-修改-文件-文件夹-权限"><a href="#chmod-修改-文件-文件夹-权限" class="headerlink" title="chmod 修改 文件/文件夹 权限"></a>chmod 修改 文件/文件夹 权限</h3><p><strong>参数介绍：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">-c :只输出被改变权限的文件信息</span><br><span class="line">-f :当chmod不能改变文件模式时，不通知文件的用户</span><br><span class="line">-R :可递归遍历子目录，把修改应到目录下所有文件和子目录</span><br><span class="line">-v :无论修改是否成功，输出每个文件的信息</span><br><span class="line"> </span><br><span class="line"># 操作符号：</span><br><span class="line"> </span><br><span class="line">+ :添加某个权限。</span><br><span class="line">- :取消某个权限。</span><br><span class="line">= :赋予给定权限并取消其他所有权限（如果有的话）。</span><br><span class="line"> </span><br><span class="line"># 权限设置字母：</span><br><span class="line"> </span><br><span class="line">r :可读</span><br><span class="line">w :可写</span><br><span class="line">x :可执行</span><br><span class="line">X :只有目标文件对某些用户是可执行的或该目标文件是目录时才追加x 属性</span><br><span class="line">s :在文件执行时把进程的属主或组ID置为该文件的文件属主。方式“u＋s”设置文件的用户ID位，“g＋s”设置组ID位</span><br><span class="line">t :保存程序的文本到交换设备上</span><br><span class="line">u :当前用户的权限</span><br><span class="line">g :当前用户同组的权限</span><br><span class="line">o :其他用户的权限</span><br><span class="line"> </span><br><span class="line"># 权限设定数字：</span><br><span class="line"> </span><br><span class="line"># 数字表示的属性含义：</span><br><span class="line">0 ：表示没有权限</span><br><span class="line">1 ：表示可执行权限</span><br><span class="line">2 ：表示可写权限</span><br><span class="line">4 ：表示可读权限</span><br><span class="line"> </span><br><span class="line"># 然后将其相加，所以数字属性的格式应为3个从0到7的八进制数，其顺序是（u）（g）（o）。</span><br><span class="line"># 如果想让某个文件的属主有“读/写”二种权限，需要把4（可读）+2（可写）＝6（读/写）。</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 chmod --help 来查看。</span><br></pre></td></tr></table></figure><p><strong>使用示例：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 当需要运行 可执行的脚本或者程序（比如 Go语言编写的软件）的时候，需要赋予执行权限</span><br><span class="line">chmod +x ssr.sh</span><br><span class="line"> </span><br><span class="line"># 赋予 log.txt 文件可读权限</span><br><span class="line">chmod 444 log.txt</span><br><span class="line"> </span><br><span class="line"># 赋予 /ver/log 文件夹 可读、可写权限</span><br><span class="line">chmod 666 log.txt</span><br><span class="line"> </span><br><span class="line"># 赋予 /home/www 文件夹 可读、可写、可执行权限</span><br><span class="line">chmod 777 log.txt</span><br><span class="line"> </span><br><span class="line"># 赋予 /home/www 文件夹极其所有子目录和文件 可读、可写、可执行权限</span><br><span class="line">chmod -R 777 log.txt</span><br><span class="line"># 更多的命令可以用 chmod --help 来查看。</span><br></pre></td></tr></table></figure><p>uname 获取操作系统信息</p><p><strong>参数介绍：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-a：显示 全部信息</span><br><span class="line">-m：显示 系统位数</span><br><span class="line">-n：显示 主机名称</span><br><span class="line">-r：显示 操作系统的发行编号</span><br><span class="line">-s：显示 操作系统的名称</span><br><span class="line">-v：显示 操作系统的版本</span><br><span class="line">-p：输出 处理器类型 或&quot;unknown&quot;</span><br><span class="line">-i：输出 硬件平台 或&quot;unknown&quot;</span><br><span class="line">-o：输出 操作系统名称</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 uname --help 来查看。</span><br></pre></td></tr></table></figure><p><strong>使用示例：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">root@example:~# uname       #在使用 uname 的时候，相当于是使用 uname -s</span><br><span class="line">Linux</span><br><span class="line"> </span><br><span class="line">root@example:~# uname -a</span><br><span class="line">Linux example 4.9.75-040975-generic #1 SMP Thu Oct 27 16:59:03 MSK 2016 x86_64 GNU/Linux</span><br><span class="line"> </span><br><span class="line">root@example:~# uname -m       #输出一般是64位: x86_64 / 32位: i386 或分支 i686 </span><br><span class="line">x86_64 # 系统位数</span><br><span class="line"> </span><br><span class="line">root@example:~# uname -n</span><br><span class="line">example # 服务器名（往往购买服务器时会让你填写）</span><br><span class="line"> </span><br><span class="line">root@example:~# uname -r</span><br><span class="line">4.9.75-040975-generic # 系统当前内核（主）</span><br><span class="line"> </span><br><span class="line">root@example:~# uname -s</span><br><span class="line">Linux</span><br><span class="line"> </span><br><span class="line">root@example:~# uname -v</span><br><span class="line">#1 SMP Thu Oct 27 16:59:03 MSK 2016</span><br><span class="line"> </span><br><span class="line">root@example:~# uname -p</span><br><span class="line">unknown</span><br><span class="line"> </span><br><span class="line">root@example:~# uname -i</span><br><span class="line">unknown</span><br><span class="line"> </span><br><span class="line">root@example:~# uname -o</span><br><span class="line">GNU/Linux</span><br></pre></td></tr></table></figure><p>我只是暂时把我想到的写出来了，我还会继续慢慢添加的，有什么建议可以在下面留言评论。</p>]]></content>
    
    <summary type="html">
    
      最近在vps上跑爬虫，用到一些Linux命令，在这记录一下备忘
    
    </summary>
    
      <category term="VPS" scheme="https://lixint.github.io/categories/VPS/"/>
    
    
      <category term="vps" scheme="https://lixint.github.io/tags/vps/"/>
    
      <category term="Linux" scheme="https://lixint.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>利用Caddy FileBrowser扩展部署私人网盘</title>
    <link href="https://lixint.github.io/filemanager.html"/>
    <id>https://lixint.github.io/filemanager.html</id>
    <published>2018-12-26T05:06:45.000Z</published>
    <updated>2018-12-26T06:40:11.210Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2018年12月26日14:40</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><h3 id="Caddy-FileBrowser扩展介绍"><a href="#Caddy-FileBrowser扩展介绍" class="headerlink" title="Caddy FileBrowser扩展介绍"></a>Caddy FileBrowser扩展介绍</h3><p>FileBrowser 是基于Caddy 的扩展。它提供文件管理界面，可用于 上传/下载/删除/预览和重命名 等该目录中的文件。</p><blockquote><p>支持 上传文件<br>支持 按类型 搜索文件<br>支持 批量压缩 文件下载<br>支持 多用户管理(权限可控)<br>支持 在网页执行 Linux命令<br>支持 创建 共享链接(限时/永久)<br>支持 在线编辑 各类文本文件<br>支持 在线浏览 图片/文本/视频等<br>支持 新建/重命名/移动/删除 文件和文件夹等<br>部署简单，几步完成，无需任何依赖环境<br>等等 …</p></blockquote><p><strong>Caddy 文档：</strong><a href="https://caddyserver.com/docs/http.filemanager" target="_blank" rel="noopener">https://caddyserver.com/docs/http.filemanager</a></p><p><strong>Github 项目：</strong><a href="https://github.com/filebrowser/filebrowser" target="_blank" rel="noopener">https://github.com/filebrowser/filebrowser</a></p><h3 id="安装-Caddy"><a href="#安装-Caddy" class="headerlink" title="安装 Caddy"></a>安装 Caddy</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/lixint/blogfile/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh install http.filemanager</span><br><span class="line"><span class="meta">#</span> 如果你要同时安装多个 Caddy 插件，那么请修改下面的命令格式为：</span><br><span class="line"><span class="meta">#</span> bash caddy_install.sh install http.filemanager,http.xxx,http.xxx</span><br><span class="line"><span class="meta">#</span> 英文半角逗号分隔多个插件名称</span><br><span class="line"><span class="meta">#</span> 注意并不能单独安装一个扩展，所以如果你要新安装扩展，请执行上面的命令安装 Caddy 并加上你要安装的所有扩展的名称</span><br></pre></td></tr></table></figure><p>安装Caddy成功后，继续新建一个用于使用的虚拟主机文件夹，例如 <strong>file</strong>（可以自己改）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /usr/local/caddy/www &amp;&amp; mkdir /usr/local/caddy/www/file</span><br></pre></td></tr></table></figure><h3 id="配置-Caddy"><a href="#配置-Caddy" class="headerlink" title="配置 Caddy"></a>配置 Caddy</h3><p>首先，我们先讲一下，FileBrowser扩展各个参数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">filemanager [url] [scope] &#123;</span><br><span class="line"> database path</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ol><li><strong>url</strong> 是要设置的网站URL。默认是 <code>/</code> (比如 <code>/disk</code> 那么访问入口就是 <code>http://ip/disk</code> )。</li><li><strong>scope</strong> 是要浏览的服务器文件目录路径，可以使相对或绝对路径。默认是 <code>./</code> (服务器上面文件的绝对或相对路径)。</li><li><strong>database path</strong> 是 filemanager 的数据库路径（如果不写这个参数，则默认就是 <strong>/usr/local/caddy/filemanager.db</strong>）</li></ol></blockquote><h4 id="配置示例"><a href="#配置示例" class="headerlink" title="配置示例"></a>配置示例</h4><p>以下示例中，虚拟主机文件夹皆为 <code>/usr/local/caddy/www/file</code></p><p>示例域名皆为 <code>example.com</code></p><h5 id="IP-HTTP"><a href="#IP-HTTP" class="headerlink" title="IP HTTP"></a>IP HTTP</h5><p>本示例是，绑定虚拟主机为IP（即通过IP访问），HTTP协议（80端口）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 以下全部内容是一个整体，是一个命令，修改后全部复制粘贴到SSH软件中并一起执行！</span><br><span class="line">echo &quot;:80 &#123;</span><br><span class="line"> root /usr/local/caddy/www/file</span><br><span class="line"> timeouts none</span><br><span class="line"> gzip</span><br><span class="line"> filemanager / /usr/local/caddy/www/file &#123;</span><br><span class="line">  database /usr/local/caddy/filemanager.db</span><br><span class="line"> &#125;</span><br><span class="line">&#125;&quot; &gt; /usr/local/caddy/Caddyfile</span><br></pre></td></tr></table></figure><h5 id="域名-HTTP"><a href="#域名-HTTP" class="headerlink" title="域名 HTTP"></a>域名 HTTP</h5><p>本示例是，绑定虚拟主机为域名（即通过域名访问），HTTP协议（80端口）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 以下全部内容是一个整体，是一个命令，修改后全部复制粘贴到SSH软件中并一起执行（注意替换示例域名）！</span><br><span class="line">echo &quot;http://example.com &#123;</span><br><span class="line"> root /usr/local/caddy/www/file</span><br><span class="line"> timeouts none</span><br><span class="line"> gzip</span><br><span class="line"> filemanager / /usr/local/caddy/www/file &#123;</span><br><span class="line">  database /usr/local/caddy/filemanager.db</span><br><span class="line"> &#125;</span><br><span class="line">&#125;&quot; &gt; /usr/local/caddy/Caddyfile</span><br></pre></td></tr></table></figure><h5 id="域名-HTTPS"><a href="#域名-HTTPS" class="headerlink" title="域名 HTTPS"></a>域名 HTTPS</h5><p>本示例是，绑定虚拟主机为域名（即通过域名访问），HTTPS协议（443端口）。</p><p>如果你有 SSL证书和密匙的话，把 SSL证书(xxx.crt)和密匙(xxx.key)文件放到<code>/root</code>文件夹下（也可以是其他文件夹，自己改下面代码），然后这样做：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 以下全部内容是一个整体，是一个命令，修改后全部复制粘贴到SSH软件中并一起执行（注意替换示例域名）！</span><br><span class="line">echo &quot;example.com &#123;</span><br><span class="line"> root /usr/local/caddy/www/file</span><br><span class="line"> timeouts none</span><br><span class="line"> tls /root/xxx.crt /root/xxx.key</span><br><span class="line"> gzip</span><br><span class="line"> filemanager / /usr/local/caddy/www/file &#123;</span><br><span class="line">  database /usr/local/caddy/filemanager.db</span><br><span class="line"> &#125;</span><br><span class="line">&#125;&quot; &gt; /usr/local/caddy/Caddyfile</span><br></pre></td></tr></table></figure><p>如果你没有 SSL证书和密匙，那么你可以这样做：</p><p>下面的<code>xxxx@xxx.xx</code>改成你的邮箱，同时需要注意的是，申请 SSL证书前，<strong>请务必提前解析好域名记录(解析后最好等一会，以全球生效)，否则 Caddy会申请并配置失败！</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 以下全部内容是一个整体，是一个命令，修改后全部复制粘贴到SSH软件中并一起执行（注意替换示例域名）！</span><br><span class="line">echo &quot;example.com &#123;</span><br><span class="line"> root /usr/local/caddy/www/file</span><br><span class="line"> timeouts none</span><br><span class="line"> tls xxxx@xxx.xx</span><br><span class="line"> gzip</span><br><span class="line"> filemanager / /usr/local/caddy/www/file &#123;</span><br><span class="line">  database /usr/local/caddy/filemanager.db</span><br><span class="line"> &#125;</span><br><span class="line">&#125;&quot; &gt; /usr/local/caddy/Caddyfile</span><br></pre></td></tr></table></figure><h5 id="域名-HTTP重定向-HTTPS-仅手动指定SSL证书和密匙"><a href="#域名-HTTP重定向-HTTPS-仅手动指定SSL证书和密匙" class="headerlink" title="域名 HTTP重定向 HTTPS(仅手动指定SSL证书和密匙)"></a>域名 HTTP重定向 HTTPS(仅手动指定SSL证书和密匙)</h5><p>本示例是，域名HTTP重定向为HTTPS。</p><p>当你是手动指定 SSL证书和密匙 来配置的话，Caddy只会监听 443端口(https)，并不会自动设置 80端口(http)的重定向，如果要做重定向的话，可以这样做：</p><p>下面的示例代码中，是把 <a href="http://example.com" target="_blank" rel="noopener">http://example.com</a> 重定向到了 <a href="https://example.com" target="_blank" rel="noopener">https://example.com</a> 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 以下全部内容是一个整体，是一个命令，修改后全部复制粘贴到SSH软件中并一起执行（注意替换示例域名）！</span><br><span class="line">echo &quot;http://toyoo.pw &#123;</span><br><span class="line"> timeouts none</span><br><span class="line"> redir https://toyoo.pw&#123;url&#125;</span><br><span class="line">&#125;</span><br><span class="line">toyoo.pw &#123;</span><br><span class="line"> root /usr/local/caddy/www/file</span><br><span class="line"> timeouts none</span><br><span class="line"> tls /root/xxx.crt /root/xxx.key</span><br><span class="line"> gzip</span><br><span class="line"> filemanager / /usr/local/caddy/www/file &#123;</span><br><span class="line">  database /usr/local/caddy/filemanager.db</span><br><span class="line"> &#125;</span><br><span class="line">&#125;&quot; &gt; /usr/local/caddy/Caddyfile</span><br></pre></td></tr></table></figure><p>当你已经配置完上面步骤后，那就需要启动Caddy了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/caddy start</span><br><span class="line"># 如果启动失败可以看Caddy日志： tail -f /tmp/caddy.log</span><br></pre></td></tr></table></figure><h3 id="FileBrowser-使用说明"><a href="#FileBrowser-使用说明" class="headerlink" title="FileBrowser 使用说明"></a>FileBrowser 使用说明</h3><p>配置并打开网站后，默认账号和密码都是 <strong>admin</strong>，可以登陆后修改。<strong>[Settings]</strong></p><h4 id="切换中文"><a href="#切换中文" class="headerlink" title="切换中文"></a>切换中文</h4><p>进入后可以点击左边侧栏 <strong>[Settings]</strong> 进入设置页面，然后选择 <strong>[language - Chinese (Simplified)]</strong> ，并点击右下角第一个 <strong>[Update]</strong> 按钮更新。</p><h4 id="使用技巧"><a href="#使用技巧" class="headerlink" title="使用技巧"></a>使用技巧</h4><p>一些按键有对应的作用：</p><ol><li><strong>F1</strong> - 查看帮助</li><li><strong>F2</strong> - 重命名 文件/文件夹</li><li><strong>DEL</strong> - 删除所选 文件/文件夹</li><li><strong>ESC</strong> - 清除当前选择 或 关闭提示</li><li><strong>CTRL + S</strong> - 保存下载 文件/文件夹（zip压缩）</li><li><strong>CTRL + 鼠标左键 单击</strong> - 选择多个文件/文件夹</li><li><strong>鼠标左键 双击</strong> - 打开文件/文件夹</li><li><strong>鼠标左键 单击</strong> - 选择文件/文件夹</li></ol><h3 id="Caddy-使用说明"><a href="#Caddy-使用说明" class="headerlink" title="Caddy 使用说明"></a>Caddy 使用说明</h3><p><strong>启动：</strong><code>/etc/init.d/caddy start</code></p><p><strong>停止：</strong><code>/etc/init.d/caddy stop</code></p><p><strong>重启：</strong><code>/etc/init.d/caddy restart</code></p><p><strong>查看状态：</strong><code>/etc/init.d/caddy status</code></p><p><strong>查看Caddy启动日志：</strong> <code>tail -f /tmp/caddy.log</code></p><p><strong>Caddy配置文件位置：</strong><code>/usr/local/caddy/Caddyfile</code></p><p><strong>FileBrowser数据库位置：</strong><code>/usr/local/caddy/filemanager.db</code></p><p><strong>Caddy自动申请SSL证书位置：</strong><code>/.caddy/acme/acme-v02.api.letsencrypt.org/sites/xxx.xxx(域名)/</code></p><h4 id="升级FileBrowser"><a href="#升级FileBrowser" class="headerlink" title="升级FileBrowser"></a>升级FileBrowser</h4><p>因为FileBrowser是Caddy的扩展，是融合成一个文件的，升级FileBrowser=升级Caddy（加扩展），所以只需要重新执行下面的命令覆盖安装Caddy即可<strong>（只会覆盖 Caddy自身，不影响配置文件）</strong>，覆盖安装后启动Caddy即可（ <code>/etc/init.d/caddy start</code> ）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/lixint/blogfile/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh install http.filemanager</span><br></pre></td></tr></table></figure><h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h3><p>只需要把安装命令 <strong>install</strong> 改成 <strong>uninstall</strong> 就是卸载了，因为扩展是集成于Caddy中的，所以无法单独卸载某个扩展。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/lixint/blogfile/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh uninstall</span><br></pre></td></tr></table></figure><h3 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h3><h4 id="启动显示成功，但是实际未运行"><a href="#启动显示成功，但是实际未运行" class="headerlink" title="启动显示成功，但是实际未运行"></a>启动显示成功，但是实际未运行</h4><p>因为 服务脚本判断的问题，只判断了nohub是否运行 Caddy成功，但没有判断 Caddy 是否保持正常运行。</p><p>你可以理解为，nohub成功启动了 Caddy，但是 Caddy因为配置文件错误等原因，启动后又退出了。</p><p>所以这种情况下，你应该去查看启动日志：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -f /tmp/caddy.log</span><br></pre></td></tr></table></figure><h4 id="单网站-多网站"><a href="#单网站-多网站" class="headerlink" title="单网站/多网站"></a>单网站/多网站</h4><p>当然，上面的几个示例，实际上都算是单网站。</p><p>最后一句代码都是 <code>}&quot; &gt; /usr/local/caddy/Caddyfile</code> ，也就是清空了 Caddy配置文件，然后再写入了配置信息。</p><p>如果你要设置多个网站，那么把最后一句代码改成 <code>}&quot; &gt;&gt; /usr/local/caddy/Caddyfile</code> 即可，注意是把 <code>&gt; 改成 &gt;&gt;</code>，这样就不会清空原来的配置信息了，而是会把要添加的配置信息加到配置文件最后！</p><h4 id="Caddy下载文件频繁中断"><a href="#Caddy下载文件频繁中断" class="headerlink" title="Caddy下载文件频繁中断"></a>Caddy下载文件频繁中断</h4><p>可能是因为 Caddy的超时时间机制导致的，可以在配置文件中加入这句代 码<code>timeouts none</code> ，例如这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://example.com ( timeouts none root /home/www ...(省略号代表 这下面的内容是重复的，请不要直接写省略号到配置文件中))</span><br></pre></td></tr></table></figure><h4 id="Caddy启动失败，打开-http-ip-显示的是-It-works"><a href="#Caddy启动失败，打开-http-ip-显示的是-It-works" class="headerlink" title="Caddy启动失败，打开 http://ip 显示的是 It works !"></a>Caddy启动失败，打开 <a href="http://ip" target="_blank" rel="noopener">http://ip</a> 显示的是 It works !</h4><p>一些系统会自带 apache2 ，而 apache2 会占用80端口，导致Caddy无法绑定端口，所以只要关掉就好了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -lntp# 我们可以通过这个命令查看是不是被其他软件占用了 80 端口。</span><br></pre></td></tr></table></figure><p>不过 apache2 会默认开机自启动，如果不需要可以关闭自启动或者卸载 apache2 。</p><p><strong>停止 Apache2</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/apache2 stop# 尝试使用上面这个关闭，如果没效果或者提示什么错误无法关闭，那就用下面这个强行关闭进程。kill -9 $(ps -ef|grep &quot;apache2&quot;|grep -v &quot;grep&quot;|awk &apos;&#123;print $2&#125;&apos;)</span><br></pre></td></tr></table></figure><p><strong>取消开机自启动</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 以下代码仅限 Debian/Ubuntu 系统 #update-rc.d -f apache2 remove</span><br></pre></td></tr></table></figure><p><strong>卸载 Apache2</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 以下代码仅限 Debian/Ubuntu 系统 #apt-get remove --purge apache2</span><br></pre></td></tr></table></figure><p>关闭 Apache2后，就可以尝试启动 Caddy ，并试试能不能打开网页。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/caddy start</span><br></pre></td></tr></table></figure><h4 id="启动-Caddy后，无法访问"><a href="#启动-Caddy后，无法访问" class="headerlink" title="启动 Caddy后，无法访问"></a>启动 Caddy后，无法访问</h4><p>这个可能是防火墙的问题，开放防火墙端口即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -m state --state NEW -m tcp -p tcp --dport 端口 -j ACCEPTiptables -I INPUT -m state --state NEW -m udp -p udp --dport 端口 -j ACCEPT # 删除防火墙规则，内容一样把 -I 换成 -D 就行了：iptables -D INPUT -m state --state NEW -m tcp -p tcp --dport 端口 -j ACCEPTiptables -D INPUT -m state --state NEW -m udp -p udp --dport 端口 -j ACCEPT</span><br></pre></td></tr></table></figure><h4 id="FileBrowser账号密码忘了或想要重置账号信息"><a href="#FileBrowser账号密码忘了或想要重置账号信息" class="headerlink" title="FileBrowser账号密码忘了或想要重置账号信息"></a>FileBrowser账号密码忘了或想要重置账号信息</h4><p>FileBrowser没有找回密码功能，所以一旦你忘记了密码，那么GG，不过没事 有办法重置。</p><p>当然我们可以重置FileBrowser的数据库文件来清除所有账号信息，这样我们就变成初始账号和密码了(admin/admin)。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：删除数据库文件只会影响数据库内储存的各账号信息，并不会影响服务器本地的文件夹/文件。</span><br></pre></td></tr></table></figure><p>很简单，关闭Caddy，然后删除FileBrowser数据库文件，启动Caddy，使用初始账号密码登陆。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/caddy stoprm -rf /usr/local/caddy/filemanager.db/etc/init.d/caddy start</span><br></pre></td></tr></table></figure><blockquote><p>本文转载自<a href="https://doub.io" rel="noopener" title="愿Toyo平安吧" target="_blank">逗比根据地</a>，转载请注明来源。</p></blockquote>]]></content>
    
    <summary type="html">
    
      FileBrowser 是基于Caddy 的扩展。它提供文件管理界面，可用于 上传/下载/删除/预览和重命名 等该目录中的文件。
    
    </summary>
    
      <category term="VPS" scheme="https://lixint.github.io/categories/VPS/"/>
    
    
      <category term="私人网盘" scheme="https://lixint.github.io/tags/%E7%A7%81%E4%BA%BA%E7%BD%91%E7%9B%98/"/>
    
  </entry>
  
  <entry>
    <title>使用pyenv与virtualenv进行Python多版本与多环境管理</title>
    <link href="https://lixint.github.io/pyenv.html"/>
    <id>https://lixint.github.io/pyenv.html</id>
    <published>2018-12-26T02:04:55.000Z</published>
    <updated>2018-12-26T09:08:54.609Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2018年12月26日17:08</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><p>最近在捣鼓Linux上的Python安装，因为Linux上默认带着的是Python2，要想安装Python3，需要一阵折腾。结果安装完发现没法用SSL，导致部分网络相关的库有时候没法用。偶然发现了一个Python版本管理工具，装了一下感觉非常好，在这记录一下安装过程。</p><p>pyenv 用于管理Python版本，virtualenv管理不同的工作环境。</p><p>环境：Centos 7 64位</p><h3 id="使用pyenv管理不同的Python版本"><a href="#使用pyenv管理不同的Python版本" class="headerlink" title="使用pyenv管理不同的Python版本"></a>使用pyenv管理不同的Python版本</h3><p>我们直接从github上clone项目到本地，然后，分别执行以下命令进行安装即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/yyuu/pyenv.git ~/.pyenv</span><br></pre></td></tr></table></figure><p>配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ echo &apos;export PYENV_ROOT=&quot;$HOME/.pyenv&quot;&apos; &gt;&gt; ~/.bash_profile</span><br><span class="line">$ echo &apos;export PATH=&quot;$PYENV_ROOT/bin:$PATH&quot;&apos; &gt;&gt; ~/.bash_profile</span><br><span class="line">$ echo &apos;eval &quot;$(pyenv init -)&quot;&apos; &gt;&gt; ~/.bash_profile</span><br></pre></td></tr></table></figure><p>安装完成以后，执行以下命令，以使~/.bash_profile中的配置生效。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure><p>至此，pyenv就安装完成了，我们可以通过下面的命令验证pyenv是否正确安装以及获取pyenv的帮助信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ pyenv --<span class="built_in">help</span></span><br><span class="line">Usage: pyenv &lt;<span class="built_in">command</span>&gt; [&lt;args&gt;]</span><br><span class="line"></span><br><span class="line">Some useful pyenv commands are:</span><br><span class="line">   commands    List all available pyenv commands</span><br><span class="line">   <span class="built_in">local</span>       Set or show the <span class="built_in">local</span> application-specific Python version</span><br><span class="line">   global      Set or show the global Python version</span><br><span class="line">   shell       Set or show the shell-specific Python version</span><br><span class="line">   install     Install a Python version using python-build</span><br><span class="line">   uninstall   Uninstall a specific Python version</span><br><span class="line">   <span class="built_in">rehash</span>      Rehash pyenv shims (run this after installing executables)</span><br><span class="line">   version     Show the current Python version and its origin</span><br><span class="line">   versions    List all Python versions available to pyenv</span><br><span class="line">   <span class="built_in">which</span>       Display the full path to an executable</span><br><span class="line">   <span class="built_in">whence</span>      List all Python versions that contain the given executable</span><br><span class="line"></span><br><span class="line">See `pyenv <span class="built_in">help</span> &lt;<span class="built_in">command</span>&gt;<span class="string">' for information on a specific command.</span></span><br><span class="line"><span class="string">For full documentation, see: https://github.com/yyuu/pyenv#readme</span></span><br></pre></td></tr></table></figure><p><strong>使用pyenv</strong></p><p>我们通过pyenv的install命令，可以查看pyenv当前支持哪些Python版本，如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pyenv  install --list</span><br><span class="line">Available versions:</span><br><span class="line">  3.6.0</span><br><span class="line">  3.6-dev</span><br><span class="line">  3.7-dev</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p>使用pyenv安装不同的Python版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pyenv install -v 3.6.0</span><br><span class="line">pyenv install -v 2.7.13</span><br></pre></td></tr></table></figure><p>安装Python之前先安装一下相关依赖，避免安装时报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#更新源</span><br><span class="line">yum update</span><br><span class="line">yum install gcc gcc-c++ autoconf automake</span><br><span class="line">yum install -y zlib-devel bzip2-devel xz-libs wget openssl-devel</span><br><span class="line">yum install readline readline-devel readline-static -y</span><br><span class="line">yum install openssl openssl-devel openssl-static -y</span><br><span class="line">yum install sqlite-devel -y</span><br><span class="line">yum install bzip2-devel bzip2-libs -y</span><br></pre></td></tr></table></figure><p>查看当前系统中包含的Python版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ pyenv versions</span><br><span class="line">* system (<span class="built_in">set</span> by /home/lmx/.pyenv/version)</span><br><span class="line">  2.7.13</span><br><span class="line">  3.6.0</span><br></pre></td></tr></table></figure><p>由于我们安装了2个Python版本，加上我们系统自身的Python，当前系统中存在3个不同的Python版本。其中，输出结果前面的”*”表示当前正在使用的版本。我们也可以通过pyenv global选择不同的Python版本，如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ pyenv global 3.6.0</span><br><span class="line">$ pyenv versions</span><br><span class="line">  system</span><br><span class="line">  2.7.13</span><br><span class="line">* 3.6.0 (<span class="built_in">set</span> by /home/lmx/.pyenv/version)</span><br><span class="line"></span><br><span class="line">$ python</span><br><span class="line">Python 3.6.0 (default, Feb  8 2017, 15:53:33)</span><br><span class="line">[GCC 4.7.2] on linux</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">exit</span>()</span><br><span class="line">$ pyenv global 2.7.13</span><br><span class="line">$ python</span><br><span class="line">Python 2.7.13 (default, Feb  8 2017, 16:03:42)</span><br><span class="line">[GCC 4.7.2] on linux2</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br></pre></td></tr></table></figure><p>使用pyenv以后，可以快速地切换Python的版本。切换Python版本以后，与版本相关的依赖也会一起切换。因此，我们不用担心不同的版本在系统中是否会相互干扰。例如，切换Python版本以后，相应的pip也会跟着切换，所以不用担心自己用pip版本和Python版本不匹配的问题，如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ pyenv global 3.6.0</span><br><span class="line">$ pip --version</span><br><span class="line">pip 9.0.1 from /home/lmx/.pyenv/versions/3.6.0/lib/python3.6/site-packages (python 3.6)</span><br><span class="line">$ pyenv global 2.7.13</span><br><span class="line">$ pip --version</span><br><span class="line">pip 9.0.1 from /home/lmx/.pyenv/versions/2.7.13/lib/python2.7/site-packages (python 2.7)</span><br></pre></td></tr></table></figure><p>如果想要删除Python版本，则使用uninstall命令。如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv uninstall 2.7.10</span><br></pre></td></tr></table></figure><h3 id="使用virtualenv管理不同的项目"><a href="#使用virtualenv管理不同的项目" class="headerlink" title="使用virtualenv管理不同的项目"></a>使用virtualenv管理不同的项目</h3><p>virtualenv本身是一个独立的项目，用以隔离不同项目的工作环境。例如，用户lmx希望在项目A中使用Flask 0.8这个版本，与此同时，又想在项目B中使用Flask 0.9这个版本。如果我们全局安装Flask，必然无法满足用户的需求。这个时候，我们就可以使用virtualenv。</p><p>读者需要注意pyenv和virtualenv的区别。pyenv用以管理不同的Python版本，例如，你的系统工作时使用Python 2.7.13，学习时使用Python 3.6.0。virtualenv用以隔离项目的工作环境，例如，项目A和项目B都是使用Python 2.7.13，但是，项目A需要使用Flask 0.8版本，项目B需要使用Flask 0.9版本。我们只要组合pyenv和virtualenv这两个工具，就能够构造Python和第三方库的任意版本组合，拥有了很好的灵活性，也避免了项目之间的相互干扰。</p><p>virtualenv本身是一个独立的工具，用户可以不使用pyenv单独使用virtualenv。但是，如果你使用了pyenv，就需要安装pyenv-virtualenv插件而不是virtualenv软件来使用virtualenv的功能。</p><p>pyenv/pyenv-virtualenv</p><p>安装和使用pyenv-virtualenv插件如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/yyuu/pyenv-virtualenv.git $(pyenv root)/plugins/pyenv-virtualenv</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">'eval "$(pyenv virtualenv-init -)"'</span> &gt;&gt; ~/.bash_profile</span><br></pre></td></tr></table></figure><p>与安装pyenv类似，安装完成以后需要重新载入配置文件，或者退出用户再登录，以使得配置文件生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span>  ~/.bash_profile</span><br><span class="line">$ pyenv <span class="built_in">help</span> virtualenv</span><br><span class="line">Usage: pyenv virtualenv [-f|--force] [VIRTUALENV_OPTIONS] [version] &lt;virtualenv-name&gt;</span><br><span class="line">       pyenv virtualenv --version</span><br><span class="line">       pyenv virtualenv --<span class="built_in">help</span></span><br><span class="line"></span><br><span class="line">  -f/--force       Install even <span class="keyword">if</span> the version appears to be installed already</span><br></pre></td></tr></table></figure><p><strong>pyenv-virtualenv使用</strong></p><p>有了pyenv-virtualenv以后，我们可以为同一个Python解释器，创建多个不同的”工作环境”。例如，我们新建两个工作环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ pyenv virtualenv 2.7.13 first_project</span><br><span class="line">$ pyenv virtualenv 2.7.13 second_project</span><br></pre></td></tr></table></figure><p>可以使用virtualenvs子命令查看工作环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ pyenv virtualenvs</span><br><span class="line">  2.7.13/envs/first_project (created from /home/lmx/.pyenv/versions/2.7.13)</span><br><span class="line">  2.7.13/envs/second_project (created from /home/lmx/.pyenv/versions/2.7.13)</span><br><span class="line">  first_project (created from /home/lmx/.pyenv/versions/2.7.13)</span><br><span class="line">  second_project (created from /home/lmx/.pyenv/versions/2.7.13)</span><br></pre></td></tr></table></figure><p>创建完工作环境以后，可以通过activate和deactivate子命令进入或退出一个工作环境。进入工作环境以后，左边的提示符会显示你当前所在的工作环境，以免因为环境太多导致误操作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ pyenv activate first_project</span><br><span class="line">(first_project) $ pip install flask==0.8</span><br><span class="line">(first_project) $ pyenv deactivate</span><br></pre></td></tr></table></figure><p>接下来，我们看一下在不同的工作环境安装不同的Flask版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ pyenv activate first_project</span><br><span class="line">(first_project) $ pip install flask==0.8</span><br><span class="line">(first_project) $ pyenv deactivate</span><br><span class="line">$ pyenv activate second_project</span><br><span class="line">(second_project) $ pip install flask==0.9</span><br></pre></td></tr></table></figure><p>如果想要删除虚拟环境，则使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv virtualenv-delete first_project</span><br></pre></td></tr></table></figure><p>使用pyenv和python-virtualenv插件，我们就能够自由地在不同的版本之间进行切换，相比管理Python版本，不但节省了时间，也避免了工作过程中的相互干扰。</p><p><strong>参考：</strong></p><blockquote><p><a href="https://zhuanlan.zhihu.com/p/27294128" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/27294128</a></p><p><a href="https://blog.csdn.net/GX_1_11_real/article/details/80237064" target="_blank" rel="noopener">https://blog.csdn.net/GX_1_11_real/article/details/80237064</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      好用的Python版本与环境管理工具，珍爱生命，减少折腾。
    
    </summary>
    
      <category term="Python学习" scheme="https://lixint.github.io/categories/Python%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Python" scheme="https://lixint.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Markdown入门教程</title>
    <link href="https://lixint.github.io/markdown.html"/>
    <id>https://lixint.github.io/markdown.html</id>
    <published>2018-12-22T09:03:57.000Z</published>
    <updated>2020-03-11T13:31:19.542Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2020年03月11日21:31</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><blockquote class="blockquote-center"><p>欢迎加入博客搭建交流群（QQ群号60429576）==&gt;<a style="color:#ff0033" href="http://qq.cn.hn/g6Y" title="QQ群号60429576" rel="noopener" target="_blank"><strong>点击加入</strong></a>&lt;==</p></blockquote><p>个人推荐使用Typora编辑器。当然有一些在线Markdown编辑器也很好用，大家可以按需自己网上搜索使用。</p><h3 id="斜体和粗体"><a href="#斜体和粗体" class="headerlink" title="斜体和粗体"></a>斜体和粗体</h3><p>  代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*斜体*或_斜体_</span><br><span class="line">**粗体**</span><br><span class="line">***加粗斜体***</span><br><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><p><em>这是一段斜体</em><br><strong>这是一段粗体</strong><br><strong><em>这是一段加粗斜体</em></strong><br><del>这是一段删除线</del></p><h3 id="分级标题"><a href="#分级标题" class="headerlink" title="分级标题"></a>分级标题</h3><p>第一种写法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">这是一个一级标题</span><br><span class="line">============================</span><br><span class="line"></span><br><span class="line">这是一个二级标题</span><br><span class="line">--------------------------------------------------</span><br></pre></td></tr></table></figure></p><p>就是在文字的下一行增加不同的横线，不建议使用。</p><p>第二种写法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure></p><p>推荐使用这种方式，简单易记，不同级别的标题后面的<code>#</code>不一样多，在<code>#</code>后需要空一格。</p><p>同学们自己在编辑器中观察，很简单，一级标题字号最大，依级递减。</p><h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><p>Markdown 支持两种形式的链接语法： 行内式和参考式两种形式，行内式一般使用较多。</p><h4 id="行内式"><a href="#行内式" class="headerlink" title="行内式"></a>行内式</h4><p><strong>语法说明：</strong><br>[]里写链接文字，()里写链接地址, ()中的”“中可以为链接指定title属性，title属性可加可不加。title属性的效果是鼠标悬停在链接上会出现指定的 title文字。<code>[链接文字](链接地址 &quot;链接标题&quot;)</code>这样的形式。链接地址与链接标题前有一个空格。<br>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">欢迎来到[我的博客](https://lixint.github.io)</span><br><span class="line">欢迎来到[我的博客](https://lixint.github.io &quot;LixT&apos;s Blog&quot;)</span><br></pre></td></tr></table></figure><p>显示效果：<br>欢迎来到<a href="https://lixint.github.io">我的博客</a><br>欢迎来到<a href="https://lixint.github.io" title="LixT&#39;s Blog">我的博客</a>   这一个设置了标题，在鼠标指针指在超链接上的时候会显示标题。</p><h4 id="参考式"><a href="#参考式" class="headerlink" title="参考式"></a>参考式</h4><p>参考式超链接一般用在学术论文上面，或者另一种情况，如果某一个链接在文章中多处使用，那么使用引用 的方式创建链接将非常好，它可以让你对链接进行统一的管理。<br>语法说明：<br>参考式链接分为两部分，文中的写法<code>[链接文字][链接标记]</code>，在文本的任意位置添加[链接标记]:链接地址 “链接标题”，链接地址与链接标题前有一个空格。</p><p>如果链接文字本身可以做为链接标记，你也可以写成[链接文字][]<br>[链接文字]：链接地址的形式，见代码的最后一行。</p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">我经常去的几个网站[Google][1]、[Leanote][2]以及[自己的博客][3]</span><br><span class="line">[Leanote 笔记][2]是一个不错的[网站][]。</span><br><span class="line">[1]:http://www.google.com &quot;Google&quot;</span><br><span class="line">[2]:http://www.leanote.com &quot;Leanote&quot;</span><br><span class="line">[3]:https://lixint.github.io &quot;LixT&apos;s Blog&quot;</span><br><span class="line">[网站]:http://http://blog.leanote.com/freewalk</span><br></pre></td></tr></table></figure></p><p>显示效果：<br>我经常去的几个网站<a href="http://www.google.com" title="Google" target="_blank" rel="noopener">Google</a>、<a href="http://www.leanote.com" title="Leanote" target="_blank" rel="noopener">Leanote</a>以及<a href="https://lixint.github.io" title="LixT&#39;s Blog">自己的博客</a><br><a href="http://www.leanote.com" title="Leanote" target="_blank" rel="noopener">Leanote 笔记</a>是一个不错的<a href="http://http://blog.leanote.com/freewalk" target="_blank" rel="noopener">网站</a>。</p><h4 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h4><p>语法说明：<br>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用&lt;&gt;包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：</p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;https://lixint.github.io/&gt;</span><br><span class="line">&lt;address@example.com&gt;</span><br></pre></td></tr></table></figure></p><p>显示效果：<br><a href="https://lixint.github.io/">https://lixint.github.io/</a><br><a href="mailto:address@example.com" target="_blank" rel="noopener">address@example.com</a></p><h4 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h4><p>网页中，锚点其实就是页内超链接，也就是链接本文档内部的某些元素，实现当前页面中的跳转。比如我这里写下一个锚点，点击回到目录，就能跳转到目录。 在目录中点击这一节，就能跳过来。还有下一节的注脚。这些根本上都是用锚点来实现的。</p><p>注意： </p><ol><li>Markdown Extra 只支持在标题后插入锚点，其它地方无效。 </li><li>Leanote 编辑器右侧显示效果区域暂时不支持锚点跳转，所以点来点去发现没有跳转不必惊慌，但是你发布成笔记或博文后是支持跳转的。</li></ol><p>语法描述：<br>在你准备跳转到的指定标题后插入锚点{#标记}，然后在文档的其它地方写上连接到锚点的链接。</p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">### 目录&#123;#index&#125;</span><br><span class="line">跳转到[目录](#index)</span><br></pre></td></tr></table></figure></p><p>显示效果：<br>跳转到<a href="#index">目录</a><br>注意此项不能在Hexo博客中使用，Hexo博客会将{}中的内容进行渲染，从而引起未知错误</p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><p>使用 <code>*，+，-</code>表示无序列表。<br>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 无序列表项 一</span><br><span class="line">- 无序列表项 二</span><br><span class="line">- 无序列表项 三</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><ul><li>无序列表项 一</li><li>无序列表项 二</li><li>无序列表项 三</li></ul><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><p>  有序列表则使用数字接着一个英文句点。<br>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 有序列表项 一</span><br><span class="line">2. 有序列表项 二</span><br><span class="line">3. 有序列表项 三</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><ol><li>有序列表项 一</li><li>有序列表项 二</li><li>有序列表项 三</li></ol><h4 id="定义型列表"><a href="#定义型列表" class="headerlink" title="定义型列表"></a>定义型列表</h4><p>语法说明：</p><p>定义型列表由名词和解释组成。一行写上定义，紧跟一行写上解释。解释的写法<code>:</code>紧跟一个缩进(Tab)<br>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Markdown</span><br><span class="line">:    轻量级文本标记语言，可以转换成html，pdf等格式（左侧有一个可见的冒号和四个不可见的空格）</span><br><span class="line">代码块 2</span><br><span class="line">:    这是代码块的定义（左侧有一个可见的冒号和四个不可见的空格）</span><br><span class="line">        代码块（左侧有八个不可见的空格）</span><br></pre></td></tr></table></figure><p>显示效果：<br>Markdown<br>:    轻量级文本标记语言，可以转换成html，pdf等格式（左侧有一个可见的冒号和四个不可见的空格）<br>代码块 2<br>:    这是代码块的定义（左侧有一个可见的冒号和四个不可见的空格）<br>​        代码块（左侧有八个不可见的空格）</p><h4 id="列表缩进"><a href="#列表缩进" class="headerlink" title="列表缩进"></a>列表缩进</h4><p>语法说明：</p><p>列表项目标记通常是放在最左边，但是其实也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。</p><p>要让列表看起来更漂亮，你可以把内容用固定的缩进整理好（显示效果与代码一致）：</p><p>轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。<br>那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。<br>软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！<br>那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。<br>寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。<br>但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！<br>悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。<br>但是如果你懒，那也行：<br>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*   轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。</span><br><span class="line">    那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。 </span><br><span class="line">    软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！ </span><br><span class="line">*   那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。 </span><br><span class="line">    寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。 </span><br><span class="line">    但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！ </span><br><span class="line">    悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><ul><li>轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。<br>那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。<br>软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！ </li><li>那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。<br>寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。<br>但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！<br>悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。</li></ul><h4 id="包含段落的列表"><a href="#包含段落的列表" class="headerlink" title="包含段落的列表"></a>包含段落的列表</h4><p>语法说明：</p><p>列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符（显示效果与代码一致）：</p><p>轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。<br>那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。<br>软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！</p><p>那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。<br>寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。<br>但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！</p><p>悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。</p><p>如果你每行都有缩进，看起来会看好很多，当然，再次地，如果你很懒惰，Markdown 也允许：</p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*   轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。</span><br><span class="line">    那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。 </span><br><span class="line">    软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！</span><br><span class="line">     那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。 </span><br><span class="line">    寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。 </span><br><span class="line">    但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！ </span><br><span class="line">*   悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><ul><li>轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。<br>那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。<br>软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！<br> 那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。<br>寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。<br>但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！ </li><li>悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。</li></ul><h4 id="5-5-包含引用的列表"><a href="#5-5-包含引用的列表" class="headerlink" title="5.5. 包含引用的列表"></a>5.5. 包含引用的列表</h4><p>语法说明：<br>如果要在列表项目内放进引用，那 &gt; 就需要缩进：</p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* 阅读的方法:</span><br><span class="line">  &gt; 打开书本。</span><br><span class="line">  &gt; 打开电灯。</span><br><span class="line">  &gt; 显示效果：</span><br></pre></td></tr></table></figure></p><ul><li>阅读的方法:<blockquote><p>打开书本。<br>打开电灯。<br>显示效果：</p></blockquote></li></ul><h4 id="包含代码区块的引用"><a href="#包含代码区块的引用" class="headerlink" title="包含代码区块的引用"></a>包含代码区块的引用</h4><p>语法说明：<br>如果要放代码区块的话，该区块就需要缩进两次，也就是 8 个空格或是 2 个制表符：</p><p>一列表项包含一个列表区块：</p><p><code>&lt;代码写在这&gt;</code></p><h4 id="一个特殊情况"><a href="#一个特殊情况" class="headerlink" title="一个特殊情况"></a>一个特殊情况</h4><p>在特殊情况下，项目列表很可能会不小心产生，像是下面这样的写法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1986.What a great season.</span><br></pre></td></tr></table></figure></p><p>会显示成：</p><ol start="1986"><li>What a great season.</li></ol><p>前面的1986成了序号</p><p>换句话说，也就是在行首出现了数字-句点-空白，要避免这样的状况，你可以在句点前面加上反斜杠：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1986\. What a great season.</span><br></pre></td></tr></table></figure></p><p>会显示成：<br>1986. What a great season.</p><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>语法说明：<br>引用需要在被引用的文本前加上&gt;符号。<br>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; 这是一个有两段文字的引用</span><br><span class="line">&gt; 无意义的占行文字1.</span><br><span class="line">&gt; 无意义的占行文字2.</span><br><span class="line">&gt;</span><br><span class="line">&gt; 无意义的占行文字3.</span><br><span class="line">&gt; 无意义的占行文字4.</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><blockquote><p>这是一个有两段文字的引用<br>无意义的占行文字1.<br>无意义的占行文字2.</p><p>无意义的占行文字3.<br>无意义的占行文字4.</p></blockquote><p>Markdown 也允许你偷懒只在整个段落的第一行最前面加上 &gt; ：</p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; 这是一个有两段文字的引用</span><br><span class="line">无意义的占行文字1.</span><br><span class="line">无意义的占行文字2.</span><br><span class="line">无意义的占行文字3.</span><br><span class="line">无意义的占行文字4.</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><blockquote><p>这是一个有两段文字的引用,<br>无意义的占行文字1.<br>无意义的占行文字2.<br>无意义的占行文字3.<br>无意义的占行文字4.</p></blockquote><h4 id="引用的多层嵌套"><a href="#引用的多层嵌套" class="headerlink" title="引用的多层嵌套"></a>引用的多层嵌套</h4><p>区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 &gt; ：</p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 请问 Markdwon 怎么用？ - 小白</span><br><span class="line">&gt;&gt; 自己看教程！ - 愤青</span><br><span class="line">&gt;&gt;&gt; 教程在哪？ - 小白</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><blockquote><p>请问 Markdwon 怎么用？ - 小白</p><blockquote><p>自己看教程！ - 愤青</p><blockquote><p>教程在哪？ - 小白</p></blockquote></blockquote></blockquote><h4 id="引用其它要素"><a href="#引用其它要素" class="headerlink" title="引用其它要素"></a>引用其它要素</h4><p>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：</p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; 1.   这是第一行列表项。</span><br><span class="line">&gt; 2.   这是第二行列表项。</span><br><span class="line">&gt;</span><br><span class="line">&gt; 给出一些例子代码：</span><br><span class="line">&gt;</span><br><span class="line">&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);</span><br><span class="line">&gt;`return shell_exec(&quot;echo $input | $markdown_script&quot;);`</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><blockquote><ol><li>这是第一行列表项。</li><li>这是第二行列表项。</li></ol><p>给出一些例子代码：</p><pre><code>return shell_exec(&quot;echo $input | $markdown_script&quot;);</code></pre><p><code>return shell_exec(&quot;echo $input | $markdown_script&quot;);</code></p></blockquote><h3 id="插入图像"><a href="#插入图像" class="headerlink" title="插入图像"></a>插入图像</h3><p>图片的创建方式与超链接相似，而且和超链接一样也有两种写法，行内式和参考式写法。</p><p>语法中图片Alt的意思是如果图片因为某些原因不能显示，就用定义的图片Alt文字来代替图片。 图片Title则和链接中的Title一样，表示鼠标悬停与图片上时出现的文字。 Alt 和 Title 都不是必须的，可以省略，但建议写上。</p><h4 id="行内式-1"><a href="#行内式-1" class="headerlink" title="行内式"></a>行内式</h4><p>语法说明：<code>![图片Alt](图片地址 &quot;图片Title&quot;)</code></p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">美丽花儿： </span><br><span class="line">![美丽花儿](http://ww2.sinaimg.cn/large/56d258bdjw1eugeubg8ujj21kw16odn6.jpg &quot;美丽花儿&quot;)</span><br></pre></td></tr></table></figure></p><p>显示效果：<br><img src="http://ww2.sinaimg.cn/large/56d258bdjw1eugeubg8ujj21kw16odn6.jpg" alt="美丽花儿" title="美丽花儿"> </p><h4 id="参考式-1"><a href="#参考式-1" class="headerlink" title="参考式"></a>参考式</h4><p>语法说明：</p><p>在文档要插入图片的地方写<code>![图片Alt][标记]</code></p><p>在文档的最后写上<code>[标记]:图片地址 “Title”</code><br>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">美丽花儿：</span><br><span class="line">![美丽花儿][flower]</span><br><span class="line">[flower]:http://ww2.sinaimg.cn/large/56d258bdjw1eugeubg8ujj21kw16odn6.jpg  &quot;美丽花儿&quot;</span><br></pre></td></tr></table></figure></p><p>显示效果：<br>![美丽花儿][flower]<br>[flower]:<a href="http://ww2.sinaimg.cn/large/56d258bdjw1eugeubg8ujj21kw16odn6.jpg" target="_blank" rel="noopener">http://ww2.sinaimg.cn/large/56d258bdjw1eugeubg8ujj21kw16odn6.jpg</a>  “美丽花儿”</p><p>Hexo博客解析不出这个语法，所以在写博客的时候尽量不要用这个格式了。</p><h3 id="内容目录"><a href="#内容目录" class="headerlink" title="内容目录"></a>内容目录</h3><p>在段落中填写 [TOC] 以显示全文内容的目录结构。</p><p>Hexo博客对目录的解析似乎也有限，请在Markdown编辑器中自行尝试。Next主题的话是也可以自动生成目录的，所以不需要额外增加目录。</p><h3 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h3><p>语法说明：<br>在需要添加注脚的文字后加上<code>脚注名字[^注脚名字]</code>,称为加注。 然后在文本的任意位置(一般在最后)添加脚注，脚注前必须有对应的脚注名字。</p><p>注意：经测试注脚与注脚之间必须空一行，不然会失效。成功后会发现，即使你没有把注脚写在文末，经Markdown转换后，也会自动归类到文章的最后。</p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">使用 Markdown[^1]可以效率的书写文档, 直接转换成 HTML[^2], 你可以使用 Leanote[^Le] 编辑器进行书写。</span><br><span class="line">[^1]: Markdown是一种纯文本标记语言</span><br><span class="line">[^2]: HyperText Markup Language 超文本标记语言</span><br><span class="line">[^Le]: 开源笔记平台，支持Markdown和笔记直接发为博文</span><br></pre></td></tr></table></figure></p><p>显示效果：<br>使用 Markdown[^1]可以效率的书写文档, 直接转换成 HTML[^2], 你可以使用 Leanote[^Le] 编辑器进行书写。<br>[^1]: Markdown是一种纯文本标记语言<br>[^2]: HyperText Markup Language 超文本标记语言<br>[^Le]: 开源笔记平台，支持Markdown和笔记直接发为博文</p><p>注：脚注自动被搬运到最后面，请到文章末尾查看，并且脚注后方的链接可以直接跳转回到加注的地方。</p><h3 id="LaTeX-公式"><a href="#LaTeX-公式" class="headerlink" title="LaTeX 公式"></a>LaTeX 公式</h3><h4 id="表示行内公式："><a href="#表示行内公式：" class="headerlink" title="$ 表示行内公式："></a>$ 表示行内公式：</h4><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。</span><br></pre></td></tr></table></figure><p>显示效果：<br>质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。</p><p>注意：我的博客没有开启公式显示，所以可能公式显示不准确，请自己用Markdown编辑器查看效果</p><h4 id="表示整行公式："><a href="#表示整行公式：" class="headerlink" title="$ 表示整行公式："></a>$ 表示整行公式：</h4><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$\sum_&#123;i=1&#125;^n a_i=0$$</span><br><span class="line">$$f(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2 $$</span><br><span class="line">$$\sum^&#123;j-1&#125;_&#123;k=0&#125;&#123;\widehat&#123;\gamma&#125;_&#123;kj&#125; z_k&#125;$$</span><br></pre></td></tr></table></figure></p><p>访问 <a href="https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="noopener">MathJax</a> 参考更多使用方法。</p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>语法说明：</p><p>不管是哪种方式，第一行为表头，第二行分隔表头和主体部分，第三行开始每一行为一个表格行。<br>列于列之间用管道符|隔开。原生方式的表格每一行的两边也要有管道符。<br>第二行还可以为不同的列指定对齐方向。默认为左对齐，在-右边加上:就右对齐。<br>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">简单方式写表格：</span><br><span class="line"></span><br><span class="line">学号|姓名|分数</span><br><span class="line">-|-|-</span><br><span class="line">小明|男|75</span><br><span class="line">小红|女|79</span><br><span class="line">小陆|男|92</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">原生方式写表格：</span><br><span class="line"></span><br><span class="line">| 学号 | 姓名 | 分数 |</span><br><span class="line">| ---- | ---- | ---- |</span><br><span class="line">| 小明 | 男   | 75   |</span><br><span class="line">| 小红 | 女   | 79   |</span><br><span class="line">| 小陆 | 男   | 92   |</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">为表格第二列指定方向：</span><br><span class="line"></span><br><span class="line">| 产品             |     价格 |</span><br><span class="line">| ---------------- | -------: |</span><br><span class="line">| Leanote 高级账号 |  60元/年 |</span><br><span class="line">| Leanote 超级账号 | 120元/年 |</span><br></pre></td></tr></table></figure><p>显示效果：<br>简单方式写表格：</p><table><thead><tr><th>学号</th><th>姓名</th><th>分数</th></tr></thead><tbody><tr><td>小明</td><td>男</td><td>75</td></tr><tr><td>小红</td><td>女</td><td>79</td></tr><tr><td>小陆</td><td>男</td><td>92</td></tr></tbody></table><p>原生方式写表格：</p><table><thead><tr><th>学号</th><th>姓名</th><th>分数</th></tr></thead><tbody><tr><td>小明</td><td>男</td><td>75</td></tr><tr><td>小红</td><td>女</td><td>79</td></tr><tr><td>小陆</td><td>男</td><td>92</td></tr></tbody></table><p>为表格第二列指定方向：</p><table><thead><tr><th>产品</th><th style="text-align:right">价格</th></tr></thead><tbody><tr><td>Leanote 高级账号</td><td style="text-align:right">60元/年</td></tr><tr><td>Leanote 超级账号</td><td style="text-align:right">120元/年</td></tr></tbody></table><h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* * *</span><br><span class="line">***</span><br><span class="line">*****</span><br><span class="line">- - -</span><br><span class="line">---------------------------------------</span><br></pre></td></tr></table></figure></p><p>显示效果都一样：</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>对于程序员来说这个功能是必不可少的，插入程序代码的方式有两种，一种是利用缩进(Tab), 另一种是利用”`”符号（一般在ESC键下方）包裹代码。</p><p>语法说明：</p><p>插入行内代码，即插入一个单词或者一句代码的情况，使用<code>code</code>这样的形式插入。<br>插入多行代码，可以使用缩进或者“<code>code “</code>,具体看示例。<br>注意： 缩进式插入前方必须有空行</p><h4 id="行内式-2"><a href="#行内式-2" class="headerlink" title="行内式"></a>行内式</h4><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C语言里的函数 `scanf()` 怎么使用？</span><br></pre></td></tr></table></figure></p><p>显示效果：<br>C语言里的函数 <code>scanf()</code> 怎么使用？</p><h4 id="缩进式多行代码"><a href="#缩进式多行代码" class="headerlink" title="缩进式多行代码"></a>缩进式多行代码</h4><p>缩进 4 个空格或是 1 个制表符</p><p>一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。</p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    printf(&quot;Hello world\n&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>显示效果：<br>​    #include &lt;stdio.h&gt;<br>​    int main(void)<br>​    {<br>​    printf(“Hello world\n”);<br>​    }</p><h4 id="用三个”-”包裹多行代码"><a href="#用三个”-”包裹多行代码" class="headerlink" title="用三个”`”包裹多行代码"></a>用三个”`”包裹多行代码</h4><p>这个不太好演示，请自行体验，输入三个`后空一行写代码，</p><p>结束后另起一行输入三个`表示代码块结束</p><h3 id="HTML-原始码"><a href="#HTML-原始码" class="headerlink" title="HTML 原始码"></a>HTML 原始码</h3><p>Markdown支持很多HTML代码，具体请自行体验</p>]]></content>
    
    <summary type="html">
    
      汇总了Markdown基本语法，分分钟让你掌握Markdown。
    
    </summary>
    
      <category term="博客搭建" scheme="https://lixint.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Markdown" scheme="https://lixint.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Next主题修改第二弹</title>
    <link href="https://lixint.github.io/next2.html"/>
    <id>https://lixint.github.io/next2.html</id>
    <published>2018-12-21T09:05:54.000Z</published>
    <updated>2018-12-21T09:25:35.480Z</updated>
    
    <content type="html"><![CDATA[<h3 id="修改文章内链接文本样式"><a href="#修改文章内链接文本样式" class="headerlink" title="修改文章内链接文本样式"></a>修改文章内链接文本样式</h3><p>修改文件 <code>themes\next\source\css\_common\components\post\post.styl</code>，在末尾添加如下css样式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 文章内链接文本样式</span><br><span class="line">.post-body p a&#123;</span><br><span class="line">  color: #0593d3;</span><br><span class="line">  border-bottom: none;</span><br><span class="line">  border-bottom: 1px solid #0593d3;</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: #fc6423;</span><br><span class="line">    border-bottom: none;</span><br><span class="line">    border-bottom: 1px solid #fc6423;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中选择<code>.post-body</code> 是为了不影响标题，选择 <code>p</code> 是为了不影响首页“阅读全文”的显示样式,颜色可以自己定义。</p><h3 id="修改文章底部的那个带-号的标签"><a href="#修改文章底部的那个带-号的标签" class="headerlink" title="修改文章底部的那个带#号的标签"></a>修改文章底部的那个带#号的标签</h3><p>效果</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/next2/1545377774429.png" alt="1545377774429"></p><p>修改模板<code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将 # 换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code>，此处的图标用的是Font-Awesome，可以根据需要换成其他的图标。</p><h3 id="在每篇文章末尾统一添加“本文结束”标记"><a href="#在每篇文章末尾统一添加“本文结束”标记" class="headerlink" title="在每篇文章末尾统一添加“本文结束”标记"></a>在每篇文章末尾统一添加“本文结束”标记</h3><p>在路径 <code>\themes\next\layout\_macro</code> 中新建 <code>passage-end-tag.swig</code> 文件,并添加以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>接着打开<code>\themes\next\layout\_macro\post.swig</code>文件，在<code>post-body</code> 之后， <code>post-footer</code> 之前添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &#123;% if not is_index %&#125;</span><br><span class="line">    &#123;% include &apos;passage-end-tag.swig&apos; %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>然后打开<a style="color:#9900ff"><strong>主题配置文件</strong></a>,在末尾添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 文章末尾添加“本文结束”标记</span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br></pre></td></tr></table></figure><h3 id="博文压缩"><a href="#博文压缩" class="headerlink" title="博文压缩"></a>博文压缩</h3><p>安装插件，在站点的根目录下执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp -g</span><br><span class="line">npm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save</span><br></pre></td></tr></table></figure><p>博客根目录新建文件 <code>gulpfile.js</code>，填入软下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`var gulp = require(&apos;gulp&apos;);var minifycss = require(&apos;gulp-minify-css&apos;);var uglify = require(&apos;gulp-uglify&apos;);var htmlmin = require(&apos;gulp-htmlmin&apos;);var htmlclean = require(&apos;gulp-htmlclean&apos;);// 压缩 public 目录 cssgulp.task(&apos;minify-css&apos;, function() &#123;    return gulp.src(&apos;./public/**/*.css&apos;)        .pipe(minifycss())        .pipe(gulp.dest(&apos;./public&apos;));&#125;);// 压缩 public 目录 htmlgulp.task(&apos;minify-html&apos;, function() &#123;  return gulp.src(&apos;./public/**/*.html&apos;)    .pipe(htmlclean())    .pipe(htmlmin(&#123;         removeComments: true,         minifyJS: true,         minifyCSS: true,         minifyURLs: true,    &#125;))    .pipe(gulp.dest(&apos;./public&apos;))&#125;);// 压缩 public/js 目录 jsgulp.task(&apos;minify-js&apos;, function() &#123;    return gulp.src(&apos;./public/**/*.js&apos;)        .pipe(uglify())        .pipe(gulp.dest(&apos;./public&apos;));&#125;);// 执行 gulp 命令时执行的任务gulp.task(&apos;default&apos;, [    &apos;minify-html&apos;,&apos;minify-css&apos;,&apos;minify-js&apos;]);`</span><br></pre></td></tr></table></figure><p>生成博文时执行 <code>hexo g &amp;&amp; gulp</code> 就会根据 <code>gulpfile.js</code> 中的配置，对 public 目录中的静态资源文件进行压缩。</p><h3 id="修改行内代码块代码颜色"><a href="#修改行内代码块代码颜色" class="headerlink" title="修改行内代码块代码颜色"></a>修改行内代码块代码颜色</h3><p>打开<code>\themes\next\source\css\_custom\custom.styl</code>,向里面加入：(颜色可以自己定义)。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// Custom styles.</span><br><span class="line">code &#123;</span><br><span class="line">    color: #ff7600;</span><br><span class="line">    background: #fbf7f8;</span><br><span class="line">    margin: 2px;</span><br><span class="line">&#125;</span><br><span class="line">// 大代码块的自定义样式</span><br><span class="line">.highlight, pre &#123;</span><br><span class="line">    margin: 5px 0;</span><br><span class="line">    padding: 5px;</span><br><span class="line">    border-radius: 3px;</span><br><span class="line">&#125;</span><br><span class="line">.highlight, code, pre &#123;</span><br><span class="line">    border: 1px solid #d6d6d6;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在网站底部加上访问量"><a href="#在网站底部加上访问量" class="headerlink" title="在网站底部加上访问量"></a>在网站底部加上访问量</h3><p>打开<a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索<code>busuanzi_count</code>，对如下项目将<code>false</code>设置为<code>true</code>。其中的<code>icon</code>项目使用的也是Font-Awesome。<code>total</code>项为站点总统计，显示在站点首页底部，分为<code>total_visitors</code>：总访问人数，<code>total_views</code>：总访问量。<code>post_views</code>为文章访问量，显示在文章页面的标题下方。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_visitors:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_visitors_icon:</span> <span class="string">user</span></span><br><span class="line"><span class="attr">  total_views:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_views_icon:</span> <span class="string">eye</span></span><br><span class="line"><span class="attr">  post_views:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  post_views_icon:</span> <span class="string">eye</span></span><br></pre></td></tr></table></figure><p><a style="color: #ff0033">注意：</a>不蒜子之前更新过一次，Next主题如果设置后不生效请检查一下<code>themes\next\layout\_third-party\analyticsbusuanzi-counter.swig</code>文件中的链接是否是<code>https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js</code></p><h3 id="添加-README-md-文件"><a href="#添加-README-md-文件" class="headerlink" title="添加 README.md 文件"></a>添加 README.md 文件</h3><p>每个项目下一般都有一个 <code>README.md</code> 文件，但是使用 hexo 部署到仓库后，项目下是没有 <code>README.md</code> 文件的。</p><p>在 Hexo 目录下的 <code>source</code> 根目录下添加一个 <code>README.md</code> 文件，修改站点配置文件 _<code>config.yml</code>，将 <code>skip_render</code> 参数的值设置为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">skip_render: README.md</span><br></pre></td></tr></table></figure><p>保存退出即可。再次使用 <code>hexo d</code> 命令部署博客的时候就不会在渲染 README.md 这个文件了。</p><h3 id="在文章底部增加版权信息"><a href="#在文章底部增加版权信息" class="headerlink" title="在文章底部增加版权信息"></a>在文章底部增加版权信息</h3><p>最新版本的Next主题是内置了版权信息的，<a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索<code>post_copyright</code>设置为<code>true</code>即可。</p><p>如果没有这个项目，可以按照以下方法添加自定义版权信息：</p><p>在目录 <code>next/layout/_macro/下</code>添加 <code>my-copyright.swig</code>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if page.copyright %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"my_post_copyright"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- JS库 sweetalert 可修改路径 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/2.0.0/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/sweetalert/dist/sweetalert.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>本文标题:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url_for(page.path) &#125;&#125;"</span>&gt;</span>&#123;&#123; page.title &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>文章作者:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span> <span class="attr">title</span>=<span class="string">"访问 &#123;&#123; theme.author &#125;&#125; 的个人博客"</span>&gt;</span>&#123;&#123; theme.author &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>发布时间:<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123; page.date.format("YYYY年MM月DD日 - HH:mm") &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>最后更新:<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123; page.updated.format("YYYY年MM月DD日 - HH:mm") &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>原始链接:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url_for(page.path) &#125;&#125;"</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; page.title &#125;&#125;"</span>&gt;</span>&#123;&#123; page.permalink &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"copy-path"</span>  <span class="attr">title</span>=<span class="string">"点击复制文章链接"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-clipboard"</span> <span class="attr">data-clipboard-text</span>=<span class="string">"&#123;&#123; page.permalink &#125;&#125;"</span>  <span class="attr">aria-label</span>=<span class="string">"复制成功！"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>许可协议:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-creative-commons"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">rel</span>=<span class="string">"license"</span> <span class="attr">href</span>=<span class="string">"https://creativecommons.org/licenses/by-nc-nd/4.0/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">title</span>=<span class="string">"Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)"</span>&gt;</span>署名-非商业性使用-禁止演绎 4.0 国际<span class="tag">&lt;/<span class="name">a</span>&gt;</span> 转载请保留原文链接及作者。<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"> </span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> clipboard = <span class="keyword">new</span> Clipboard(<span class="string">'.fa-clipboard'</span>);</span></span><br><span class="line"><span class="javascript">    $(<span class="string">".fa-clipboard"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      clipboard.on(<span class="string">'success'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="undefined">        swal(&#123;   </span></span><br><span class="line"><span class="javascript">          title: <span class="string">""</span>,   </span></span><br><span class="line"><span class="javascript">          text: <span class="string">'复制成功'</span>,</span></span><br><span class="line"><span class="javascript">          icon: <span class="string">"success"</span>, </span></span><br><span class="line"><span class="javascript">          showConfirmButton: <span class="literal">true</span></span></span><br><span class="line"><span class="undefined">          &#125;);</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined">    &#125;);  </span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>在目录<code>next/source/css/_common/components/post/</code>下添加<code>my-post-copyright.styl</code>：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.my_post_copyright</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">85%</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">45em</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">2.8em</span> auto <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.5em</span> <span class="number">1.0em</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d3d3d3</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.93rem</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.6em</span>;</span><br><span class="line">  <span class="attribute">word-break</span>: break-all;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(255,255,255,0.4);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">p</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>;&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">5.2em</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#b5b5b5</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.raw</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">1em</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">5em</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#808080</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#a3d2a3</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.fa-clipboard</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.post-url</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.copy-path</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">1em</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1em</span>;</span><br><span class="line">  +mobile()&#123;display:none;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.copy-path</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#808080</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改<code>next/layout/_macro/post.swig</code>，在代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">      &#123;% if not is_index %&#125;</span><br><span class="line">        &#123;% include &apos;wechat-subscriber.swig&apos; %&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>之前添加增加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">      &#123;% if not is_index %&#125;</span><br><span class="line">        &#123;% include &apos;my-copyright.swig&apos; %&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>修改<code>next/source/css/_common/components/post/post.styl</code>文件，在最后一行增加代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import &quot;my-post-copyright&quot;</span><br></pre></td></tr></table></figure><p>保存重新生成即可。<br>如果要在该博文下面增加版权信息的显示，需要在 Markdown 中增加<code>copyright: true</code>的设置<code>copyright: true</code>。</p><p><strong>小技巧</strong>：如果你觉得每次都要输入<code>copyright: true</code>很麻烦的话,那么在<code>/scaffolds/post.md</code>文件中添加<code>copyright</code>项目</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/next2/1545381519938.png" alt="1545381519938"></p><p>这样每次<code>hexo new &quot;你的内容&quot;</code>之后，生成的md文件会自动把<code>copyright:</code>加到里面去。</p><h3 id="文章加密访问"><a href="#文章加密访问" class="headerlink" title="文章加密访问"></a>文章加密访问</h3><p>打开<code>themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig</code>文件,在以下位置插入这样一段代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">'&#123;&#123; page.password &#125;&#125;'</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (prompt(<span class="string">'请输入文章密码'</span>) !== <span class="string">'&#123;&#123; page.password &#125;&#125;'</span>) &#123;</span><br><span class="line">                alert(<span class="string">'密码错误！'</span>);</span><br><span class="line">                <span class="keyword">if</span> (history.length === <span class="number">1</span>) &#123;</span><br><span class="line">                    location.replace(<span class="string">"http://xxxxxxx.xxx"</span>); <span class="comment">// 这里替换成你的首页</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    history.back();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>然后在文章上写成类似这样：</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/next2/1545381898442.png" alt="1545381898442"></p><p>### </p>]]></content>
    
    <summary type="html">
    
      新增了部分修改项目
    
    </summary>
    
      <category term="博客搭建" scheme="https://lixint.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="https://lixint.github.io/tags/Hexo/"/>
    
      <category term="Next主题" scheme="https://lixint.github.io/tags/Next%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>常用小工具汇总</title>
    <link href="https://lixint.github.io/tools.html"/>
    <id>https://lixint.github.io/tools.html</id>
    <published>2018-12-18T09:30:30.000Z</published>
    <updated>2019-01-02T09:21:18.267Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2019年01月02日17:21</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><h3 id="实用网站"><a href="#实用网站" class="headerlink" title="实用网站"></a>实用网站</h3><span class="exturl" data-url="aHR0cHM6Ly93d3cuaXBsb2NhdGlvbi5uZXQv" title="查询ip地址位置与运营商"><a style="color:#ff0033">查询ip地址位置与运营商</a><i class="fa fa-external-link"></i></span><span class="exturl" data-url="aHR0cHM6Ly93d3cubWVkaWFmaXJlLmNvbQ==" title="mediafile网盘"><a style="color:#ff0033">mediafile网盘</a><i class="fa fa-external-link"></i></span><h3 id="实用软件"><a href="#实用软件" class="headerlink" title="实用软件"></a>实用软件</h3><span class="exturl" data-url="aHR0cHM6Ly91MTkxNDQzODYuY3RmaWxlLmNvbS9mcy8xOTE0NDM4Ni0zMjg1NzU1ODM=" title="DiskGenius"><a style="color:#ff0033">DiskGenius</a><i class="fa fa-external-link"></i></span><span class="exturl" data-url="aHR0cHM6Ly91MTkxNDQzODYuY3RmaWxlLmNvbS9mcy8xOTE0NDM4Ni0zMjg1NzU3Mjk=" title="2016激活工具"><a style="color:#ff0033">2016激活工具</a><i class="fa fa-external-link"></i></span><span class="exturl" data-url="aHR0cHM6Ly91MTkxNDQzODYuY3RmaWxlLmNvbS9mcy8xOTE0NDM4Ni0zMjg1NzU1OTE=" title="win64管理小箭头"><a style="color:#ff0033">win64管理小箭头</a><i class="fa fa-external-link"></i></span><span class="exturl" data-url="aHR0cHM6Ly91MTkxNDQzODYuY3RmaWxlLmNvbS9mcy8xOTE0NDM4Ni0zMjg1NzU3NzI=" title="数学公式编辑器MathType6.9b破解版"><a style="color:#ff0033">数学公式编辑器MathType6.9b破解版</a><i class="fa fa-external-link"></i></span><span class="exturl" data-url="aHR0cHM6Ly91MTkxNDQzODYuY3RmaWxlLmNvbS9mcy8xOTE0NDM4Ni0zMjg1NzU1MTk=" title="环境变量修改RapidEEx64"><a style="color:#ff0033">环境变量修改RapidEEx64</a><i class="fa fa-external-link"></i></span><span class="exturl" data-url="aHR0cHM6Ly91MTkxNDQzODYuY3RmaWxlLmNvbS9mcy8xOTE0NDM4Ni0zMjg1NzU2NjQ=" title="路由跟踪"><a style="color:#ff0033">路由跟踪</a><i class="fa fa-external-link"></i></span>]]></content>
    
    <summary type="html">
    
      常用的工具汇总备忘
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo博客常见错误分析</title>
    <link href="https://lixint.github.io/errortype.html"/>
    <id>https://lixint.github.io/errortype.html</id>
    <published>2018-12-14T14:50:12.000Z</published>
    <updated>2018-12-18T03:14:20.452Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2018年12月18日11:14</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><blockquote class="blockquote-center"><p>欢迎加入博客搭建交流群（QQ群号60429576）==&gt;<a style="color:#ff0033" href="http://qq.cn.hn/g6Y" title="QQ群号60429576" rel="noopener" target="_blank"><strong>点击加入</strong></a>&lt;==</p></blockquote><h3 id="常见错误分析"><a href="#常见错误分析" class="headerlink" title="常见错误分析"></a>常见错误分析</h3><p>以下是常见的错误类型：</p><h4 id="YAML-解析错误"><a href="#YAML-解析错误" class="headerlink" title="YAML 解析错误"></a>YAML 解析错误</h4>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JS-YAML: incomplete explicit mapping pair; a key node is missed at line 18, column 29:</span><br><span class="line">last_updated: Last updated: %s</span><br></pre></td></tr></table></figure><p>   如果 YAML 字符串中包含冒号（<code>:</code>）的话，请加上引号。<br>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JS-YAML: bad indentation of a mapping entry at line 18, column 31:</span><br><span class="line">last_updated:&quot;Last updated: %s&quot;</span><br></pre></td></tr></table></figure></p><p>   请确认您使用空格进行缩进（Soft tab），并确认冒号后有加上一个空格。<br>   您可参阅<a href="http://www.yaml.org/spec/1.2/spec.html" rel="noopener" title="YAML 规范" target="_blank">YAML 规范</a>以取得更多信息。</p><h4 id="EMFILE-错误"><a href="#EMFILE-错误" class="headerlink" title="EMFILE 错误"></a>EMFILE 错误</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: EMFILE, too many open files</span><br></pre></td></tr></table></figure><p>虽然 Node.js 有非阻塞 I/O，同步 I/O 的数量仍被系统所限制，在生成大量静态文件的时候，您可能会碰到 EMFILE 错误，您可以尝试提高同步 I/O 的限制数量来解决此问题。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ulimit -n 10000</span><br></pre></td></tr></table></figure></p><p>（这一命令只对Linux系统有效）</p><h4 id="Git-部署问题"><a href="#Git-部署问题" class="headerlink" title="Git 部署问题"></a>Git 部署问题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fatal: &apos;username.github.io&apos; does not appear to be a git repository</span><br></pre></td></tr></table></figure><p>请确认您已经在电脑上<a href="https://www.lixint.me/hexo-git.html" target="_blank" rel="noopener">配置 git</a>，或改用 HTTPS 库（repository）地址。</p><h4 id="服务器问题"><a href="#服务器问题" class="headerlink" title="服务器问题"></a>服务器问题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: listen EADDRINUSE</span><br></pre></td></tr></table></figure><p>您可能同时开启两个 Hexo 服务器，或者有其他应用程序正在占用相同的端口，请尝试修改 <code>port</code> 参数，或是在启动 Hexo 服务器时加上 <code>-p</code> 选项。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -p 5000</span><br></pre></td></tr></table></figure></p><h4 id="插件安装问题"><a href="#插件安装问题" class="headerlink" title="插件安装问题"></a>插件安装问题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm ERR! node-waf configure build</span><br></pre></td></tr></table></figure><p>当您尝试安装以 C/C++ 或其他非 JavaScript 语言所编写的插件时，可能会遇到此类问题，请确认您已经在电脑上安装相对应的编译器。</p><h4 id="DTrace-错误-（Mac-OS-X）"><a href="#DTrace-错误-（Mac-OS-X）" class="headerlink" title="DTrace 错误 （Mac OS X）"></a>DTrace 错误 （Mac OS X）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123; [Error: Cannot find module &apos;./build/Release/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br><span class="line">&#123; [Error: Cannot find module &apos;./build/default/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br><span class="line">&#123; [Error: Cannot find module &apos;./build/Debug/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br></pre></td></tr></table></figure><p>DTrace 安装可能有错误 , 使用下列命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo --no-optional</span><br></pre></td></tr></table></figure></p><p>参考 <a href="https://github.com/hexojs/hexo/issues/1326#issuecomment-113871796" target="_blank" rel="noopener">#1326</a></p><h4 id="在-Jade-或-Swig-遍历资料"><a href="#在-Jade-或-Swig-遍历资料" class="headerlink" title="在 Jade 或 Swig 遍历资料"></a>在 Jade 或 Swig 遍历资料</h4><p>Hexo 使用 <a href="https://github.com/tommy351/warehouse" target="_blank" rel="noopener">Warehouse</a> 存储资料，它不是一般数组所以必须先进行类型转型才能遍历。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for post in site.posts.toArray() %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure></p><h4 id="资料没有更新"><a href="#资料没有更新" class="headerlink" title="资料没有更新"></a>资料没有更新</h4><p>有时资料可能没有被更新，或是生成的文件与修改前的相同，您可以尝试清除缓存并再执行一次。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure></p><h4 id="泄露（Escape）内容"><a href="#泄露（Escape）内容" class="headerlink" title="泄露（Escape）内容"></a>泄露（Escape）内容</h4><p>Hexo 使用 <a href="http://mozilla.github.io/nunjucks/" target="_blank" rel="noopener">Nunjucks</a> 来解析文章（旧版本使用 <a href="http://paularmstrong.github.io/swig/" target="_blank" rel="noopener">Swig</a>，两者语法类似），内容若包含 `{{ }}` 或 `{% %}` 可能导致解析错误，您可以用 <code>raw</code> 标签包裹来避免潜在问题发生。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">Hello &#123;&#123; sensitive &#125;&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure></p><h4 id="ENOSPC-错误-（Linux）"><a href="#ENOSPC-错误-（Linux）" class="headerlink" title="ENOSPC 错误 （Linux）"></a>ENOSPC 错误 （Linux）</h4><p>运行 <code>$ hexo server</code> 命令有时会返回这样的错误：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: watch ENOSPC ...</span><br></pre></td></tr></table></figure></p><p>它可以用过运行 <code>$ npm dedupe</code> 来解决，如果不起作用的话，可以尝试在 Linux 终端中运行下列命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p</span><br></pre></td></tr></table></figure></p><p>这将会提高你能监视的文件数量。</p><h4 id="Process-Out-of-Memory"><a href="#Process-Out-of-Memory" class="headerlink" title="Process Out of Memory"></a>Process Out of Memory</h4><p>当<code>hexo g</code>时，遇到以下错误：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - process out of memory</span><br></pre></td></tr></table></figure></p><p>如下，更改<code>hexo-cli</code>文件的第一行，来增大nodejs堆内存.该bug已在<a href="https://github.com/hexojs/hexo/issues/1735" target="_blank" rel="noopener">新版本</a>修复。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env node --max_old_space_size=8192</span><br></pre></td></tr></table></figure></p><h4 id="Git-Deployment-Problems"><a href="#Git-Deployment-Problems" class="headerlink" title="Git Deployment Problems"></a>Git Deployment Problems</h4><p><code>RPC failed</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">error: RPC failed; result=22, HTTP code = 403</span><br><span class="line">fatal: &apos;username.github.io&apos; does not appear to be a git repository</span><br></pre></td></tr></table></figure></p><p>确保你有你的电脑上设置git正确或尝试使用HTTPS存储库URL。<br><code>Error: ENOENT: no such file or directory</code><br>这个需要有一定的git的知识，因为可能是由于写错了标签,类别,或文件名，导致本地和github冲突了，Git不能自动合并这一变化所以它打破了自动分支。<br>解决办法：</p><ol><li>检查文章的标签和类别,确保本地和github上是相同的。</li><li>合并分支（Commit）。</li><li>清除，重构。在站点目录下，命令行（即Git Bash）运行<code>hexo clean</code>和<code>hexo g</code></li><li>手动将站点目录下的<code>public</code>文件夹复制到您的桌面</li><li>从你的master分支切换到部署在本地分支。</li><li>从桌面复制<code>public</code>文件夹到本地分支。</li><li>合并分支到github（Commit）。</li><li>切回master分支。</li></ol><hr><h4 id="Server-Problems"><a href="#Server-Problems" class="headerlink" title="Server Problems"></a>Server Problems</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: listen EADDRINUSE</span><br></pre></td></tr></table></figure><p>你可能使用相同的端口，同时开启了两个Hexo服务器。如果需要同时开启，可以尝试修改端口设置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -p 5000</span><br></pre></td></tr></table></figure></p><h4 id="Plugin-Installation-Problems"><a href="#Plugin-Installation-Problems" class="headerlink" title="Plugin Installation Problems"></a>Plugin Installation Problems</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm ERR! node-waf configure build</span><br></pre></td></tr></table></figure><p>这个错误可能发生在试图安装一个用Cc++或另一个javascript语言编写的插件。确保您已经安装了正确的编译器在您的计算机上。</p><h4 id="Iterate-Data-Model-on-Jade-or-Swig"><a href="#Iterate-Data-Model-on-Jade-or-Swig" class="headerlink" title="Iterate Data Model on Jade or Swig"></a>Iterate Data Model on Jade or Swig</h4><p>Hexo使用仓库的数据模型。这不是一个数组,所以你可能需要将对象转换为iterable。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for post in site.posts.toArray() %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure></p><h4 id="No-command-is-executed"><a href="#No-command-is-executed" class="headerlink" title="No command is executed"></a>No command is executed</h4><p>那个不能使用除<code>help</code>、<code>init</code>和<code>version</code>以外的命令行（即Git Bash）时, 有可能时站点目录下的<code>package.json</code>文件，缺少<code>hexo</code> ，如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;hexo&quot;: &#123;</span><br><span class="line">    &quot;version&quot;: &quot;3.2.2&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="ENOSPC-Error-Linux"><a href="#ENOSPC-Error-Linux" class="headerlink" title="ENOSPC Error (Linux)"></a>ENOSPC Error (Linux)</h4><p>如果运行命令<code>$ hexo server</code> 返回一个错误:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: watch ENOSPC …</span><br></pre></td></tr></table></figure></p><p>可以通过运行<code>$ npm dedupe</code>或者以下命令行（即Git Bash）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p</span><br></pre></td></tr></table></figure></p><p>来增加测试时，你可以看见的文件数量。</p><h4 id="EMPERM-Error-Windows-Subsystem-for-Linux"><a href="#EMPERM-Error-Windows-Subsystem-for-Linux" class="headerlink" title="EMPERM Error (Windows Subsystem for Linux)"></a>EMPERM Error (Windows Subsystem for Linux)</h4><p>如果在Windows Subsystem for Linux，运行命令<code>$ hexo server</code> 返回这个错误:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: watch /path/to/hexo/theme/ EMPERM</span><br></pre></td></tr></table></figure></p><p>因为目前在Windows Subsystem for Linux中，有些内容更改时，还不能实时更新到hexo服务器。<br>所以需要重新编译，再启动服务器：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></p><h4 id="Template-render-error"><a href="#Template-render-error" class="headerlink" title="Template render error"></a>Template render error</h4><p>有时运行命令<code>$ hexo g</code> 返回一个错误:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FATAL Something’s wrong. Maybe you can find the solution here: &lt;http://hexo.io/docs/troubleshooting.html&gt;</span><br><span class="line">Template render error: (unknown path)</span><br></pre></td></tr></table></figure></p><p>这意味着有些认不出来单词在你的文件，并且很可能在你的新博文,或者配置文件<code>_config.yml</code>中，比如缩进错误：<br>错误例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plugins:</span><br><span class="line">hexo-generator-feed</span><br><span class="line">hexo-generator-sitemap</span><br><span class="line">\</span><br></pre></td></tr></table></figure></p><p><code>`</code></p>]]></content>
    
    <summary type="html">
    
      总结了常见的错误类型及出现原因，大多摘自网络及官方文档
    
    </summary>
    
      <category term="博客搭建" scheme="https://lixint.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="https://lixint.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客部署至云服务器</title>
    <link href="https://lixint.github.io/hexovps.html"/>
    <id>https://lixint.github.io/hexovps.html</id>
    <published>2018-12-14T13:50:28.000Z</published>
    <updated>2020-03-11T13:32:57.890Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2020年03月11日21:32</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><blockquote class="blockquote-center"><p>欢迎加入博客搭建交流群（QQ群号60429576）==&gt;<a style="color:#ff0033" href="http://qq.cn.hn/g6Y" title="QQ群号60429576" rel="noopener" target="_blank"><strong>点击加入</strong></a>&lt;==</p></blockquote><p>博客的Githupages发布方案已经在<a href="hexo-githubpages.html">本地安装Hexo博客框架及发布至Github Pages</a>讲过了，在这里就不在赘述，本文主要讲将博客部署至个人VPS中，本次教程需要一定的Linux基础，如果不是非常有必要不建议部署在VPS上，国内的VPS主机需要进行备案才能绑定域名，国外的主机访问速度受限。</p><h3 id="主机选择"><a href="#主机选择" class="headerlink" title="主机选择"></a>主机选择</h3><p>本次教程使用的主机是腾讯云的1G1核主机，如果你是学生的话推荐腾讯云或者阿里云的学生机，或者使用阿里云的香港轻量应用服务器，这个是免备案的。详情请看：<a href="txamd.html">【良心推荐】阿里云香港1G1核轻量应用服务器24元/月</a></p><h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><p>1.一台安装了 Ubuntu 14.04 的 <a href="txamd.html">云服务器</a><br>2.在本地电脑上安装 Node.js 和 npm，这个可以看<a href="hexo-git.html">Hexo博客本地环境安装步骤</a><br>此外，还要在云服务器上安装 Git 和 Nginx 两个必备的软件包。Git 用于版本管理和部署，Nginx 用于静态博客托管。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install git nginx -y</span><br></pre></td></tr></table></figure><h3 id="本地-Hexo-安装及初始化"><a href="#本地-Hexo-安装及初始化" class="headerlink" title="本地 Hexo 安装及初始化"></a>本地 Hexo 安装及初始化</h3><p>NPM 上还有许多 Hexo 相关的包，但是只要安装好了 <code>hexo-cli</code> 和 <code>hexo-server</code>这两个核心组件之后，就可以让博客跑起来了。<br>我们使用 Node.js 的包管理器 <code>npm</code> 安装 <code>hexo-cli</code> 和 <code>hexo-server</code>。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli hexo-server -g</span><br></pre></td></tr></table></figure></p><p>hexo-cli 是 Hexo 的命令行工具，可用于快速新建、发布、部署博客；hexo-server 是 Hexo 的内建服务器，可用于部署前的预览和测试。<code>-g</code> 选项，表示全局安装。<br>接下来，为 Hexo 博客做一些基础配置，包括创建基础文件。这步操作很简单，Hexo 提供了一个快捷命令，只需要提供一个存放文件的目录地址即可。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init ~<span class="regexp">/hexo_blog</span></span><br></pre></td></tr></table></figure></p><p>在国内环境下执行该命令，速度会有些慢。因为需要从 Hexo 在 Github 上的仓库克隆；仓库克隆成功后，会自动执行一系列 npm 命令，自安装依赖模块。<br>这时，我们就已经有了一个写作、管理博客的环境。<br>详细的请看<a href="https://www.lixint.me/hexo-githubpages.html" target="_blank" rel="noopener">本地安装Hexo博客框架及发布至Github Pages</a>此处不赘述。</p><h3 id="云端服务器配置"><a href="#云端服务器配置" class="headerlink" title="云端服务器配置"></a>云端服务器配置</h3><p>完成本地端的操作之后，暂时回到服务器的配置。在下面的操作之前，请确保已经购买了一台<a href="https://www.qcloud.com/product/cvm?fromSource=gwzcw.84339.84339.84339" target="_blank" rel="noopener">云服务器</a>，并且能够以 <strong>ubuntu</strong> 用户身份正常登陆。<br>在这部分，要完成以下件事情：<br>1.为本地的 hexo_blog 配置一个部署静态文件的远程仓库。 许多教程均以 Github 作为中转的平台，<strong>但是会让整个流程变得更为复杂，而且会受服务器与 Github 之间网络情况的影响</strong>。假如 Github 宕机或者被封，你将无法更新博客。<br>2.配置 Nginx 托管博客文件目录。<br>3.配置远程仓库自动更新到博客文件目录的钩子。</p><h4 id="创建私有-Git-仓库"><a href="#创建私有-Git-仓库" class="headerlink" title="创建私有 Git 仓库"></a>创建私有 Git 仓库</h4><p>在 <code>/var/repo/</code> 下，创建一个名为 <code>hexo_static</code> 的裸仓库（bare repo）。<br>如果没有 <code>/var/repo</code> 目录，需要先创建；然后修改目录的所有权和用户权限，之后 ubuntu 用户都具备 <code>/var/repo</code> 目录下所有新生成的目录和文件的权限。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /<span class="keyword">var</span>/repo/</span><br><span class="line">sudo chown -R $USER:$USER /<span class="keyword">var</span>/repo/</span><br><span class="line">sudo chmod -R <span class="number">755</span> /<span class="keyword">var</span>/repo/</span><br></pre></td></tr></table></figure></p><p>然后，执行如下命令：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /<span class="keyword">var</span>/repo/</span><br><span class="line">git init --bare hexo_static.git</span><br></pre></td></tr></table></figure></p><h4 id="配置-Nginx-托管文件目录"><a href="#配置-Nginx-托管文件目录" class="headerlink" title="配置 Nginx 托管文件目录"></a>配置 Nginx 托管文件目录</h4><p>接下来，创建 <code>/var/www/hexo</code> 目录，用于 Nginx 托管。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /<span class="keyword">var</span>/www/hexo</span><br></pre></td></tr></table></figure></p><p>和上一步类似，这里也需要修改目录的所有权和权限。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R $USER:$USER /<span class="keyword">var</span>/www/hexo</span><br><span class="line">sudo chmod -R <span class="number">755</span> /<span class="keyword">var</span>/www/hexo</span><br></pre></td></tr></table></figure></p><p>然后，修改 Nginx 的 <code>default</code> 设置：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/nginx/sites-available/<span class="keyword">default</span></span><br></pre></td></tr></table></figure></p><p>将其中的 root 指令指向 /var/www/hexo 目录。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">server &#123;</span><br><span class="line">    listen <span class="number">80</span> default_server;</span><br><span class="line">    listen [::]:<span class="number">80</span> default_server ipv6only=on;</span><br><span class="line">    root /var/www/hexo; # 需要修改的部分</span><br><span class="line">    index index.html index.htm;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>保存并退出文件。如果以后购买并备案域名之后，可以再将配置中的 default_server 修改为你的域名。<br>最后，重启 Nginx 服务，使得改动生效。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service nginx restart</span><br></pre></td></tr></table></figure></p><p>做完这一步之后，你去访问服务器的 IP 时，应该还是会报错的，因为 <code>/var/www/hexo</code> 目录是空的。</p><h4 id="创建-Git-钩子"><a href="#创建-Git-钩子" class="headerlink" title="创建 Git 钩子"></a>创建 Git 钩子</h4><p>接下来，在服务器上的裸仓库 hexo_static 创建一个钩子，在满足特定条件时将静态 HTML 文件传送到 Web 服务器的目录下，即 /var/www/hexo。<br>在自动生成的 hooks 目录下创建一个新的钩子文件：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /<span class="keyword">var</span>/repo/hexo_static.git/hooks/post-receive</span><br></pre></td></tr></table></figure></p><p>在该文件中添加两行代码，指定 Git 的工作树（源代码）和 Git 目录（配置文件等）。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">git --work-tree=<span class="regexp">/var/</span>www/hexo --git-dir=<span class="regexp">/var/</span>repo/hexo_static.git checkout -f</span><br></pre></td></tr></table></figure></p><p>保存并退出文件，并让该文件变为可执行文件。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /<span class="keyword">var</span>/repo/hexo_static.git/hooks/post-receive</span><br></pre></td></tr></table></figure></p><p>至此，服务端的配置基本结束。</p><h4 id="配置密钥"><a href="#配置密钥" class="headerlink" title="配置密钥"></a>配置密钥</h4><p>如果直接是通过账户密码SSH连接的云服务器，需要配置一下密钥让博客在推送是免输密码</p><h5 id="本地生成密钥"><a href="#本地生成密钥" class="headerlink" title="本地生成密钥"></a>本地生成密钥</h5><p><strong>这个跟链接github时生成密钥是一样的。也可以用当时生成的那个id_rsa.pub公钥。</strong><br>生成 ssh-key，选加密算法（rsa、dsa），给秘钥命名（可选）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;name&quot;</span><br></pre></td></tr></table></figure></p><p>passphrase 是证书口令，以加强安全性，避免证书被恶意复制。<br>会在 <code>~.ssh</code> 下生成 <code>id_rsa</code>, <code>id_rsa.pub</code> 两个文件，分别是 私钥/公钥。</p><h5 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h5><p>公钥需保存到远程服务器 <code>~/.ssh/authorized_keys</code> 里，私钥由客户端本地留存。<br>要保证 <code>.ssh</code> 和 <code>authorized_keys</code> 都只有用户自己有写权限。否则验证无效。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ chmod -R 700 ~/.ssh/</span><br><span class="line">$ chmod 600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></p><p>然后<code>vi .ssh/authorized_keys</code>把<code>id_rsa.pub</code>中的内容粘贴进去保存。</p><h4 id="博客配置"><a href="#博客配置" class="headerlink" title="博客配置"></a>博客配置</h4><p><a style="color:#9900ff"><strong>主题配置文件</strong></a>中<code>deploy</code>项目配置如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo: root@ip地址:/var/repo/hexo_static</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      Hexo博客部署只云服务器。
    
    </summary>
    
      <category term="博客搭建" scheme="https://lixint.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="https://lixint.github.io/tags/Hexo/"/>
    
      <category term="vps" scheme="https://lixint.github.io/tags/vps/"/>
    
  </entry>
  
  <entry>
    <title>轻量应用服务器与ECS该选哪一个</title>
    <link href="https://lixint.github.io/ecs.html"/>
    <id>https://lixint.github.io/ecs.html</id>
    <published>2018-12-14T10:55:02.000Z</published>
    <updated>2018-12-18T03:13:57.818Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2018年12月18日11:13</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><blockquote class="blockquote-center"><p>欢迎加入博客搭建交流群（QQ群号60429576）==&gt;<a style="color:#ff0033" href="http://qq.cn.hn/g6Y" title="QQ群号60429576" rel="noopener" target="_blank"><strong>点击加入</strong></a>&lt;==</p></blockquote><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><h4 id="控制台"><a href="#控制台" class="headerlink" title="控制台"></a>控制台</h4><p><strong>轻量应用服务器</strong><br><img src="https://ws2.sinaimg.cn/large/006tNc79gy1fjejwx5vxaj31kw0tt45y.jpg" alt="img"></p><p><strong>ECS</strong><br><img src="https://ws3.sinaimg.cn/large/006tNc79gy1fjejxd1zs2j31kw0tsqac.jpg" alt="img"></p><p>那么从控制台的对比上，ECS 是把所有的内容都告诉用户你的地域、操作系统、标签等等，但是新手看了难免一头雾水。而 轻量应用服务器 则做了减法，让控制台变得更加的直观简介，只告诉你重要的信息。<br>站在新手视角肯定是 轻量应用服务器 更简洁更舒服，站在我的角度么，我配置好服务器基本上很少会来看一下 ECS 的控制台，但一回来肯定是需要一些信息的，那么 ECS 能告诉我越多肯定越好。</p><h4 id="应用镜像"><a href="#应用镜像" class="headerlink" title="应用镜像"></a>应用镜像</h4><p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fjfmi18cvvj31k20bs0u4.jpg" alt="img"></p><p>应用镜像像 WordPress、phpwind 其实都是基于 LAMP 镜像运行的，而 轻量应用服务器 提供的 LAMP 细节好评就是：php 是通过 php-fpm 方式运行的，而不是 mod_php，而且 MySQL 也是 5.7 版本的不是说万年 5.1 或者 5.5，能支持更多的 PHP 程序。在创建虚拟主机绑定域名商相较于一键包配合图形化控制台的确更加好用。</p><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><p><img src="https://ws1.sinaimg.cn/large/006tNc79gy1fjekajgotdj31kw0vtte9.jpg" alt="img"></p><p>轻量应用服务器 在功能上肯定是更讨喜的，安装应用镜像基本上能做到开箱即用，三大金刚 Apache Httpd、PHP、MySQL 都会默认安装好，而且添加域名、设置 HTTPS 等操作都是一键式的，极大得降低了 HTTPS 入门门槛，而且 HTTPS 的配置跑分是 A 哟，为了照顾新手不会使用 HSTS 所以没开，不然跑到 A+ 肯定是妥妥的。<br>ECS 能就只有空白的系统镜像，任何环境都是需要用户自行安装的，这在一定程度上增加了用户使用的学习成本。而 ECS 更多体现的就是专业性了，虽然复杂但是十分强大的安全组、弹性IP、均衡负载等等。</p><h4 id="基础运维"><a href="#基础运维" class="headerlink" title="基础运维"></a>基础运维</h4><p><img src="https://ws4.sinaimg.cn/large/006tNc79gy1fjekenwgv0j30z80qyq9g.jpg" alt="img"></p><p>比如说 ECS 控制台操作起来也更加的方便，点击一下就能远程连接了，操作的过程中也支持命令的右键复制和粘贴，也大大降低了用户使用终端控制的学习成本，不然还要下个 Putty 或者 Xshell 啥的也是麻烦。 然后默认只支持 密钥 登录 Linux，这个也是好评，不用密码当然更安全。<br>同样不考虑使用 Putty 或者 Xshell 等 OpenSSH 连接工具的话，ECS控制台的远程终端控制实在是难用，不过借助 DMS 产品倒是能扩展使用的灵活性。</p><h4 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h4><p>轻量的防火墙设置同 ECS 的安全组相比很简单直观更适合新手的使用，没有一些非常复杂的设置，新手看到 udp、tcp 真的是头都大了额，如果新手看教程的话，一般只会说 “记得一定要开启443端口才能使用HTTPS” 这样的话，但是一看到 ECS 又是 TCP 又是 UDP，而且端口还要写成 <code>443/443</code> 的形式，直接就是一个头两个大了。<br><img src="https://ws3.sinaimg.cn/large/006tNc79gy1fjekisa9w6j31kw0i90wi.jpg" alt="img"></p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><h4 id="无法满足企业特性"><a href="#无法满足企业特性" class="headerlink" title="无法满足企业特性"></a>无法满足企业特性</h4><p>轻量应用服务器有轻量两个字，意味着其无法持续进行高负载运行（即 CPU 长时间高负载占用），如果我们要利用 轻量应用服务器 来进行持续的渲染、转码、机器学习等持续高负载操作那么就不可以了，也不支持 Nvme 这样的超高性能的 SSD，这对于读写敏感的操作就不好了。</p><h4 id="三大金刚的版本问题"><a href="#三大金刚的版本问题" class="headerlink" title="三大金刚的版本问题"></a>三大金刚的版本问题</h4><p>Apache Httpd、PHP、MySQL 是会持续更新的，而且它们也均有爆发过大规模严重漏洞的历史，不过目前还没有看到应用镜像中的三大金刚如何升级版本号的姿势。<br>像 WordPress 这样的程序完全可以适应高版本的 PHP，使用 PHP7.0 或者 7.1 可以拥有更高的性能还可以降低负载，但是默认只有 php5.6 可以选，既然使用 php-fpm 方式驱动其实完全可以提供多版本 PHP 的选择。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>可以说 轻量应用服务器 是专门针对云计算入门新手或者只有轻量计算需求的用户，其对标的产品只会是 ECS 的共享型，当一到要使用 ECS 的企业型来发展性能、功能了，轻量应用服务器 的优势其实也就没有了。<br>如果你只是轻度使用云计算产品例如搭建一个博客、官网，如果你需要一个更快启动的轻量服务器，如果你需要一个纯粹的虚拟专用机，如果你并没有阿里云内网的需求，那么 轻量应用服务器 绝对是你最好的选择。</p><h3 id="评测"><a href="#评测" class="headerlink" title="评测"></a>评测</h3><p>我们对比的是华东1地域的安装了 CentOS 7.3 系统的 1核心1G内存的 ECS 和 轻量应用服务器 产品。看了评测就可以跟深入的了解，ECS 和 轻量应用服务器 的不同只在于概念而不在于性能。</p><h4 id="CPU-性能"><a href="#CPU-性能" class="headerlink" title="CPU 性能"></a>CPU 性能</h4><p>根据下面的对比可以发现，轻量应用服务器 的性能和 ECS 并没有差距，大家都是新一代的 Xeon CPU，同样的虚拟化技术。只不过 轻量应用服务器 不可以持续高负载占用。<br><strong>轻量应用服务器：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">System Benchmarks Index Values               BASELINE       RESULT    INDEX</span><br><span class="line">Dhrystone 2 using register variables         116700.0   34281977.0   2937.6</span><br><span class="line">Double-Precision Whetstone                       55.0       2962.7    538.7</span><br><span class="line">Execl Throughput                                 43.0       4860.0   1130.2</span><br><span class="line">File Copy 1024 bufsize 2000 maxblocks          3960.0    1054197.7   2662.1</span><br><span class="line">File Copy 256 bufsize 500 maxblocks            1655.0     283098.8   1710.6</span><br><span class="line">File Copy 4096 bufsize 8000 maxblocks          5800.0    3165160.0   5457.2</span><br><span class="line">Pipe Throughput                               12440.0    1734490.3   1394.3</span><br><span class="line">Pipe-based Context Switching                   4000.0     375732.0    939.3</span><br><span class="line">Process Creation                                126.0      18345.1   1456.0</span><br><span class="line">Shell Scripts (1 concurrent)                     42.4       6747.0   1591.3</span><br><span class="line">Shell Scripts (8 concurrent)                      6.0        921.5   1535.8</span><br><span class="line">System Call Overhead                          15000.0    2939229.7   1959.5</span><br><span class="line">                                                                   ========</span><br><span class="line">System Benchmarks Index Score                                        1649.5</span><br></pre></td></tr></table></figure></p><p><strong>ECS：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">System Benchmarks Index Values               BASELINE       RESULT    INDEX</span><br><span class="line">Dhrystone 2 using register variables         116700.0   34582858.9   2963.4</span><br><span class="line">Double-Precision Whetstone                       55.0       2984.8    542.7</span><br><span class="line">Execl Throughput                                 43.0       5118.8   1190.4</span><br><span class="line">File Copy 1024 bufsize 2000 maxblocks          3960.0    1073823.9   2711.7</span><br><span class="line">File Copy 256 bufsize 500 maxblocks            1655.0     284701.5   1720.3</span><br><span class="line">File Copy 4096 bufsize 8000 maxblocks          5800.0    3213933.6   5541.3</span><br><span class="line">Pipe Throughput                               12440.0    1722785.7   1384.9</span><br><span class="line">Pipe-based Context Switching                   4000.0     377999.7    945.0</span><br><span class="line">Process Creation                                126.0      18704.4   1484.5</span><br><span class="line">Shell Scripts (1 concurrent)                     42.4       6852.6   1616.2</span><br><span class="line">Shell Scripts (8 concurrent)                      6.0        937.2   1562.0</span><br><span class="line">System Call Overhead                          15000.0    2979190.8   1986.1</span><br><span class="line">                                                                   ========</span><br><span class="line">System Benchmarks Index Score                                        1673.4</span><br></pre></td></tr></table></figure></p><h4 id="磁盘性能"><a href="#磁盘性能" class="headerlink" title="磁盘性能"></a>磁盘性能</h4><p>由下面的磁盘跑分也可以看见，轻量应用服务器 的 20G SSD 系统盘 和 ECS 的 20G SSD 云盘的性能都是一致的，都是 1800 的iops，也都是 90M 左右的读写没有差距。<br><strong>轻量应用服务器：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">/dev/vda:</span><br><span class="line"> Timing cached reads:   21070 MB in  2.00 seconds = 10549.25 MB/sec</span><br><span class="line"> Timing buffered disk reads: 270 MB in  3.01 seconds =  89.76 MB/sec</span><br><span class="line"> [root@izbp1auqkyqtj4iozs7athz dev]# fio --bs=4k --ioengine=libaio --iodepth=1 --direct=1 --rw=read --time_based --runtime=600 --refill_buffers --norandommap --randrepeat=0 --group_reporting --name=fio-read --size=10G --filename=/dev/vda</span><br><span class="line">fio-read: (g=0): rw=read, bs=4K-4K/4K-4K/4K-4K, ioengine=libaio, iodepth=1</span><br><span class="line">fio-2.2.8</span><br><span class="line">Starting 1 process</span><br><span class="line">Jobs: 1 (f=1): [R(1)] [100.0% done] [7200KB/0KB/0KB /s] [1800/0/0 iops] [eta 00m:00s]</span><br><span class="line">fio-read: (groupid=0, jobs=1): err= 0: pid=24361: Sun Sep 10 15:04:27 2017</span><br><span class="line">  read : io=4206.7MB, bw=7179.3KB/s, iops=1794, runt=600004msec</span><br><span class="line">    slat (usec): min=3, max=165, avg= 6.78, stdev= 2.02</span><br><span class="line">    clat (usec): min=2, max=84748, avg=548.56, stdev=2727.93</span><br><span class="line">     lat (usec): min=131, max=84755, avg=555.59, stdev=2727.93</span><br><span class="line">    clat percentiles (usec):</span><br><span class="line">     |  1.00th=[  141],  5.00th=[  241], 10.00th=[  302], 20.00th=[  306],</span><br><span class="line">     | 30.00th=[  314], 40.00th=[  322], 50.00th=[  334], 60.00th=[  350],</span><br><span class="line">     | 70.00th=[  362], 80.00th=[  382], 90.00th=[  442], 95.00th=[  502],</span><br><span class="line">     | 99.00th=[ 1012], 99.50th=[23936], 99.90th=[40704], 99.95th=[42752],</span><br><span class="line">     | 99.99th=[68096]</span><br><span class="line">    bw (KB  /s): min= 4624, max= 7784, per=100.00%, avg=7182.85, stdev=181.15</span><br><span class="line">    lat (usec) : 4=0.01%, 250=6.25%, 500=88.69%, 750=3.79%, 1000=0.27%</span><br><span class="line">    lat (msec) : 2=0.36%, 4=0.06%, 10=0.03%, 20=0.04%, 50=0.48%</span><br><span class="line">    lat (msec) : 100=0.04%</span><br><span class="line">  cpu          : usr=0.50%, sys=1.81%, ctx=1076903, majf=1, minf=33</span><br><span class="line">  IO depths    : 1=100.0%, 2=0.0%, 4=0.0%, 8=0.0%, 16=0.0%, 32=0.0%, &gt;=64=0.0%</span><br><span class="line">     submit    : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.0%</span><br><span class="line">     complete  : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.0%</span><br><span class="line">     issued    : total=r=1076894/w=0/d=0, short=r=0/w=0/d=0, drop=r=0/w=0/d=0</span><br><span class="line">     latency   : target=0, window=0, percentile=100.00%, depth=1</span><br><span class="line">Run status group 0 (all jobs):</span><br><span class="line">   READ: io=4206.7MB, aggrb=7179KB/s, minb=7179KB/s, maxb=7179KB/s, mint=600004msec, maxt=600004msec</span><br><span class="line">Disk stats (read/write):</span><br><span class="line">  vda: ios=1078167/690, merge=0/399, ticks=598805/4230, in_queue=602927, util=98.01%</span><br></pre></td></tr></table></figure></p><p><strong>ECS：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">/dev/vdb:</span><br><span class="line"> Timing cached reads:   19778 MB in  2.00 seconds = 9901.01 MB/sec</span><br><span class="line"> Timing buffered disk reads: 270 MB in  3.02 seconds =  89.54 MB/sec</span><br><span class="line">[root@iZbp1258gr0v9v184jdqqkZ dev]# fio --bs=4k --ioengine=libaio --iodepth=1 --direct=1 --rw=read --time_based --runtime=600 --refill_buffers --norandommap --randrepeat=0 --group_reporting --name=fio-read --size=10G --filename=/dev/vdb</span><br><span class="line">fio-read: (g=0): rw=read, bs=4K-4K/4K-4K/4K-4K, ioengine=libaio, iodepth=1</span><br><span class="line">fio-2.2.8</span><br><span class="line">Starting 1 process</span><br><span class="line">Jobs: 1 (f=1): [R(1)] [100.0% done] [6940KB/0KB/0KB /s] [1735/0/0 iops] [eta 00m:00s]</span><br><span class="line">fio-read: (groupid=0, jobs=1): err= 0: pid=9552: Sun Sep 10 15:23:44 2017</span><br><span class="line">  read : io=4218.9MB, bw=7200.2KB/s, iops=1800, runt=600001msec</span><br><span class="line">    slat (usec): min=3, max=344, avg= 6.97, stdev= 2.32</span><br><span class="line">    clat (usec): min=1, max=85711, avg=546.79, stdev=4741.30</span><br><span class="line">     lat (usec): min=145, max=85717, avg=553.99, stdev=4741.28</span><br><span class="line">    clat percentiles (usec):</span><br><span class="line">     |  1.00th=[  147],  5.00th=[  149], 10.00th=[  151], 20.00th=[  153],</span><br><span class="line">     | 30.00th=[  155], 40.00th=[  159], 50.00th=[  167], 60.00th=[  199],</span><br><span class="line">     | 70.00th=[  229], 80.00th=[  241], 90.00th=[  249], 95.00th=[  270],</span><br><span class="line">     | 99.00th=[  374], 99.50th=[56576], 99.90th=[67072], 99.95th=[67072],</span><br><span class="line">     | 99.99th=[67072]</span><br><span class="line">    bw (KB  /s): min= 6380, max= 7624, per=100.00%, avg=7202.00, stdev=111.69</span><br><span class="line">    lat (usec) : 2=0.01%, 50=0.01%, 250=90.56%, 500=8.76%, 750=0.06%</span><br><span class="line">    lat (usec) : 1000=0.02%</span><br><span class="line">    lat (msec) : 2=0.02%, 4=0.01%, 10=0.01%, 20=0.01%, 50=0.01%</span><br><span class="line">    lat (msec) : 100=0.55%</span><br><span class="line">  cpu          : usr=0.50%, sys=1.98%, ctx=1080029, majf=0, minf=34</span><br><span class="line">  IO depths    : 1=100.0%, 2=0.0%, 4=0.0%, 8=0.0%, 16=0.0%, 32=0.0%, &gt;=64=0.0%</span><br><span class="line">     submit    : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.0%</span><br><span class="line">     complete  : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.0%</span><br><span class="line">     issued    : total=r=1080027/w=0/d=0, short=r=0/w=0/d=0, drop=r=0/w=0/d=0</span><br><span class="line">     latency   : target=0, window=0, percentile=100.00%, depth=1</span><br><span class="line">Run status group 0 (all jobs):</span><br><span class="line">   READ: io=4218.9MB, aggrb=7200KB/s, minb=7200KB/s, maxb=7200KB/s, mint=600001msec, maxt=600001msec</span><br><span class="line">Disk stats (read/write):</span><br><span class="line">  vdb: ios=1079640/0, merge=0/0, ticks=589523/0, in_queue=589382, util=98.27%</span><br></pre></td></tr></table></figure></p><p>文章转载自<a href="https://yq.aliyun.com/articles/202688" target="_blank" rel="noopener">https://yq.aliyun.com/articles/202688</a></p>]]></content>
    
    <summary type="html">
    
      总结：新手建议选择轻量，少折腾。
    
    </summary>
    
      <category term="VPS" scheme="https://lixint.github.io/categories/VPS/"/>
    
    
  </entry>
  
  <entry>
    <title>【良心推荐】阿里云香港1G1核轻量应用服务器24元/月</title>
    <link href="https://lixint.github.io/txamd.html"/>
    <id>https://lixint.github.io/txamd.html</id>
    <published>2018-12-09T09:50:09.000Z</published>
    <updated>2020-03-11T13:35:23.870Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2020年03月11日21:35</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"><br><span class="exturl" data-url="aHR0cHM6Ly9zLmNsaWNrLnRhb2Jhby5jb20vMmc0T25Jdw==" title="阿里云轻量应用服务器"><a style="color:#ff0033">阿里云轻量应用服务器</a><i class="fa fa-external-link"></i></span></p><span class="exturl" data-url="aHR0cHM6Ly9zLmNsaWNrLnRhb2Jhby5jb20vUmY2T25Jdw==" title="阿里云学生机9.5元/月"><a style="color:#ff0033">阿里云学生机9.5元/月</a><i class="fa fa-external-link"></i></span><p>轻量应用服务器普通的ECS云服务器的区别，可以看一下<a href="ecs.html">轻量应用服务器与ECS该选哪一个?</a><br>无意中发现了阿里云的轻量应用服务器，香港的比大陆的还便宜。仅仅24块钱一个月，虽买了一个月试试。<br><img src="https://i.loli.net/2018/12/14/5c13a3d9e6436.png" alt="3"></p><p>ping了一下，人在华北地区，ping香港这个延迟已经是很低了。<br>香港服务器的优点这里就不赘述了，作为轻量应用服务器，用来翻 * bi~可以拥有比较快的速度，峰值30M的带宽，1T的流量也完全够用。用来折腾搭建个人网站的话，又可以省去备案的烦恼。</p><h3 id="阿里云香港购买流程"><a href="#阿里云香港购买流程" class="headerlink" title="阿里云香港购买流程"></a>阿里云香港购买流程</h3><p>点击<span class="exturl" data-url="aHR0cHM6Ly9zLmNsaWNrLnRhb2Jhby5jb20vMmc0T25Jdw==" title="阿里云轻量应用服务器"><a style="color:#ff0033">阿里云轻量应用服务器</a><i class="fa fa-external-link"></i></span>，点击立即购买<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/txamd/1544786700704.png" alt="1544786700704"></p><p>在下一个页面选择香港，当然还有新加坡服务器可选，这个也不错。<br>如果需要搭建博客或者其他的什么环境，可以直接选择需要的应用镜像。<br>不需要的话可以点击系统镜像选择需要的镜像即可。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/txamd/1544786758243.png" alt="1544786758243"></p><p>后面一切都很简单了。付款完成，等待自动跳转到控制台即可。注意默认只开放了80、443、22端口，如果需要开放其他端口，可以自行在控制台的防火墙选项中设置。<br>如果你不需要绑定域名。也不需要去看外面的世界。就是想要个云服务器折腾着玩。<br>可以考虑<span class="exturl" data-url="aHR0cHM6Ly9zLmNsaWNrLnRhb2Jhby5jb20vUmY2T25Jdw==" title="阿里云学生机9.5元/月"><a style="color:#ff0033">阿里云学生机9.5元/月</a><i class="fa fa-external-link"></i></span>，阿里云还是比较人性化，24岁以下免认证，直接获得学生机购买资格。<br>阿里云学生机提供两种配置，一种是普通的ECS，带宽只有1M。还有一种就是轻量应用服务器。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/txamd/1544787113318.png" alt="1544787113318"></p><p>9.5元/月，一年不过一百多。用作平时折腾或者学习用途足够了。需要的赶紧买起来。<br><span class="exturl" data-url="aHR0cHM6Ly9zLmNsaWNrLnRhb2Jhby5jb20vUmY2T25Jdw==" title="阿里云学生机9.5元/月"><a style="color:#ff0033">阿里云学生机页面</a><i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      24一个月的香港云服务器，带宽上线30M，1T流量，良心啊。
    
    </summary>
    
      <category term="VPS" scheme="https://lixint.github.io/categories/VPS/"/>
    
    
      <category term="博客搭建" scheme="https://lixint.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客新建文章并发布</title>
    <link href="https://lixint.github.io/article.html"/>
    <id>https://lixint.github.io/article.html</id>
    <published>2018-12-06T04:16:12.000Z</published>
    <updated>2020-03-11T13:35:48.289Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2020年03月11日21:35</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><blockquote class="blockquote-center"><p>欢迎加入博客搭建交流群（QQ群号60429576）==&gt;<a style="color:#ff0033" href="http://qq.cn.hn/g6Y" title="QQ群号60429576" rel="noopener" target="_blank"><strong>点击加入</strong></a>&lt;==</p></blockquote><h3 id="创建新文章"><a href="#创建新文章" class="headerlink" title="创建新文章"></a>创建新文章</h3><p>根目录命令行输入<code>hexo new &lt;模板&gt; &lt;文章名&gt;</code>新建文章<br>其中<code>&lt;模板&gt;</code>在<code>scaffolds</code>中，默认情况下有三个模板<code>post</code>、<code>draft</code>、<code>page</code></p><table><thead><tr><th>参数</th><th>功能</th><th>路径</th></tr></thead><tbody><tr><td>post</td><td>新建文章</td><td>/source/_posts/</td></tr><tr><td>draft</td><td>新建草稿</td><td>/source/_drafts/</td></tr><tr><td>page</td><td>新建页面（标签页，分类页等）</td><td>/source/</td></tr></tbody></table><p>通常情况下使用<code>hexo new post &lt;title&gt;</code>即可，注意这里的<code>title</code>不是文章名，具体文章中显示的文章标题可以在文章文件中修改，例如：我这里新建一篇文章，title为article<br>命令行输入<code>hexo new post article</code><br>此时在<code>source/_posts/</code>文件夹中多了一个<code>article.md</code>文件。打开可以看到如下内容：<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/article/1544072787521.png" alt="1544072787521"></p><p>文章内容中两条<code>---</code>之间的内容为文章的配置内容，可以在其中设置标签、分类等。其中的<code>title</code>为文章发布后文章页面显示的标题，例如我们修改一下tittle为：Hexo博客文章发布<br>而<code>.md</code>文件的名字，也就是我们新建文章时输入的名字，是作为文章页面链接中显示的名字，例如，本篇文章的文件名为：<code>article.md</code>，文章内设置的文章标题为<code>Hexo博客新建文章并发布</code>，那么本篇文章的链接就是<code>https://www.lixint.me/article.html</code></p><h4 id="文章模板"><a href="#文章模板" class="headerlink" title="文章模板"></a>文章模板</h4><p>在新建文章中使用的<code>post</code>参数，就是模板的名称，在使用<code>hexo new post &lt;文件名&gt;</code>命令进行新建文章时，系统会自动在<code>scaffolds</code>文件夹中搜寻名为<code>post</code>的文件，根据其中的内容生成新的<code>.md</code>文章文件。后续随着配置项的增多，可以自行设置不同类型的模板。例如本篇文章的模板如下：<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/article/1544073389878.png" alt="1544073389878"></p><p>其中的<code>title</code>跟<code>data</code>会在生成文件时自动填写。利用此模板生成的文章文件，只需要进行对应项目的填写即可。例如本篇文章的配置信息如下：<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/article/1544073504510.png" alt="1544073504510"></p><h4 id="给文章添加分类和模板"><a href="#给文章添加分类和模板" class="headerlink" title="给文章添加分类和模板"></a>给文章添加分类和模板</h4><p>通过对文件头部配置信息中<code>tags</code> 与<code>categories</code>项的修改可以设置文章的标签及分类。<br>其中标签可以按格式贴现设置多个：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: Hexo博客新建文章并发布</span><br><span class="line">date: 2018-12-06 12:16:12</span><br><span class="line">tags:</span><br><span class="line"> - Hexo</span><br><span class="line"> - Markdown</span><br><span class="line">categories: 搭建博客</span><br></pre></td></tr></table></figure></p><h4 id="在博文中添加图片"><a href="#在博文中添加图片" class="headerlink" title="在博文中添加图片"></a>在博文中添加图片</h4><p>目前有三种方法像博文中添加图片：</p><h5 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h5><p>命令行输入<code>npm install hexo-asset-image --save</code>安装插件<br>在<code>根目录/source</code>目录下新建一个<code>img</code>文件夹，将需要插入的图片放到里面<br>在文章中引用图片时图片使用格式<code>![header](img/xxx.jpg)</code>进行引用图片。</p><h5 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h5><p>在<a style="color:#9900ff"><strong>博客配置文件</strong></a>中搜索<code>post_asset_folder</code>项，设置为<code>true</code><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/article/1544077136676.png" alt="1544077136676"></p><p>这样在创建文章时会自动在文章<code>.md</code>所在目录<code>/source/_posts</code>文件夹内生成一个与文章同名的文件夹。例如新建文章<code>hexo new post example</code>则会生成一个<code>example.md</code>文件与一个名为<code>example</code>的文件夹。<br>把example这个博文需要展示的图片放在example文件夹目录下；<br>文章内使用<code>[% asset_img slug [title] %]</code>（将方括号][替换为花括号}{）的格式进行插入图片，例如我要插入一个名为<code>1.jpg</code>的图片，写文章时就应该填写<br>​     <code>[% asset_img 1.jpg 图片1 %]</code></p><h5 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h5><p>前两种方法尽管在上传时很方便，但是在插入图片时并不是很方便，现在很多Markdown编辑器在插入图片是非常方便，截图直接粘贴、现有的图片文件直接拖入都可以实现插入图片，而不是使用代码进行插入。<br>但是这样插入的图片在上传时并不会被上传，这样就导致了博客中文章图片的连接还是本地路径的格式。<br>于是博主自己写了一个Python脚本，在文章完成后上传前，通过脚本自动将文章中的图片上传至腾讯云对象存储（腾讯云每个月都有一定的免费额度）或者SMMS图床，文章中图片链接替换。这样既不会占用Github Pages空间，又能方便地插入图片。<br>对于脚本的使用，可以到==&gt;<a href="markdownpic.html">Hexo博文图片自动上传腾讯云、SMMS图床并替换博文内图片链接</a>&lt;==查看</p>]]></content>
    
    <summary type="html">
    
      从零开始搭建博客之四，新建文章并发布
    
    </summary>
    
      <category term="博客搭建" scheme="https://lixint.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="https://lixint.github.io/tags/Hexo/"/>
    
      <category term="Markdown" scheme="https://lixint.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Python模块命令记录</title>
    <link href="https://lixint.github.io/pythoncommand.html"/>
    <id>https://lixint.github.io/pythoncommand.html</id>
    <published>2018-12-06T01:28:47.000Z</published>
    <updated>2018-12-27T13:03:17.533Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2018年12月27日21:03</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><h3 id="获取文件名-后缀名"><a href="#获取文件名-后缀名" class="headerlink" title="获取文件名/后缀名"></a>获取文件名/后缀名</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">file = <span class="string">"Hello.py"</span></span><br><span class="line">file2 = <span class="string">"c:/hello.py"</span></span><br><span class="line"><span class="comment"># 获取前缀（文件名称）</span></span><br><span class="line"><span class="keyword">assert</span> os.path.splitext(file)[<span class="number">0</span>] == <span class="string">"Hello"</span></span><br><span class="line"><span class="comment"># 获取后缀（文件类型）</span></span><br><span class="line"><span class="keyword">assert</span> os.path.splitext(file)[<span class="number">-1</span>] == <span class="string">".py"</span></span><br><span class="line"><span class="keyword">assert</span> os.path.splitext(file)[<span class="number">-1</span>][<span class="number">1</span>:] == <span class="string">"py"</span></span><br><span class="line">os.path.split(file2)   <span class="comment">#['c://','hello.py']</span></span><br></pre></td></tr></table></figure><h3 id="判断文件-目录是否存在"><a href="#判断文件-目录是否存在" class="headerlink" title="判断文件/目录是否存在"></a>判断文件/目录是否存在</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.path.exists(<span class="string">"1.txt"</span>)</span><br><span class="line"><span class="comment">#True</span></span><br><span class="line">os.path.exists(<span class="string">"dirpath"</span>)</span><br><span class="line"><span class="comment">#True</span></span><br></pre></td></tr></table></figure><h3 id="列出文件夹下所有文件"><a href="#列出文件夹下所有文件" class="headerlink" title="列出文件夹下所有文件"></a>列出文件夹下所有文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dir = &quot;c:/dir/&quot;</span><br><span class="line">os.listdir(dir)</span><br></pre></td></tr></table></figure><h3 id="文字生成PDF文件"><a href="#文字生成PDF文件" class="headerlink" title="文字生成PDF文件"></a>文字生成PDF文件</h3><p>依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. pdfkit库</span><br><span class="line">2. wkhtmltopdf软件</span><br></pre></td></tr></table></figure><h4 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h4><p><strong>windowns 平台：</strong></p><p>软件下载地址：<span class="exturl" data-url="aHR0cDovL3draHRtbHRvcGRmLm9yZy9kb3dubG9hZHMuaHRtbA==" title="http://wkhtmltopdf.org/downloads.html http://wkhtmltopdf.org/downloads.html"><i class="fa fa-external-link"></i></span></p><p>手动安装完成后，将该程序的bin执行路径加入到系统环境 <code>$PATH</code> 变量中，否则后面无法使用，添加完成重启电脑刷新。</p><p>例如<code>E:\Program\wkhtmltox\bin\</code></p><p><strong>Linux 平台：</strong></p><p>直接使用命令安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo apt-get install wkhtmltopdf     # ubuntu</span><br><span class="line"><span class="meta">$</span> sudo yum intsall wkhtmltopdf         # centos</span><br></pre></td></tr></table></figure><h4 id="支持url-file-string的导入"><a href="#支持url-file-string的导入" class="headerlink" title="支持url/file/string的导入"></a>支持url/file/string的导入</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pdffkit</span><br><span class="line">pdfkit.from_url(<span class="string">'http://google.com'</span>, <span class="string">'out.pdf'</span>)  <span class="comment">#从网址导入</span></span><br><span class="line">pdfkit.from_file(<span class="string">'test.html'</span>, <span class="string">'out.pdf'</span>)<span class="comment">#从html文件导入</span></span><br><span class="line">pdfkit.from_string(<span class="string">'Hello!'</span>, <span class="string">'out.pdf'</span>)<span class="comment">#从字符串导入</span></span><br></pre></td></tr></table></figure><h4 id="支持list"><a href="#支持list" class="headerlink" title="支持list"></a>支持list</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pdfkit.from_url([<span class="string">'google.com'</span>, <span class="string">'yandex.ru'</span>, <span class="string">'engadget.com'</span>], <span class="string">'out.pdf'</span>)</span><br><span class="line">pdfkit.from_file([<span class="string">'file1.html'</span>, <span class="string">'file2.html'</span>], <span class="string">'out.pdf'</span>)</span><br></pre></td></tr></table></figure><h4 id="支持打开的文件"><a href="#支持打开的文件" class="headerlink" title="支持打开的文件"></a>支持打开的文件</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">'file.html'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    pdfkit.from_file(f, <span class="string">'out.pdf'</span>)</span><br></pre></td></tr></table></figure><h4 id="如果没有添加环境变量"><a href="#如果没有添加环境变量" class="headerlink" title="如果没有添加环境变量"></a>如果没有添加环境变量</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pdfkit</span><br><span class="line">path_wkthmltopdf = <span class="string">r'C:\Python27\wkhtmltopdf\bin\wkhtmltopdf.exe'</span><span class="comment">#将文件路径进行设置</span></span><br><span class="line">config = pdfkit.configuration(wkhtmltopdf=path_wkthmltopdf)<span class="comment">#导入配置</span></span><br><span class="line">pdfkit.from_url(<span class="string">"http://google.com"</span>, <span class="string">"out.pdf"</span>, configuration=config)<span class="comment">#生成时引入</span></span><br></pre></td></tr></table></figure><h4 id="options"><a href="#options" class="headerlink" title="options"></a>options</h4><p><strong>自定义设置</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">options = &#123;</span><br><span class="line">    <span class="string">'page-size'</span>: <span class="string">'Letter'</span>,</span><br><span class="line">    <span class="string">'margin-top'</span>: <span class="string">'0.75in'</span>,</span><br><span class="line">    <span class="string">'margin-right'</span>: <span class="string">'0.75in'</span>,</span><br><span class="line">    <span class="string">'margin-bottom'</span>: <span class="string">'0.75in'</span>,</span><br><span class="line">    <span class="string">'margin-left'</span>: <span class="string">'0.75in'</span>,</span><br><span class="line">    <span class="string">'encoding'</span>: <span class="string">"UTF-8"</span>,</span><br><span class="line">    <span class="string">'custom-header'</span> : [</span><br><span class="line">        (<span class="string">'Accept-Encoding'</span>, <span class="string">'gzip'</span>)</span><br><span class="line">    ]</span><br><span class="line">    <span class="string">'cookie'</span>: [</span><br><span class="line">        (<span class="string">'cookie-name1'</span>, <span class="string">'cookie-value1'</span>),</span><br><span class="line">        (<span class="string">'cookie-name2'</span>, <span class="string">'cookie-value2'</span>),</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">'no-outline'</span>: <span class="keyword">None</span>,</span><br><span class="line">    <span class="string">'outline-depth'</span>: <span class="number">10</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pdfkit.from_url(<span class="string">'http://google.com'</span>, <span class="string">'out.pdf'</span>, options=options)</span><br></pre></td></tr></table></figure><p><strong>引用css</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Single CSS file</span></span><br><span class="line">css = <span class="string">'example.css'</span></span><br><span class="line">pdfkit.from_file(<span class="string">'file.html'</span>, options=options, css=css)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Multiple CSS files</span></span><br><span class="line">css = [<span class="string">'example.css'</span>, <span class="string">'example2.css'</span>]</span><br><span class="line">pdfkit.from_file(<span class="string">'file.html'</span>, options=options, css=css)</span><br></pre></td></tr></table></figure><p><strong>支持中文字符</strong></p><ul><li>需要找一台有安装了中文字体的电脑复制一份字体文件(就是/usr/share/fonts下的文件)，然后操作就可以了。</li><li>需要在html的字符集设置为utf8</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="CentOS安装Python3"><a href="#CentOS安装Python3" class="headerlink" title="CentOS安装Python3"></a>CentOS安装Python3</h3><p>以Python 3.7.1 为例，进到<span class="exturl" data-url="aHR0cHM6Ly93d3cucHl0aG9uLm9yZy9kb3dubG9hZHMvcmVsZWFzZS9weXRob24tMzcxLw==" title="Python3.7.1">Python3.7.1<i class="fa fa-external-link"></i></span>页面。选择Files里面的第一个。复制下载链接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">yum update</span><br><span class="line"><span class="meta">#</span> 安装编译器</span><br><span class="line">yum install gcc gcc-c++ autoconf automake</span><br><span class="line"><span class="meta">#</span> 安装可能用到的库文件</span><br><span class="line">yum install -y zlib-devel bzip2-devel xz-libs wget openssl-devel</span><br><span class="line"><span class="meta">#</span> 下载安装包</span><br><span class="line">wget https://www.python.org/ftp/python/3.7.1/Python-3.7.1.tgz</span><br><span class="line">tar xvf Python-3.7.1.tgz</span><br><span class="line">cd Python-3.7.1</span><br><span class="line"><span class="meta">#</span> 指定安装路径</span><br><span class="line">./configure --prefix=/usr/local</span><br><span class="line"><span class="meta">#</span> 编译并安装</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>编译后报错<code>ModuleNotFoundError: No module named &#39;_ctypes&#39;</code>，是因为3.7版本需要一个新的包libffi-devel，安装此包之后再次进行编译安装即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install libffi-devel -y</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>原来版本为2.7.5，继续输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 移动旧版本Python（备份）</span><br><span class="line">mv /usr/bin/python /usr/bin/python2.7.5</span><br><span class="line"><span class="meta">#</span> 建立软链接</span><br><span class="line">ln -s /usr/local/bin/python3.7 /usr/bin/python</span><br></pre></td></tr></table></figure><p>此时在查看python的版本。可以看到:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Python 3.7.1 (default, Dec 24 2018, 18:48:30) </span><br><span class="line">[GCC 4.8.5 20150623 (Red Hat 4.8.5-36)] on linux</span><br><span class="line">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</span><br><span class="line">import &apos;atexit&apos; # &lt;class &apos;_frozen_importlib.BuiltinImporter&apos;&gt;</span><br></pre></td></tr></table></figure><p>注：升级python后yum会无法使用，需要编辑一下对应文件。</p><p><strong>修改<code>yum</code></strong></p><p><code>vi  /usr/bin/yum</code>把第一行中的<code>#!/usr/bin/python</code>改成<code>#!/usr/bin/python2.7.5</code>。至此，centos中python自2.x升级3.x完成。</p><p><strong>安装<code>pip</code></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://bootstrap.pypa.io/get-pip.py</span><br><span class="line">sudo python get-pip.py</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      初学Python，一些自带库函数都没怎么用过，对平时写无用脚本用到的函数进行记录。
    
    </summary>
    
      <category term="Python学习" scheme="https://lixint.github.io/categories/Python%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Python" scheme="https://lixint.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Text3及配置Python使用环境</title>
    <link href="https://lixint.github.io/sublimetext.html"/>
    <id>https://lixint.github.io/sublimetext.html</id>
    <published>2018-12-05T13:30:10.000Z</published>
    <updated>2019-01-01T05:54:58.649Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2019年01月01日13:54</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><h3 id="安装Package-Control"><a href="#安装Package-Control" class="headerlink" title="安装Package Control"></a>安装Package Control</h3><p>使用Ctrl+`（tab键上面）(或View &gt; Show Console menu) 打开Sublime Text控制台，将下面的Python代码粘贴到控制台里: <span class="exturl" data-url="aHR0cHM6Ly9wYWNrYWdlY29udHJvbC5pby9pbnN0YWxsYXRpb24jc3Qz" title="代码出处">代码出处<i class="fa fa-external-link"></i></span><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request,os,hashlib; h = <span class="string">'6f4c264a24d933ce70df5dedcf1dcaee'</span> + <span class="string">'ebe013ee18cced0ef93d5f746d80ef60'</span>; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( <span class="string">'http://packagecontrol.io/'</span> + pf.replace(<span class="string">' '</span>, <span class="string">'%20'</span>)).read(); dh = hashlib.sha256(by).hexdigest(); print(<span class="string">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h)) <span class="keyword">if</span> dh != h <span class="keyword">else</span> open(os.path.join( ipp, pf), <span class="string">'wb'</span> ).write(by)</span><br></pre></td></tr></table></figure></p><p>如果在<code>Perferences-&gt;package settings</code>中看到<code>package control</code>这一项，则表明安装成功。</p><h3 id="用Package-Control查看已安装的插件"><a href="#用Package-Control查看已安装的插件" class="headerlink" title="用Package Control查看已安装的插件"></a><strong>用Package Control查看已安装的插件</strong></h3><p>1.按下Ctrl+Shift+P调出命令面板。<br>2.输入install 调出 Install Package 选项并回车。等待。<br>在列表中选中要安装的插件，或者输入插件名(比如要安装IMESupport插件，则输入IMESupport，它会实时过滤筛选结果)，根据命令面板中的过滤结果，选择要安装的插件。<br>安装中文插件。搜索localiza，在搜索出来的列表中选择点击安装<br>如果安装失败的话可以到<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JleGRmL0NoaW5lc2VMb2NhbGl6YXRpb24=" title="汉化项目页面">汉化项目页面<i class="fa fa-external-link"></i></span>下载源码，重命名文件夹为<code>ChineseLocalization</code>，放到<code>C:\Users\用户名\AppData\Roaming\Sublime Text 3\Packages</code>中。</p><h3 id="禁用-Sublime-Text-3-检测新版本"><a href="#禁用-Sublime-Text-3-检测新版本" class="headerlink" title="禁用 Sublime Text 3 检测新版本"></a>禁用 Sublime Text 3 检测新版本</h3><p>设置 Preferences -&gt; Settings-User<br>添加 <code>&quot;update_check&quot;: false</code></p><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><p>推荐 <code>Boxy</code>   Ctrl(Mac下Cmd)+Shift+P</p><ol><li><code>install package</code> -&gt; <code>Boxy Theme</code></li><li><code>install package</code> -&gt; <code>A File Icon</code></li></ol><h3 id="其他插件"><a href="#其他插件" class="headerlink" title="其他插件"></a>其他插件</h3><h4 id="SublimeTmpl-新建文件模板"><a href="#SublimeTmpl-新建文件模板" class="headerlink" title="SublimeTmpl 新建文件模板"></a>SublimeTmpl 新建文件模板</h4><p><code>Package settings - sublime tmpl - settings User</code>设置，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;  </span><br><span class="line">            &quot;disable_keymap_actions&quot;: false, // &quot;all&quot;; &quot;html,css&quot;  </span><br><span class="line">            &quot;date_format&quot; : &quot;%Y-%m-%d %H:%M:%S&quot;,  </span><br><span class="line">            &quot;attr&quot;: &#123;  </span><br><span class="line">                &quot;author&quot;: &quot;lixint&quot;,  </span><br><span class="line">                &quot;email&quot;: &quot;lixint8@gmail.com&quot;,  </span><br><span class="line">                &quot;link&quot;: &quot;https://github.com/lixint/&quot;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p><p><code>Package settings - sublime tmpl - key bindings-user</code>设置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[   </span><br><span class="line">    &#123;  </span><br><span class="line">        &quot;caption&quot;: &quot;Tmpl: Create python&quot;, &quot;command&quot;: &quot;sublime_tmpl&quot;,  </span><br><span class="line">        &quot;keys&quot;: [&quot;ctrl+alt+p&quot;], &quot;args&quot;: &#123;&quot;type&quot;: &quot;python&quot;&#125;  </span><br><span class="line">    &#125;,  </span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p>这样用快捷键<code>ctrl+alt+p</code>可以快捷新建py文件并自动填写文件头</p><h4 id="侧边栏字体大小修改插件PackageResourceViewer"><a href="#侧边栏字体大小修改插件PackageResourceViewer" class="headerlink" title="侧边栏字体大小修改插件PackageResourceViewer"></a>侧边栏字体大小修改插件<strong>PackageResourceViewer</strong></h4><p>修改方法：<br>插件安装完后<code>Ctrl+alt+P</code>打开搜索栏，搜索PackageResourceViewer名称，选择open resource<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/sublimetext/1544008082057.png" alt="1544008082057"></p><p>在跳出的搜索框搜索主题名<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/sublimetext/1544007925716.png" alt="1544007925716"></p><p>然后再搜索主题名下的主题文件的名称<br>打开，出现主题配置文件，搜索修改需要的参数即可。</p><h4 id="安装Anaconda"><a href="#安装Anaconda" class="headerlink" title="安装Anaconda"></a>安装Anaconda</h4><p>1.相关配置均需在”Preferences”-“Package settings”-“Anaconda”中选择<br>1.1“Settings-Default”中，手动设置python解释器的路径，然后保存。<br>设置python_interpreter为python解释器路径<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/sublimetext/1544009509138.png" alt="1544009509138"></p><p>Settings-User 设置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;python_interpreter&quot;:&quot;E:/Program/Anaconda3/python.exe&quot;,</span><br><span class="line">&quot;suppress_word_completions&quot;: true,</span><br><span class="line">&quot;suppress_explicit_completions&quot;: true,</span><br><span class="line">&quot;complete_parameters&quot;: true,</span><br><span class="line">&quot;swallow_startup_errors&quot;: true,</span><br><span class="line">&quot;anaconda_linting&quot;:false,</span><br><span class="line">&quot;complete_parameters&quot;: false,   #补全必要参数</span><br><span class="line">    &quot;complete_all_parameters&quot;: false #补全全部参数</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>ubuntu下输入命令<code>whereis python</code>查询Python的安装路径<br>Anaconda-setting-default下设置<code>python_interpreter</code>项为Anaconda中Python的路径，例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;python_interpreter&quot;: &quot;/home/ubuntu/anaconda3/bin/python3.7&quot;,</span><br></pre></td></tr></table></figure></p><p>工具-编译系统选择anaconda<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/sublimetext/1544010202338.png" alt="1544010202338"></p><h4 id="Ubuntu下安装后没有Anaconda编译选项"><a href="#Ubuntu下安装后没有Anaconda编译选项" class="headerlink" title="Ubuntu下安装后没有Anaconda编译选项"></a>Ubuntu下安装后没有Anaconda编译选项</h4><p>工具-编译系统-新建编译系统,输入如下代码:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;env&quot;: &#123;&quot;PYTHONIOENCODING&quot;: &quot;utf8&quot;&#125;,</span><br><span class="line">    &quot;cmd&quot;: [&quot;/home/ubuntu/anaconda3/bin/python3.7&quot;, &quot;-u&quot;, &quot;$file&quot;],</span><br><span class="line">    &quot;file_regex&quot;: &quot;^[ ]*File \&quot;(...*?)\&quot;, line ([0-9]*)&quot;,</span><br><span class="line">    &quot;selector&quot;: &quot;source.python&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>其中的<code>/home/ubuntu/anaconda3/bin/python3.7</code>是Anaconda中Python的路径。</p><h4 id="安装sublimeREPL实现sublime内交互式命令行（使用anaconda环境）"><a href="#安装sublimeREPL实现sublime内交互式命令行（使用anaconda环境）" class="headerlink" title="安装sublimeREPL实现sublime内交互式命令行（使用anaconda环境）"></a>安装sublimeREPL实现sublime内交互式命令行（使用anaconda环境）</h4><p>正常安装步骤，安装完成后，<code>首选项-浏览插件目录\SublimeREPL\config</code><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/sublimetext/1544011647671.png" alt="1544011647671"></p><p>新建文件夹，<code>Python37</code>(根据anaconda的python环境版本确定)，将Python文件夹中的文件全部复制到<code>Python37</code>文件夹。<br>打开<code>Main.sublime-menu</code>文件，替换所有的Python为Python37（改个名字）除了各部分的<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"syntax"</span>: <span class="string">"Packages/Python/Python.tmLanguage"</span>,</span><br></pre></td></tr></table></figure></p><p>中的Python不替换。<br>打开Main.sublime-menu文件，将所有“cmd”：后的路径改为anaconda的python环境路径(注意路径中的斜杠)<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"cmd"</span>: [<span class="string">"D:/anaconda/envs/py3k/python.exe"</span>, <span class="string">"-i"</span>, <span class="string">"-u"</span>],</span><br></pre></td></tr></table></figure></p><p>打开Default.sublime-commands文件，替换所有Python为Python37<br>快捷键添加如下代码，同理可以添加ipython运行。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//anaconda环境下运行sublimeREPL_pdb</span><br><span class="line">&#123;&quot;keys&quot;:[&quot;f6&quot;],</span><br><span class="line">  &quot;caption&quot;: &quot;SublimeREPL: Python37 - PDB current file&quot;,</span><br><span class="line">  &quot;command&quot;: &quot;run_existing_window_command&quot;, &quot;args&quot;:</span><br><span class="line">  &#123;&quot;id&quot;: &quot;repl_Python37_pdb&quot;,</span><br><span class="line">  &quot;file&quot;: &quot;config/Python37/Main.sublime-menu&quot;&#125;</span><br><span class="line">&#125;,</span><br><span class="line">//anaconda环境下运行sublimeREPL_run</span><br><span class="line">&#123;&quot;keys&quot;:[&quot;f5&quot;],</span><br><span class="line">  &quot;caption&quot;: &quot;SublimeREPL: Python37 - RUN current file&quot;,</span><br><span class="line">  &quot;command&quot;: &quot;run_existing_window_command&quot;, &quot;args&quot;:</span><br><span class="line">  &#123;&quot;id&quot;: &quot;repl_Python37_run&quot;,</span><br><span class="line">  &quot;file&quot;: &quot;config/Python37/Main.sublime-menu&quot;&#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p><p>pdb常用命令<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/sublimetext/1544017405048.png" alt="1544017405048"></p><h3 id="快捷键设置"><a href="#快捷键设置" class="headerlink" title="快捷键设置"></a>快捷键设置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">/*光标右侧为括号一类的字符时，回车键移动光标（回车的话用shift</span> <span class="string">enter）*/</span></span><br><span class="line">    <span class="string">&#123;"keys":</span> <span class="string">["enter"],</span> <span class="string">"command"</span><span class="string">:</span> <span class="string">"move"</span><span class="string">,</span> <span class="string">"args"</span><span class="string">:</span> <span class="string">&#123;"by":</span> <span class="string">"characters"</span><span class="string">,</span> <span class="string">"forward"</span><span class="string">:</span> <span class="literal">true</span><span class="string">&#125;,</span> <span class="string">"context"</span><span class="string">:</span></span><br><span class="line">        <span class="string">[</span></span><br><span class="line">            <span class="string">&#123;</span> <span class="string">"key"</span><span class="string">:</span> <span class="string">"following_text"</span><span class="string">,</span> <span class="string">"operator"</span><span class="string">:</span> <span class="string">"regex_contains"</span><span class="string">,</span> <span class="string">"operand"</span><span class="string">:</span> <span class="string">"^[)\\]\\&gt;\\'\\\"\\ %&gt;\\&#125;\\;\\,]"</span><span class="string">,</span> <span class="string">"match_all"</span><span class="string">:</span> <span class="literal">true</span> <span class="string">&#125;,</span></span><br><span class="line">            <span class="string">&#123;</span> <span class="string">"key"</span><span class="string">:</span> <span class="string">"preceding_text"</span><span class="string">,</span> <span class="string">"operator"</span><span class="string">:</span> <span class="string">"not_regex_match"</span><span class="string">,</span> <span class="string">"operand"</span><span class="string">:</span> <span class="string">"^.*\\&#123;$"</span><span class="string">,</span> <span class="string">"match_all"</span><span class="string">:</span> <span class="literal">true</span>  <span class="string">&#125;</span></span><br><span class="line">        <span class="string">]</span></span><br><span class="line">    <span class="string">&#125;,</span></span><br></pre></td></tr></table></figure><h3 id="字体设置"><a href="#字体设置" class="headerlink" title="字体设置"></a>字体设置</h3><p>设置-特定语法（setting-User）写入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;font_face&quot;: &quot;YaHei Consolas Hybrid&quot;,</span><br><span class="line">&quot;font_size&quot;: 13,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      最近重装了电脑上的Python跟Sublime Text，换用了Anaconda环境，把重新折腾Sublime Text的过程记录下来。
    
    </summary>
    
      <category term="Python学习" scheme="https://lixint.github.io/categories/Python%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Python" scheme="https://lixint.github.io/tags/Python/"/>
    
      <category term="Sublime Text" scheme="https://lixint.github.io/tags/Sublime-Text/"/>
    
      <category term="Anaconda" scheme="https://lixint.github.io/tags/Anaconda/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博文图片自动上传腾讯云、SMMS图床并替换博文内图片链接</title>
    <link href="https://lixint.github.io/markdownpic.html"/>
    <id>https://lixint.github.io/markdownpic.html</id>
    <published>2018-11-30T11:06:28.000Z</published>
    <updated>2018-12-22T13:04:02.670Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2018年12月22日21:04</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><blockquote class="blockquote-center"><p>欢迎加入博客搭建交流群（QQ群号60429576）==&gt;<a style="color:#ff0033" href="http://qq.cn.hn/g6Y" title="QQ群号60429576" rel="noopener" target="_blank"><strong>点击加入</strong></a>&lt;==</p></blockquote><h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>　　刚开始折腾Hexo博客的时候，各种修改各种查，发现网上许多教程已经过时了，于是乎决定把自己搭建博客的过程整理成文章。在用Typora写文章的时候发现，文章里插入的图片是个问题，尤其是在用截图的时候，习惯上都是截图直接粘贴进去。但是文章在发布的时候图片的地址还是用的本地路径，导致了图片显示有问题。<br>　　网上查了一下，大都是几种解决方法：插入后修改为相对路径，把图片放到<code>source</code>文件夹里；安装插件，渲染文章的时候自动替换图片链接。这两种都需要把图片放到Github Pages空间里，长此以往占用的内存会越来越大；还有就是使用在线的Markdown编辑器，可以实时把图片上传，这种还不错，但没试过截图插入行不行；再者就是提前把图片上传到图床，插入时就用图床的链接。感觉这几种解决方法都不是很完美，于是用我粗糙的Python技能写了一个脚本，用来在发布文章之前自动把文章中的图片上传到腾讯云存储对象或者SMMS图床，并且把返回来的链接替换掉原来的链接。</p><h3 id="关于脚本"><a href="#关于脚本" class="headerlink" title="关于脚本"></a>关于脚本</h3><p><a href="https://github.com/lixint/img_upload_for_Markdown" rel="noopener" target="_blank">项目Github链接</a><br>工作流程很简单，在运行脚本后脚本会用正则表达式匹配<code>!</code>开头<code>)</code>的链接（所以用Html语法插入的图片不管用），然后提取出里面的本地图片地址，根据运行脚本时候的选择上传到腾讯云存储对象或者SMMS图床。<br>然后根据反馈回来的图片链接再进行替换。</p><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><p>下载<code>uploadparser.py`、`imgupload`、`UploadImg.ini</code>放置在本地博客根目录。如果使用腾讯云cos的话先填好<code>secret_id</code>、<code>secret_key</code>、<code>region</code>、<code>Bucket</code></p><p>腾讯云cos配置需要的各种<code>key</code>的获取方式参看==&gt;<a href="https://cloud.tencent.com/document/product/436/10074" rel="noopener" title="" target="_blank">腾讯云对象存储官方文档</a><br>博客根目录命令行格式<code>python imgupload tx/smms/clearline &lt;filename.md&gt;</code><br>例如：<code>python imgupload tx example.md</code>  上传至腾讯云。</p><h4 id="相关依赖"><a href="#相关依赖" class="headerlink" title="相关依赖"></a>相关依赖</h4><p>脚本使用<code>Python 3</code>编写<br>第三方依赖：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">requests</span><br><span class="line">cos-python-sdk-v5    使用腾讯云上传需要，github地址https://github.com/tencentyun/cos-python-sdk-v5</span><br></pre></td></tr></table></figure></p><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p>1.命令： <code>smms</code>、<code>tx</code>、<code>clearline</code><br>2.文件名需输入后缀<code>.md</code>，非Markdown语法暂不支持。<br>3.上传腾讯对象存储需要自己填写<code>secret_id</code>、<code>secret_key</code>、<code>region</code>、<code>Bucket</code>，上传腾讯云对象存储默认建立一个以文件名命名的文件夹存放图片。</p><h4 id="存在问题"><a href="#存在问题" class="headerlink" title="存在问题"></a>存在问题</h4><p>1.错误处理不明朗，出错时只能慢慢查。<br>2.<del>遇到文章中带<code>js</code>脚本代码的，容易误处理。其他的非图片链接的<code>!</code>开头<code>)</code>结尾的字符串都会误处理。</del>（现已修正）</p><h4 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h4><p><img src="https://i.loli.net/2018/12/15/5c14e4dc68061.gif" alt="picupload"></p>]]></content>
    
    <summary type="html">
    
      为了方便发博文，我自己写了一个Python脚本来上传并替换Markdown博文中图片链接。
    
    </summary>
    
      <category term="Python学习" scheme="https://lixint.github.io/categories/Python%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Hexo" scheme="https://lixint.github.io/tags/Hexo/"/>
    
      <category term="Python" scheme="https://lixint.github.io/tags/Python/"/>
    
      <category term="Markdown" scheme="https://lixint.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客主题安装及Next主题个性化修改</title>
    <link href="https://lixint.github.io/hexo-theme-diy.html"/>
    <id>https://lixint.github.io/hexo-theme-diy.html</id>
    <published>2018-11-29T13:07:49.000Z</published>
    <updated>2019-01-13T04:32:48.713Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2019年01月13日12:32</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><blockquote class="blockquote-center"><p>欢迎加入博客搭建交流群（QQ群号60429576）==&gt;<a style="color:#ff0033" href="http://qq.cn.hn/g6Y" title="QQ群号60429576" rel="noopener" target="_blank"><strong>点击加入</strong></a>&lt;==</p></blockquote><p><strong><a style="color:#ff0033">写在最前面：</a></strong><br>1.在修改时请注意<a style="color:#ff0033"><strong>博客配置文件</strong></a>与<a style="color:#9900ff"><strong>主题配置文件</strong></a>的区别：<a style="color:#ff0033"><strong>博客配置文件</strong></a>是指博客根目录下的<code>_config.yml</code>文件，<br><a style="color:#9900ff"><strong>主题配置文件</strong></a>是指<code>/themes/主题名/</code>路径下的<code>_config.yml</code>文件，例如我使用的主题为next主题，<a style="color:#9900ff"><strong>主题配置文件</strong></a>为<code>/themes/next/_config.yml</code>。<br>2.文内所有命令行命令全部是在<strong>博客根目录打开命令行</strong>下输入的。根目录下目录结构为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure></p><p>默认情况下，命令行输入命令<code>ls</code>显示如下：<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543541234579.png" alt="1543541234579"></p><h2 id="index">目录</h2><table><thead><tr><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="#设置作者头像">设置作者头像</a></td><td><a href="#设置作者昵称与站点描述">设置作者昵称与站点描述</a></td><td><a href="#设置代码高亮主题">设置代码高亮主题</a></td><td><a href="#侧边栏社交链接">侧边栏社交链接</a></td></tr><tr><td><a href="#开启打赏功能">开启打赏功能</a></td><td><a href="#修改打赏字体不闪动">修改打赏字体不闪动</a></td><td><a href="#开启友情链接or侧边栏推荐阅读">开启友情链接or侧边栏推荐阅读</a></td><td><a href="#设置RSS">设置RSS</a></td></tr><tr><td><a href="#设置网站图标">设置网站图标</a></td><td><a href="#实现全站及文章字数统计及阅读时长">实现全站及文章字数统计及阅读时长</a></td><td><a href="#添加顶部加载条">添加顶部加载条</a></td><td><a href="#自定义鼠标样式">自定义鼠标样式</a></td></tr><tr><td><a href="#实现点击出现桃心">实现点击出现桃心</a></td><td><a href="#修改网页底部的小图标">修改网页底部的小图标</a></td><td><a href="#去掉页面底部的强力驱动信息及设置备案信息">去掉页面底部的强力驱动信息及设置备案信息</a></td><td><a href="#添加动态背景">添加动态背景</a></td></tr><tr><td><a href="#增加波浪背景动画">增加波浪背景动画</a></td><td><a href="#forkme">在右上角实现fork me on github按钮</a></td><td><a href="#增加回到顶部按钮及显示当前浏览进度">增加回到顶部按钮及显示当前浏览进度</a></td><td><a href="#修改顶部菜单与下方信息栏的间隙大小">修改顶部菜单与下方信息栏的间隙大小</a></td></tr><tr><td><a href="#网站标题栏背景颜色">网站标题栏背景颜色</a></td><td><a href="#为博客加上萌萌的">为博客加上萌萌的</a></td><td><a href="#添加DaoVoice实现在线联系">添加DaoVoice实现在线联系</a></td><td><a href="#主页文章添加阴影效果">主页文章添加阴影效果</a></td></tr><tr><td><a href="#增加本地搜索功能">增加本地搜索功能</a></td><td><a href="#修改语言">修改语言</a></td><td><a href="#修改菜单及创建分类页">修改菜单及创建分类页</a></td><td><a href="#修改主题风格">修改主题风格</a></td></tr></tbody></table><h2 id="主题选择"><a href="#主题选择" class="headerlink" title="主题选择"></a>主题选择</h2><p>可以到<a href="https://hexo.io/themes/" rel="noopener" title="Nexo官方主题页" target="_blank">Nexo官方主题页</a>选择自己喜欢的主题，每个主题的使用方法略有不同，所以如果你是跟我一样的小白，建议使用流行热门的主题，这样出现问题网上基本都可以搜到解决方法。<br>推荐Next主题，我的博客使用的就是Next的主题</p><h2 id="Next主题修改"><a href="#Next主题修改" class="headerlink" title="Next主题修改"></a>Next主题修改</h2><p><span id="主题安装"></span></p><h3 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h3><p><a href="https://theme-next.iissnan.com/getting-started.html" rel="noopener" title="Next主题文档页面" target="_blank">Next主题文档页面</a><br>目前Next主题的项目分成了两个项目，一个是5.1.4版本以下的，一个是一直更新的，现在已经更新到了6.5，建议直接用最新的，最新版本的主题已经把很多常用的功能集成了，用起来很方便。本篇文章是基于Next 6.5进行的修改与展示。<br><a href="https://github.com/iissnan/hexo-theme-next" rel="noopener" title="Next主题项目页面(v5.1.4)" target="_blank">Next主题项目页面(v5.1.4)</a><br><a href="https://github.com/theme-next/hexo-theme-next" rel="noopener" title="v6.5页面" target="_blank">v6.5版本页面</a><br><strong>方法1</strong>：项目页面点击releases，找到最新版本的主题zip包并下载，解压放到<code>博客根目录/themes</code>重命名文件夹为next，两版本通用。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181128193847.png" alt="blog20181128193847"></p><p><strong>方法2</strong>：博客<strong>根目录</strong>打开命令行，用5.1版本输入命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p><p>6.5版本输入命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181128194258.png" alt="blog20181128194258"><br>安装完成后，打开<a style="color:#ff0033"><strong>博客配置文件</strong></a>修改最上方的<code>theme</code>项为<code>next</code>。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543498259558.png" alt="1543498259558"></p><p><a style="color:#9900ff"><strong>主题配置文件</strong></a>是<code>根目录/themes/next</code>目录下的<code>_config.yml</code>文件。<br>修改完成后命令行输入<code>hexo s</code>本地运行一下看是否生效。</p><h3 id="主题修改"><a href="#主题修改" class="headerlink" title="主题修改"></a>主题修改</h3><p><span id="修改语言"></span></p><h4 id="修改语言"><a href="#修改语言" class="headerlink" title="修改语言"></a>修改语言</h4><p>修改<a style="color:#ff0033"><strong>博客配置文件</strong></a>下的<code>language</code>项为<code>zh-CN</code><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181128200611.png" alt="blog20181128200611"></p><p>这里要<strong>注意</strong>一下，看一下主题文件夹内的<code>languange</code>文件夹中中文的配置文件叫什么名字，Next主题有些版本的叫<code>zh-Hans</code>那这里就填<code>zh-Hans</code>，Next最新版本中用的是<code>zh-CN</code>，故这里填写<code>zh-CN</code><br><span id="修改菜单及创建分类页"></span></p><h4 id="修改菜单及创建分类页"><a href="#修改菜单及创建分类页" class="headerlink" title="修改菜单及创建分类页"></a>修改菜单及创建分类页</h4><p>修改<a style="color:#9900ff"><strong>主题配置文件</strong></a>下的<code>menu</code>项，按需要打开菜单。例如我需要把<code>标签</code>页面打开，就把<code>tags</code>项前面的<code>#</code>去掉就行了。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543498503630.png" alt="1543498503630"></p><p><code>Hexo s</code>运行一下可以看到菜单多了一个标签项。但是此时还不行，只是有了入口。点击标签菜单，会显示：<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543498782215.png" alt="1543498782215"></p><p>因为只有了入口，但还没有标签页面，需要在命令行输入如下命令：<code>hexo new page tags</code>新建出标签页。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543498826765.png" alt="1543498826765"></p><p>同样的道理，开启分类页的时候要输入<code>hexo new page categories</code>来新建出分类页。<br><span id="修改主题风格"></span></p><h4 id="修改主题风格"><a href="#修改主题风格" class="headerlink" title="修改主题风格"></a>修改主题风格</h4><p>Next自带四种主题风格，可以在<a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索Scheme项，将需要的风格前的#去掉，注意只能开启一个风格。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181128201721.png" alt="blog20181128201721"></p><p><span id="设置作者头像"></span></p><h4 id="设置作者头像"><a href="#设置作者头像" class="headerlink" title="设置作者头像"></a>设置作者头像</h4><p>编辑<a style="color:#9900ff"><strong>主题配置文件</strong></a>，搜索修改字段 <code>avatar</code>， 值设置成头像的链接地址。可以设置成在线的图片地址。也可以把图片放在本地。<br><strong>方法1：</strong><br>在线图片设置：现在有一张网络图片， 使用百度上随便搜的。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/avatar.jpg" alt="avatar"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543499047117.png" alt="1543499047117"></p><p><strong>方法2：</strong><br>本地设置：放置在<code>source/images</code>目录下，设置为<code>url: /images/avatar.jpg</code><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543499063167.png" alt="1543499063167"></p><p>这个<code>rounded</code>项可以设置头像为圆形，设置为<code>ture</code>后会自动根据头像的尺寸将头像变化为圆形或者椭圆，头像图片为正方形的话则为圆形。长方形的话长宽相差越大，椭圆越明显。<br>设置<code>opacity</code>的值控制头像的透明度，值为0 - 1。<br><code>rotated</code>项为头像旋转，设置为<code>true</code>，则鼠标指到头像时头像会旋转。<br><span id="设置作者昵称与站点描述"></span></p><h4 id="设置作者昵称与站点描述"><a href="#设置作者昵称与站点描述" class="headerlink" title="设置作者昵称与站点描述"></a>设置作者昵称与站点描述</h4><p>这个比较简单。设置<a style="color:#ff0033"><strong>博客配置文件</strong></a>中的<code>author</code>为昵称，<code>description</code>为描述。<br>同理，<code>subtitle</code>为副标题，<code>keywords</code>为关键词，<code>timezone</code>为时区，可以按需求填写。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543499164417.png" alt="1543499164417"></p><p><span id="设置代码高亮主题"></span></p><h4 id="设置代码高亮主题"><a href="#设置代码高亮主题" class="headerlink" title="设置代码高亮主题"></a>设置代码高亮主题</h4><p>NexT 使用 <a href="https://github.com/chriskempson/tomorrow-theme" rel="noopener" title="Tomorrow Theme" target="_blank">Tomorrow Theme</a>作为代码高亮，共有5款主题供你选择。 NexT 默认使用的是 白色的 <code>normal</code> 主题，可选的值有 <code>normal</code>，<code>night</code>， <code>night blue</code>， <code>night bright</code>， <code>night eighties</code><br>更改 <a style="color:#9900ff"><strong>主题配置文件</strong></a>中的<code>highlight_theme</code> 字段，将其值设定成你所喜爱的高亮主题即可。<br><span id="侧边栏社交链接"></span></p><h4 id="侧边栏社交链接"><a href="#侧边栏社交链接" class="headerlink" title="侧边栏社交链接"></a>侧边栏社交链接</h4><p>侧栏社交链接的修改包含两个部分， 配置在 <a style="color:#9900ff"><strong>主题配置文件</strong></a> 中。<code>social</code>字段为连接，格式为<code>显示文本: 链接地址 || Font Awesome图标名称</code><br>例如：<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181128205617.png" alt="blog20181128205617"></p><p><code>图标名称</code> 是 Font Awesome 图标的名字（不必带 <code>fa-</code> 前缀）。<code>enable</code> 选项用于控制是否显示图标，你可以设置成 <code>false</code> 来去掉图标。例如: <code>百度: https://baidu.com || firefox</code><br>Font Awesome图标可以到<a href="www.fontawesome.com.cn" rel="external nofollow" title="Font Awesome" style="color:#ff0033">Font Awesome</a>查看<br><span id="开启打赏功能"></span></p><h4 id="开启打赏功能"><a href="#开启打赏功能" class="headerlink" title="开启打赏功能"></a>开启打赏功能</h4><p>主题自带支付宝跟微信及比特币打赏功能，只需要<a style="color:#9900ff"><strong>主题配置文件</strong></a> 中填入 <code>微信</code>和 <code>支付宝</code> 收款二维码图片地址即可开启该功能。<br>搜索<code>reward字段</code>，将<code>wechatpay</code>及<code>alipay</code>字段前面的<code>#</code>去掉即可。在<code>source</code>文件夹中放置支付宝跟微信收款码并修改文件名字即可。<code>reward_comment</code>自带为打赏按钮上方的文字，不需要的话可以在前面加#注释掉。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543499587192.png" alt="1543499587192"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543499663537.png" alt="1543499663537"></p><p><span id="修改打赏字体不闪动"></span></p><h5 id="修改打赏字体不闪动"><a href="#修改打赏字体不闪动" class="headerlink" title="修改打赏字体不闪动"></a>修改打赏字体不闪动</h5><p>鼠标一指就疯狂抖动。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/doudong.gif" alt="doudong"></p><p>修改文件<code>next/source/css/_common/components/post/post-reward.styl</code>，然后注释其中的函数<code>#QR &gt; div:hover p</code>函数即可。css文件注释用/<em>   和  </em>/ 包裹代码即可。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181128211016.png" alt="blog20181128211016"></p><p>这个<code>post-reward.styl</code>文件是跟按钮及图片相关的，如果需要修改关于打赏的其他属性，例如按钮大小，样式，图片大小等，都可以修改<code>post-reward.styl</code>文件实现。我也不太懂。在这就不展开讲了。有兴趣的可以网上搜css的语法自己尝试改。<br><span id="开启友情链接or侧边栏推荐阅读"></span></p><h4 id="开启友情链接-or-侧边栏推荐阅读"><a href="#开启友情链接-or-侧边栏推荐阅读" class="headerlink" title="开启友情链接 or 侧边栏推荐阅读"></a>开启友情链接 or 侧边栏推荐阅读</h4><p><a style="color:#9900ff"><strong>主题配置文件</strong></a> 中搜索<code>links_title</code>字段，修改<code>links_icon</code>、<code>links_title</code>、<code>links_layout</code>、<code>links</code>四个字段的内容实现自定义风格。<br><code>link_icon</code>是title前面的图标，用法跟之前的社交链接的图标用法是一样的， 用Font Awesome图标。<br><code>links_title</code>为标题，如果是作为友情链接使用，可以设置为<br><code>links_title: 友情链接</code><br>在<code>links</code>字段设置友情链接名字及链接<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">links:</span><br><span class="line">  友链1: http://example.com/</span><br><span class="line">  友链2: http://example.com/</span><br></pre></td></tr></table></figure></p><p>例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">links:</span><br><span class="line">  谷歌: https://google.com/</span><br><span class="line">  百度: http://baidu.com/</span><br></pre></td></tr></table></figure></p><p><code>links_layout</code>为各个友情链接的布局，默认是block，也可以用<code>#</code>注释掉这一行用下一行的<code>inline</code>布局。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543500026413.png" alt="1543500026413"></p><p>这个模块的自由度比较高，可以用来放置友情链接，也可以放置推荐阅读。<br><span id="设置RSS"></span></p><h4 id="设置-RSS"><a href="#设置-RSS" class="headerlink" title="设置 RSS"></a>设置 RSS</h4><p>NexT 中 RSS 有三个设置选项，满足特定的使用场景。 更改<a style="color:#9900ff"><strong>主题配置文件</strong></a>，设定 <code>rss</code> 字段的值：<br><code>false</code>：禁用 RSS，不在页面上显示 RSS 连接。<br>留空：默认就是留空的，使用 Hexo 生成的 Feed 链接。 你可以需要先安装 <a href="https://github.com/hexojs/hexo-generator-feed" rel="noopener" title="hexo-generator-feed" target="_blank">hexo-generator-feed</a>  插件。<br>安装方法：根目录下命令行输入<code>npm install hexo-generator-feed --save</code><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181128213214.png" alt="blog20181128213214"></p><p>具体的链接地址：适用于已经烧制过<code>Feed</code>的情形。<br>建议直接使用插件，比较省事。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543500185784.png" alt="1543500185784"> </p><p><span id="设置网站图标"></span></p><h4 id="设置网站图标"><a href="#设置网站图标" class="headerlink" title="设置网站图标"></a>设置网站图标</h4><p>在<a href="http://www.easyicon.net" rel="noopener" title="EasyIcon" target="_blank">EasyIcon</a>中分别找一张（16 <em> 16与32 </em> 32）的<code>ico</code>图标,或者去别的网站下载或者制作，并将图标名称改为<code>favicon16.ico</code>与<code>favicon32.ico</code>，然后把图标放在<code>/themes/next/source/images</code>或者放在根目录的<code>/source/images</code>文件夹里。<br>在<a style="color:#9900ff"><strong>主题配置文件</strong></a>内搜索<code>favicon</code>字段，把 <code>small</code>、<code>medium</code>字段的地址修改为<code>/images/favicon16.ico</code> 与 <code>/images/favicon32.ico</code><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543500338504.png" alt="1543500338504"></p><p><span id="实现全站及文章字数统计及阅读时长"></span></p><h4 id="实现全站及文章字数统计及阅读时长"><a href="#实现全站及文章字数统计及阅读时长" class="headerlink" title="实现全站及文章字数统计及阅读时长"></a>实现全站及文章字数统计及阅读时长</h4><p>根目录命令运行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure></p><p><a style="color:#ff0033"><strong>博客配置文件</strong></a>底部添加如下内容，保存。<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line"><span class="attr">  symbols:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  time:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_symbols:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_time:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543500434372.png" alt="1543500434372"></p><p>重新<code>hexo s</code>看一下，文章页面已经有字数跟阅读时长的统计了。网站底部也显示了网站总字数跟总阅读时长。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543500395667.png" alt="1543500395667"></p><p><span id="添加顶部加载条"></span></p><h4 id="添加顶部加载条"><a href="#添加顶部加载条" class="headerlink" title="添加顶部加载条"></a>添加顶部加载条</h4><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/jiazaitiao.gif" alt="jiazaitiao"></p><p>最新版本的Next主题是内置了加载条功能的。<br>根目录打开命令行，输入如下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-pace themes/next/source/lib/pace</span><br></pre></td></tr></table></figure></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129162054.png" alt="blog20181129162054"></p><p>然后<a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索<code>pace</code>字段，修改<code>pace: false</code>为<code>pace: true</code>即可开启加载条功能，修改下方的<code>pace-theme</code>字段还可以修改加载条的样式。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543500576120.png" alt="1543500576120"></p><p><span id="自定义鼠标样式"></span></p><h4 id="自定义鼠标样式"><a href="#自定义鼠标样式" class="headerlink" title="自定义鼠标样式"></a>自定义鼠标样式</h4><p>打开<code>themes/next/source/css/_custom/custom.styl</code>,在里面写下如下代码<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 鼠标样式</span><br><span class="line">  * &#123;</span><br><span class="line">      <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">"http://om8u46rmb.bkt.clouddn.com/sword2.ico"</span>),auto<span class="meta">!important</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">      <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">"http://om8u46rmb.bkt.clouddn.com/sword1.ico"</span>),auto<span class="meta">!important</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>在<a href="http://www.easyicon.net" rel="noopener" title="EasyIcon" target="_blank">EasyIcon</a>中找一张16 * 16的<code>ico</code>图，放在<code>/source/images/</code>中，修改上述代码中的链接为<code>/images/xxx.ico</code>，如果不放在本地的话，可以把图片放在图床，直接替换链接即可。<br>第一行的链接是默认状态下的鼠标样式，第二行的是鼠标按下时的样式。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/mouseico.gif" alt="mouseico"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543500770005.png" alt="1543500770005"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543500900414.png" alt="1543500900414"></p><p><span id="实现点击出现桃心"></span></p><h4 id="实现点击出现桃心-以及-爆炸效果"><a href="#实现点击出现桃心-以及-爆炸效果" class="headerlink" title="实现点击出现桃心 以及 爆炸效果"></a>实现点击出现桃心 以及 爆炸效果</h4><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/love.gif" alt="love"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/bom.gif" alt="bom"></p><p>1.在<code>/themes/next/source/js/src</code>下新建文件<code>love.js</code>并填入如下代码：</p><p>文件下载链接：</p><span class="exturl" data-url="aHR0cHM6Ly91MTkxNDQzODYuY3RmaWxlLmNvbS9mcy8xOTE0NDM4Ni0zMjg1NzM0OTI=" title="点击下载"><a style="color:#ff0033">点击下载-love.js</a><i class="fa fa-external-link"></i></span><span class="exturl" data-url="aHR0cHM6Ly91MTkxNDQzODYuY3RmaWxlLmNvbS9mcy8xOTE0NDM4Ni0zMjg1NzM0OTE=" title="点击下载"><a style="color:#ff0033">点击下载-fireworks.js</a><i class="fa fa-external-link"></i></span><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>),o(),r()&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">"left:"</span>+d[e].x+<span class="string">"px;top:"</span>+d[e].y+<span class="string">"px;opacity:"</span>+d[e].alpha+<span class="string">";transform:scale("</span>+d[e].scale+<span class="string">","</span>+d[e].scale+<span class="string">") rotate(45deg);background:"</span>+d[e].color+<span class="string">";z-index:99999"</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="string">"function"</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"div"</span>);a.className=<span class="string">"heart"</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX<span class="number">-5</span>,<span class="attr">y</span>:e.clientY<span class="number">-5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"style"</span>);a.type=<span class="string">"text/css"</span>;<span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">"rgb("</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">")"</span>&#125;<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;setTimeout(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure><p>建一个叫<code>fireworks.js</code>的文件并写入如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;use strict&quot;;function updateCoords(e)&#123;pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;function setParticuleDirection(e)&#123;var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;function createParticule(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;function createCircle(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=&quot;#F00&quot;,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function()&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1&#125;,a&#125;function renderParticule(e)&#123;for(var t=0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;function animateParticules(e,t)&#123;for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:function(e)&#123;return e.endPos.x&#125;,y:function(e)&#123;return e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:&quot;linear&quot;,duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule,offset:0&#125;)&#125;function debounce(e,t)&#123;var a;return function()&#123;var n=this,i=arguments;clearTimeout(a),a=setTimeout(function()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl=document.querySelector(&quot;.fireworks&quot;);if(canvasEl)&#123;var ctx=canvasEl.getContext(&quot;2d&quot;),numberOfParticules=30,pointerX=0,pointerY=0,tap=&quot;mousedown&quot;,colors=[&quot;#FF1461&quot;,&quot;#18FF92&quot;,&quot;#5A87FF&quot;,&quot;#FBF38C&quot;],setCanvasSize=debounce(function()&#123;canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+&quot;px&quot;,canvasEl.style.height=window.innerHeight+&quot;px&quot;,canvasEl.getContext(&quot;2d&quot;).scale(2,2)&#125;,500),render=anime(&#123;duration:1/0,update:function()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,function(e)&#123;&quot;sidebar&quot;!==e.target.id&amp;&amp;&quot;toggle-sidebar&quot;!==e.target.id&amp;&amp;&quot;A&quot;!==e.target.nodeName&amp;&amp;&quot;IMG&quot;!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener(&quot;resize&quot;,setCanvasSize,!1)&#125;&quot;use strict&quot;;function updateCoords(e)&#123;pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;function setParticuleDirection(e)&#123;var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;function createParticule(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;function createCircle(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=&quot;#F00&quot;,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function()&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1&#125;,a&#125;function renderParticule(e)&#123;for(var t=0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;function animateParticules(e,t)&#123;for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:function(e)&#123;return e.endPos.x&#125;,y:function(e)&#123;return e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:&quot;linear&quot;,duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule,offset:0&#125;)&#125;function debounce(e,t)&#123;var a;return function()&#123;var n=this,i=arguments;clearTimeout(a),a=setTimeout(function()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl=document.querySelector(&quot;.fireworks&quot;);if(canvasEl)&#123;var ctx=canvasEl.getContext(&quot;2d&quot;),numberOfParticules=30,pointerX=0,pointerY=0,tap=&quot;mousedown&quot;,colors=[&quot;#FF1461&quot;,&quot;#18FF92&quot;,&quot;#5A87FF&quot;,&quot;#FBF38C&quot;],setCanvasSize=debounce(function()&#123;canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+&quot;px&quot;,canvasEl.style.height=window.innerHeight+&quot;px&quot;,canvasEl.getContext(&quot;2d&quot;).scale(2,2)&#125;,500),render=anime(&#123;duration:1/0,update:function()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,function(e)&#123;&quot;sidebar&quot;!==e.target.id&amp;&amp;&quot;toggle-sidebar&quot;!==e.target.id&amp;&amp;&quot;A&quot;!==e.target.nodeName&amp;&amp;&quot;IMG&quot;!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener(&quot;resize&quot;,setCanvasSize,!1)&#125;;</span><br></pre></td></tr></table></figure></p><p>然后打开<code>themes/next/layout/_layout.swig</code>,在<code>&lt;/body&gt;</code>上面写下如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.fireworks &amp;&amp; not theme.love %&#125;</span><br><span class="line"> &lt;canvas class=&quot;fireworks&quot; style=&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;/canvas&gt; </span><br><span class="line"> &lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;&gt;&lt;/script&gt; </span><br><span class="line"> &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/fireworks.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% if theme.love &amp;&amp; not theme.fireworks %&#125;</span><br><span class="line">  &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129205023.png" alt="blog20181129205023"></p><p>最后在<a style="color:#9900ff"><strong>主题配置文件</strong></a>最下方加入如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Fireworks and love</span><br><span class="line">fireworks: true</span><br><span class="line">love: false</span><br></pre></td></tr></table></figure></p><p><code>fireworks</code>是爆炸效果，<code>love</code>是心形效果。两个不能同时开。</p><p><span id="修改网页底部的小图标"></span></p><h4 id="修改网页底部的小图标"><a href="#修改网页底部的小图标" class="headerlink" title="修改网页底部的小图标"></a>修改网页底部的小图标</h4><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129170824.png" alt="blog20181129170824"></p><p><a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索<code>footer</code>字段，修改下方的<code>icon</code>字段下的<code>name</code>字段。<code>name</code>字段后的名字是 Font Awesome 图标的名字（不必带 <code>fa-</code> 前缀）。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129171638.png" alt="blog20181129171638"></p><p><code>animated</code>自动为闪动开关，设置为<code>true</code>后图标会闪动。<br>以及可以设置图标颜色，<code>color</code>处填入16进制颜色代码即可。注意保留原来的双引号。<br><span id="去掉页面底部的强力驱动信息及设置备案信息"></span></p><h4 id="去掉页面底部的强力驱动信息及设置备案信息"><a href="#去掉页面底部的强力驱动信息及设置备案信息" class="headerlink" title="去掉页面底部的强力驱动信息及设置备案信息"></a>去掉页面底部的强力驱动信息及设置备案信息</h4><p><a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索<code>copyright</code>字段，修改<code>powered</code>下的<code>enable</code>字段的<code>true</code>为<code>false</code>即可去掉强力驱动部分的内容。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129172048.png" alt="blog20181129172048"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129172144.png" alt="blog20181129172144"></p><p>同样的<code>theme</code>下的<code>enable</code>设置为<code>false</code>的话可以去掉页面底部的主题信息。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129172232.png" alt="blog20181129172232"></p><p><code>enable</code>设置为<code>true</code>，<code>version</code>设置为<code>false</code>的话，则不显示版本号。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129172311.png" alt="blog20181129172311"></p><p>如果博客有备案的话，下方<code>beian</code>字段设置为<code>true</code>，<code>icp</code>后填写备案号。<br><span id="添加动态背景"></span></p><h4 id="添加动态背景"><a href="#添加动态背景" class="headerlink" title="添加动态背景"></a>添加动态背景</h4><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/activebackground.gif" alt="activebackground"></p><p>根目录打开命令行，输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-canvas-nest themes/next/source/lib/canvas-nest</span><br></pre></td></tr></table></figure></p><p><a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索<code>canvas-nest</code>字段，<code>enable</code>项设置为<code>true</code>。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129173536.png" alt="blog20181129173536"></p><p>其他配置项说明：</p><ul><li><code>color</code> ：线条颜色, 默认: <code>&#39;0,0,0&#39;</code>；三个数字分别为(R,G,B)</li><li><code>opacity</code>: 线条透明度（0~1）, 默认: <code>0.5</code></li><li><code>count</code>: 线条的总数量, 默认: <code>150</code></li><li><code>zIndex:</code> 背景的z-index属性，css属性用于控制所在层的位置, 默认: <code>-1</code></li><li><code>onmobile</code>：是否在手机端显示。<br><span id="增加波浪背景动画"></span></li></ul><h4 id="增加波浪背景动画"><a href="#增加波浪背景动画" class="headerlink" title="增加波浪背景动画"></a>增加波浪背景动画</h4><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/3d.gif" alt="3d"></p><p>根目录打开命令行，输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-three themes/next/source/lib/three</span><br></pre></td></tr></table></figure></p><p><a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索<code>three_waves</code>字段，设置为<code>true</code><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129183551.png" alt="blog20181129183551"></p><p><code>three_waves</code>、<code>canvas_lines</code>、<code>canvas_sphere</code>三个的效果各不相同，可以自己尝试一下选一个喜欢的。<br><span id="forkme"></span></p><h4 id="在右上角实现fork-me-on-github按钮"><a href="#在右上角实现fork-me-on-github按钮" class="headerlink" title="在右上角实现fork me on github按钮"></a>在右上角实现fork me on github按钮</h4><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129193000.png" alt="blog20181129193000"><br>最新的Next主题已经内置了增加右上角的<code>Fork me on github</code>按钮功能，只需要在<a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索<code>github_banner</code>字段，去掉前面的#，把<code>||</code>前面的github链接替换成自己的即可。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129192947.png" alt="blog20181129192947"></p><p><code>||</code>后的参数为按钮的title，为鼠标指在按钮上时显示的文本。<br><span id="增加回到顶部按钮及显示当前浏览进度"></span></p><h4 id="增加回到顶部按钮及显示当前浏览进度"><a href="#增加回到顶部按钮及显示当前浏览进度" class="headerlink" title="增加回到顶部按钮及显示当前浏览进度"></a>增加回到顶部按钮及显示当前浏览进度</h4><p><a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索<code>b2t</code>字段，将<code>b2t</code>字段的<code>false</code>修改为<code>true</code>即可，（注意此功能只能用于Pisces和Gemini主题）。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129193327.png" alt="blog20181129193327"></p><p>将下方的<code>scrollpercent</code>字段设置为<code>true</code>即可实现当前浏览进度的显示。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129193749.png" alt="blog20181129193749"></p><p><span id="修改顶部菜单与下方信息栏的间隙大小"></span></p><h4 id="修改顶部菜单与下方信息栏的间隙大小"><a href="#修改顶部菜单与下方信息栏的间隙大小" class="headerlink" title="修改顶部菜单与下方信息栏的间隙大小"></a>修改顶部菜单与下方信息栏的间隙大小</h4><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543501516957.png" alt="1543501516957"></p><p><a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索<code>offset</code>字段，将<code>offset</code>的像素数大小设置为需要的值，默认为12。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129194053.png" alt="blog20181129194053"></p><p><span id="网站标题栏背景颜色"></span></p><h4 id="网站标题栏背景颜色"><a href="#网站标题栏背景颜色" class="headerlink" title="网站标题栏背景颜色"></a>网站标题栏背景颜色</h4><p>打开 <code>themes/next/source/css/_custom/custom.styl</code> ,在里面写下如下代码：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 网站标题栏背景颜色</span><br><span class="line"><span class="selector-class">.site-meta</span> &#123;</span><br><span class="line">  background: #FF0033; //修改为自己喜欢的颜色</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>颜色的值可以自行网上搜索16进制颜色进行修改。<br><span id="为博客加上萌萌的"></span></p><h4 id="为博客加上萌萌的"><a href="#为博客加上萌萌的" class="headerlink" title="为博客加上萌萌的"></a>为博客加上萌萌的</h4><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/chongwu.gif" alt="chongwu"></p><p>首先安装插件，根目录命令行输入<code>npm install --save hexo-helper-live2d</code><br><a style="color:#9900ff"><strong>主题配置文件</strong></a>或者<a style="color:#9900ff"><strong>博客配置文件</strong></a>最下方添加如下代码：</p><p>注意：实测了一下在<a style="color:#9900ff"><strong>主题配置文件</strong></a>下用比较好使，但是官方文档中说明在<a style="color:#9900ff"><strong>博客配置文件</strong></a>中也可以，可能我配置有问题。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  scriptFrom:</span> <span class="string">local</span></span><br><span class="line"><span class="attr">  pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line"><span class="attr">  pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line"><span class="attr">  pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line"><span class="attr">  tagMode:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  debug:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  model:</span></span><br><span class="line"><span class="attr">    use:</span> <span class="string">live2d-widget-model-&lt;模型名&gt;</span>   </span><br><span class="line"><span class="attr">  display:</span></span><br><span class="line"><span class="attr">    position:</span> <span class="string">right</span></span><br><span class="line"><span class="attr">    width:</span> <span class="number">150</span></span><br><span class="line"><span class="attr">    height:</span> <span class="number">300</span></span><br><span class="line"><span class="attr">  mobile:</span></span><br><span class="line"><span class="attr">    show:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h5 id="修改模型"><a href="#修改模型" class="headerlink" title="修改模型"></a>修改模型</h5><p>参考<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3hpYXpleXUvbGl2ZTJkLXdpZGdldC1tb2RlbHM=" title="live2d-widget-models"><a>live2d-widget-models</a><i class="fa fa-external-link"></i></span>目前可用的模型如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">live2d-widget-model-chitose</span><br><span class="line">live2d-widget-model-epsilon2_1</span><br><span class="line">live2d-widget-model-gf</span><br><span class="line">live2d-widget-model-haru/01 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haru/02 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haruto</span><br><span class="line">live2d-widget-model-hibiki</span><br><span class="line">live2d-widget-model-hijiki</span><br><span class="line">live2d-widget-model-izumi</span><br><span class="line">live2d-widget-model-koharu</span><br><span class="line">live2d-widget-model-miku</span><br><span class="line">live2d-widget-model-ni-j</span><br><span class="line">live2d-widget-model-nico</span><br><span class="line">live2d-widget-model-nietzsche</span><br><span class="line">live2d-widget-model-nipsilon</span><br><span class="line">live2d-widget-model-nito</span><br><span class="line">live2d-widget-model-shizuku</span><br><span class="line">live2d-widget-model-tororo</span><br><span class="line">live2d-widget-model-tsumiki</span><br><span class="line">live2d-widget-model-unitychan</span><br><span class="line">live2d-widget-model-wanko</span><br><span class="line">live2d-widget-model-z16</span><br></pre></td></tr></table></figure><p>例如，我现在想修改模型为<code>live2d-widget-model-z16</code></p><p><strong>第一步，安装模型</strong></p><p>命令行输入<code>npm install --save live2d-widget-model-z16</code>等待安装完成。</p><p><strong>第二步，修改配置</strong></p><p>在先前加入的配置内容中修改<code>model</code>下的<code>use</code>项目：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  scriptFrom:</span> <span class="string">local</span></span><br><span class="line"><span class="attr">  pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line"><span class="attr">  pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line"><span class="attr">  pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line"><span class="attr">  tagMode:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  debug:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  model:</span></span><br><span class="line"><span class="attr">    use:</span> <span class="string">live2d-widget-model-z16</span>   <span class="comment">#改动处。</span></span><br><span class="line"><span class="attr">  display:</span></span><br><span class="line"><span class="attr">    position:</span> <span class="string">right</span>  <span class="comment">#位置，默认右侧</span></span><br><span class="line"><span class="attr">    width:</span> <span class="number">150</span><span class="comment">#宽度</span></span><br><span class="line"><span class="attr">    height:</span> <span class="number">300</span><span class="comment">#高度</span></span><br><span class="line"><span class="attr">  mobile:</span></span><br><span class="line"><span class="attr">    show:</span> <span class="literal">true</span>  <span class="comment">#是否在移动端显示</span></span><br></pre></td></tr></table></figure><p>保存，命令行输入<code>hexo clean &amp;&amp; hexo s</code>看一下，此时首页显示的模型已经变了。</p><p>注意，修改后需要先<code>hexo clean</code>一下清除静态文件，不然可能会出现修改后不生效的情况。</p><p>还可以修改几个自定义参数来修改模型显示的大小位置。</p><p>更多设置可以查看<a href="https://github.com/EYHN/hexo-helper-live2d" rel="noopener" title="官方文档" target="_blank">官方文档</a><br><span id="添加DaoVoice实现在线联系"></span></p><h4 id="添加DaoVoice-实现在线联系"><a href="#添加DaoVoice-实现在线联系" class="headerlink" title="添加DaoVoice 实现在线联系"></a>添加DaoVoice 实现在线联系</h4><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/dovoice.gif" alt="dovoice"></p><p>本功能可以实现在线留言，作者会收到邮件，如果绑定了微信，作者还会收到微信通知。<br>首先到<a href="http://dashboard.daovoice.io/get-started?invite_code=e25c1e73" rel="noopener" title="DaoVoice" target="_blank">DaoVoice</a>注册一个Daovioce账号。<br>注册完成后会进到DaoCloud，重新访问连接即可。进到Daovoice面板，点击左侧边栏的<code>应用设置-- 安装到网站</code>。在下方的代码中会看到<code>app_id: &quot;xxxx&quot;</code>字样。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129200739.png" alt="blog20181129200739"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129200805.png" alt="blog20181129200805"></p><p>打开 <code>themes/next/layout/_partials/head/head.swig</code> 文件中最下方加入如下代码：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.daovoice %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">  (<span class="function"><span class="keyword">function</span>(<span class="params">i,s,o,g,r,a,m</span>)</span>&#123;i[<span class="string">"DaoVoiceObject"</span>]=r;i[r]=i[r]||<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;(i[r].q=i[r].q||[]).push(<span class="built_in">arguments</span>)&#125;,i[r].l=<span class="number">1</span>*<span class="keyword">new</span> <span class="built_in">Date</span>();a=s.createElement(o),m=s.getElementsByTagName(o)[<span class="number">0</span>];a.async=<span class="number">1</span>;a.src=g;a.charset=<span class="string">"utf-8"</span>;m.parentNode.insertBefore(a,m)&#125;)(<span class="built_in">window</span>,<span class="built_in">document</span>,<span class="string">"script"</span>,(<span class="string">'https:'</span> == <span class="built_in">document</span>.location.protocol ? <span class="string">'https:'</span> : <span class="string">'http:'</span>) + <span class="string">"//widget.daovoice.io/widget/0f81ff2f.js"</span>,<span class="string">"daovoice"</span>)</span></span><br><span class="line"><span class="javascript">  daovoice(<span class="string">'init'</span>, &#123;</span></span><br><span class="line"><span class="javascript">      app_id: <span class="string">"&#123;&#123;theme.daovoice_app_id&#125;&#125;"</span></span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="javascript">  daovoice(<span class="string">'update'</span>);</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p><p>在<a style="color:#9900ff"><strong>主题配置文件</strong></a> <code>_config.yml</code>，添加如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># DaoVoice </span><br><span class="line">daovoice: true</span><br><span class="line">daovoice_app_id: 这里输入前面获取的app_id</span><br></pre></td></tr></table></figure></p><p>回到Daovoice控制面板，点击聊天设置可以对聊天图标的颜色及位置进行设置。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129201302.png" alt="blog20181129201302"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129202642.png" alt="blog20181129202642"></p><p>最后到右上角选择管理员，微信绑定，可以绑定你的微信号。这样收到消息后可以通过小程序进行回复。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129202629.png" alt="blog20181129202629"></p><p><span id="主页文章添加阴影效果"></span></p><h4 id="主页文章添加阴影效果"><a href="#主页文章添加阴影效果" class="headerlink" title="主页文章添加阴影效果"></a>主页文章添加阴影效果</h4><p>打开<code>\themes\next\source\css\_custom\custom.styl</code>,加入如下代码：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 主页文章添加阴影效果</span><br><span class="line"> <span class="selector-class">.post</span> &#123;</span><br><span class="line">   <span class="attribute">margin-top</span>: <span class="number">60px</span>;</span><br><span class="line">   <span class="attribute">margin-bottom</span>: <span class="number">60px</span>;</span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">25px</span>;</span><br><span class="line">   <span class="attribute">-webkit-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(202, 203, 203, .5);</span><br><span class="line">   <span class="attribute">-moz-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(202, 203, 204, .5);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>可以自行修改代码来修改阴影效果。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129205545.png" alt="blog20181129205545"></p><p><span id="增加本地搜索功能"></span></p><h4 id="增加本地搜索功能"><a href="#增加本地搜索功能" class="headerlink" title="增加本地搜索功能"></a>增加本地搜索功能</h4><p>首先安装插件，根目录命令行输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543541556072.png" alt="1543541556072"></p><p>编辑<a style="color:#ff0033"><strong>博客配置文件</strong></a>，新增以下内容到任意位置：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">search.xml</span></span><br><span class="line"><span class="attr">  field:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">  format:</span> <span class="string">html</span></span><br><span class="line"><span class="attr">  limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543541568512.png" alt="1543541568512"></p><p><a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索<code>local_search</code>字段，设置<code>enable</code>为<code>true</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543543765215.png" alt="1543543765215"></p><p>配置完成后保存，<code>hexo g</code>、<code>hexo s</code>查看。</p><h2 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h2>]]></content>
    
    <summary type="html">
    
      博客搭建以及几十种主题修改方法（基于Next主题）
    
    </summary>
    
      <category term="博客搭建" scheme="https://lixint.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="https://lixint.github.io/tags/Hexo/"/>
    
      <category term="Next主题" scheme="https://lixint.github.io/tags/Next%E4%B8%BB%E9%A2%98/"/>
    
      <category term="博客搭建" scheme="https://lixint.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>本地安装Hexo博客框架及发布至Github Pages</title>
    <link href="https://lixint.github.io/hexo-githubpages.html"/>
    <id>https://lixint.github.io/hexo-githubpages.html</id>
    <published>2018-11-22T12:23:35.000Z</published>
    <updated>2020-03-08T14:04:17.041Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2020年03月08日22:04</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"><br><blockquote class="blockquote-center"><p>欢迎加入博客搭建交流群（QQ群号60429576）==&gt;<a style="color:#ff0033" href="http://qq.cn.hn/g6Y" title="QQ群号60429576" rel="noopener" target="_blank"><strong>点击加入</strong></a>&lt;==</p></blockquote><br>前面的文章中我们进行了<br><strong>1. </strong><a href="githubpage.html" title="Github注册以及Github Pages创建">Github注册以及Github Pages创建</a><br><strong>2. </strong> <a href="hexo-git.html" title="Hexo博客本地环境安装">Hexo博客本地环境安装</a><br>下一步，我们就要进行本地Hexo博客框架的搭建，完成一个能够在本地访问的博客页面。</p><h3 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h3><p><a href="https://hexo.io/zh-cn/" rel="noopener" title="Hexo中文官方网站" target="_blank">Hexo</a>是一个快速, 简洁且高效的博客框架. 让上百个页面在几秒内瞬间完成渲染. <code>Hexo</code>支持<code>Github Flavored Markdown</code>的所有功能, 甚至可以整合<code>Octopress</code>的大多数插件. 并自己也拥有强大的插件系统。</p><h3 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h3><p>本步骤需要Git与Node.js的支持，如果没有安装的话请参照<a href="hexo-git.html" title="Hexo博客本地环境安装">Hexo博客本地环境安装</a>进行安装。</p><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><p>电脑中任选盘符新建一个文件夹作为博客网站的根目录，文件名好不要是中文。<br>空白处右键点击<code>Git Bash here</code><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/blog20181122204735.png" alt="blog20181122204735"><br>在<img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/blog20181122205327.png" alt="blog20181122205327"><br>出现的命令行窗口中输入<code>npm install -g hexo-cli</code>，等待运行完成依次输入以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;新建文件夹的名称&gt;</span><br><span class="line">cd &lt;新建文件夹的名称&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/1542892357260.png" alt="1542892357260"><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/1542892463508.png" alt="1542892463508">等待运行完成，此时文件夹中多了许多文件。<br><strong>注意</strong>：<strong>后续的命令均需要在<a style="color:#DC143C">站点目录</a>下（即文件夹内）使用Git Bash运行。</strong><br>此时Hexo框架的本地搭建已经完成了。我们来运行一下看看：<br>命令行依次输入以下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/1542892849938.png" alt="1542892849938"><br>浏览器中打开<a style="color:#fffff">http://locakhost:4000</a>或者<a style="color:#fffff">127.0.0.1:4000</a><br>可以看到一个网页，说明Hexo博客已经成功在本地运行。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/1542893053692.png" alt="1542893053692"></p><h3 id="本地博客发布到Github-Pages"><a href="#本地博客发布到Github-Pages" class="headerlink" title="本地博客发布到Github Pages"></a>本地博客发布到Github Pages</h3><p><strong>第一步</strong>，需要在Github上创建好Github Pages仓库。<a href="githubpage.html" title="Github注册以及Github Pages创建">Github注册以及Github Pages创建</a><br><strong>第二步</strong>，安装发布插件。<br>在<strong>站点目录</strong>中运行命令行输入<code>npm install hexo-deployer-git --save</code><br>后续博客的修改等等各种功能  都需要安装各种<strong>插件</strong>。这个对博客的帮助是非常大的。<br>等待插件安装完成。<br><strong>第三步</strong>，将本地目录与Github关联起来。<br>命令行输入<code>ssh-keygen -t rsa -C &quot;邮箱地址&quot;</code>，这里要输入之前注册Github时的邮箱，例如我之前注册用的是 <a style="color:#fffff">example@163.com</a>，那命令行就输入<code>ssh-keygen -t rsa -C &quot;example@163.com&quot;</code>输入后一直回车。<br>打开<code>C:\Users\用户名</code>，文件夹内寻找<code>.ssh</code>文件夹<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/1543324211395.png" alt="1543324211395"><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/1543324256289.png" alt="1543324256289"><br>文件夹内会有两个文件，一个<code>id_rsa.pub</code>一个<code>id_rsa</code>，用文本方式打开<code>id_rsa.pub</code>，推荐使用Notepad++，复制里面的的内容。<br>打开Github 点击右上角的头像 Settings  选择SSH and GPG keys<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/1543324878366.png" alt="1543324878366"><br>点击New SSH key  将之前复制的内容粘帖到Key的框中。  上面的title 可以随意  点击add  完成添加。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/1543324991690.png" alt="1543324991690"><br>此时回到命令行。 试一下是否跟Github连接成功。命令行输入<code>ssh -T git@github.com</code> ，弹出的内容输入<code>yes</code>，看到出现<code>Hi &lt;account name&gt;! You&#39;ve successfully authenticated, but GitHub doesnot provide shell access.</code> 说明链接成功。此处这个<code>&lt;account name&gt;</code>应该是你Github的用户名。<br><strong>第四步</strong> 修改Hexo站点的配置文件。<br>进入博客文件夹，找到<code>_config.yml</code>文件。 这个是<strong>博客配置文件</strong>，后面的修改会多次用到它。用<strong>Notepad++</strong>打开。<br>修改一下title跟url等，url修改为<code>https://&lt;用户名&gt;.github.io</code>，例如我的用户名是example的话，就应该输入<code>https://example.github.io</code><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/1543325561106.png" alt="1543325561106"><br>拉到文件最底部，在deploy下面添加一个repo项  一个branch项。填入如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">type: git</span><br><span class="line">repo: git@github.com:&lt;Github用户名&gt;/&lt;github用户名&gt;.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><p>图中也是以用户名为example为例。填写完成后保存即可。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/1543325906143.png" alt="1543325906143"><br><strong>第五步</strong> 生成页面上传至Github<br>命令行输入<code>hexo g</code>，此时Hexo会根据配置文件渲染出一套静态页面。<br>完成后输入<code>hexo d</code>，此时会将之前渲染出的一系列文件上传至Github。<br><strong>Tips</strong>： 也可以直接输入<code>hexo g -d</code>直接完成渲染和上传。<br>上传完成后，打开<a style="color:#fffff"><em>https://&lt;用户名&gt;.github.io</em></a>查看上传的网页。如果页面变成了之前本地调试时的样子，说明上传以及完成了。没变的话查看一下上传时命令行窗口的信息有没有错误信息，没有的话清除一下浏览器缓存试试。</p>]]></content>
    
    <summary type="html">
    
      从零开始搭建博客第三部分，本地安装Hexo博客框架并发布至Github Pages
    
    </summary>
    
      <category term="博客搭建" scheme="https://lixint.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Github Pages" scheme="https://lixint.github.io/tags/Github-Pages/"/>
    
      <category term="Github" scheme="https://lixint.github.io/tags/Github/"/>
    
      <category term="Git" scheme="https://lixint.github.io/tags/Git/"/>
    
      <category term="博客搭建" scheme="https://lixint.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
</feed>
